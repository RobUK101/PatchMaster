// PatchMaster

// Version 1.7

// Written by Robert Marshall - Freeware - 2018 - No rights reserved - All usage  is allowed short of complete piracy or slight release with cosmetic differences

// Freeware - No rights or copyright reserved 

// Use as you see fit, but I ask if you make use of the project ping me a shout on twitter @robmvp

using System;
using System.Net;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using System.Management;
using Microsoft.Win32;
using Microsoft.ConfigurationManagement.ManagementProvider;
using Microsoft.ConfigurationManagement.ManagementProvider.WqlQueryEngine;
using System.IO;
using System.Security.Cryptography;
using Microsoft.UpdateServices.Administration;
using System.Diagnostics;
using System.Threading;
using System.Runtime.InteropServices;

namespace PatchMaster
{
    public partial class Form1 : Form
    {
        // Global variables

        const string ignorepatchMsg = "Patch found that will be ignored";

        private wsusclassificationsCollection globalwsusClassifications = new wsusclassificationsCollection();

        private wsusproductsCollection globalwsusProducts = new wsusproductsCollection();

        private wsuslanguagesCollection globalwsusLanguages = new wsuslanguagesCollection();

        private securityScopesCollection globalsecurityScopes = new securityScopesCollection();

        private collectionCollection globalCollections = new collectionCollection();

        private string waitimageString = "";

        private string tombakerStringOn = "";

        private string tombakerStringOff = "";

        private string bigLogo = "";
        
        private string[,] languageTable = new string[,] // Until I can translate this in WMI I need a lookup table to convert the WSUS localizedcategoryinstancename property in SMS_CIContentFiles filtered on 'locale' into an LCID(?) or country code equiv value (English = 1033 et al)
        {
            {"Arabic","1025"},
            {"Chinese (Traditional, Hong Kong SAR)","3076"},
            {"Chinese (Traditional, Taiwan)","1028"},
            {"Chinese (Simplified, China)","2052"},
            {"Czech","1029"},
            {"Danish","1030"},
            {"Dutch","1043"},
            {"English","1033"},
            {"Finnish","1035"},
            {"French","1036"},
            {"German","1031"},
            {"Greek","1032"},
            {"Hebrew","1037"},
            {"Hungarian","1038"},
            {"Italian","1040"},
            {"Japanese","1041"},
            {"Korean","1042"},
            {"Norwegian","1044"},
            {"Polish","1045"},
            {"Portuguese","2070"},
            {"Portuguese (Brazil)","1046"},
            {"Russian","1049"},
            {"Spanish","1034"},
            {"Swedish","1053"},
            {"Turkish","1055"},
            {"Estonian","1061"},
            {"Bulgarian","1026"},
            {"Serbian","9242"},
            {"Romanian","1048"},
            {"Slovenian","1060"},
            {"Hindi","1081"},
            {"Slovak","1051"},
            {"Thai","1054"},
            {"Latvian","1062"},
            {"Lithuanian","1063"},
            {"Ukrainian","1058"},
            {"Croatian","1050"}
        };

        // Special

        class MyWrapper
        {
            private Control control;

            public MyWrapper(Control control)
            {
                this.control = control;
            }

            public Control Control
            {
                get { return control; }
            }
        }

        // Classes

        public class collectioncollectionItem
        {
            public string collectionName { get; set; }
        }

        public class collectionCollection : System.Collections.CollectionBase
        {
            public void Add(collectioncollectionItem ascollectionItem)
            {
                List.Add(ascollectionItem);
            }

            public void RemoveAll()
            {
                for (int i = 0; i <= List.Count; i++)
                {
                    List.RemoveAt(i);
                }
            }

            public void Remove(int index)
            {
                if (index > Count - 1 || index < 0)
                {
                }
                else
                {
                    List.RemoveAt(index);
                }
            }
            public collectioncollectionItem Item(int Index)
            {
                return (collectioncollectionItem)List[Index];
            }
        }

        public class securityScopesItem
        {
            public string securityscopeName { get; set; }
        }

        public class securityScopesCollection : System.Collections.CollectionBase
        {
            public void Add(securityScopesItem asecurityScopesItem)
            {
                List.Add(asecurityScopesItem);
            }

            public void RemoveAll()
            {
                for (int i = 0; i <= List.Count; i++)
                {
                    List.RemoveAt(i);
                }
            }

            public void Remove(int index)
            {
                if (index > Count - 1 || index < 0)
                {
                }
                else
                {
                    List.RemoveAt(index);
                }
            }
            public securityScopesItem Item(int Index)
            {
                return (securityScopesItem)List[Index];
            }
        }

        public class wsusclassificationsItem
        {
            public string classificationName { get; set; }
        }

        public class wsusclassificationsCollection : System.Collections.CollectionBase
        {
            public void Add(wsusclassificationsItem awsusclassificationsItem)
            {
                List.Add(awsusclassificationsItem);
            }

            public void RemoveAll()
            {
                for (int i = 0; i <= List.Count; i++)
                {
                    List.RemoveAt(i);
                }
            }

            public void Remove(int index)
            {
                if (index > Count - 1 || index < 0)
                {
                }
                else
                {
                    List.RemoveAt(index);
                }
            }

            public wsusclassificationsItem Item(int Index)
            {
                return (wsusclassificationsItem)List[Index];
            }
        }

        public class wsusproductsItem
        {
            public string productName { get; set; }
        }

        public class wsusproductsCollection : System.Collections.CollectionBase
        {
            public void Add(wsusproductsItem awsusproductsItem)
            {
                List.Add(awsusproductsItem);
            }

            public void RemoveAll()
            {
                for (int i = 0; i <= List.Count; i++)
                {
                    List.RemoveAt(i);
                }
            }

            public void Remove(int index)
            {
                if (index > Count - 1 || index < 0)
                {
                }
                else
                {
                    List.RemoveAt(index);
                }
            }

            public wsusproductsItem Item(int Index)
            {
                return (wsusproductsItem)List[Index];
            }
        }

        public class wsuslanguagesItem
        {
            public string languageName { get; set; }
            public string LocaLe { get; set; }
        }

        public class wsuslanguagesCollection : System.Collections.CollectionBase
        {
            public void Add(wsuslanguagesItem awsuslanguagesItem)
            {
                List.Add(awsuslanguagesItem);
            }

            public void RemoveAll()
            {
                for (int i = 0; i <= List.Count; i++)
                {
                    List.RemoveAt(i);
                }
            }

            public void Remove(int index)
            {
                if (index > Count - 1 || index < 0)
                {
                }
                else
                {
                    List.RemoveAt(index);
                }
            }

            public wsuslanguagesItem Item(int Index)
            {
                return (wsuslanguagesItem)List[Index];
            }
        }

        // Code

        public Form1()
        {
            InitializeComponent();
        }

        private void getwsusconfigClassifications(BackgroundWorker theWorker)
        {
            try
            {
                IResultObject classificationsList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_UpdateCategoryInstance where CategoryTypeName='UpdateClassification' and AllowSubscription=1 and IsSubscribed = 1");

                foreach (IResultObject aClassification in classificationsList)
                {
                    wsusclassificationsItem awsusClassification = new wsusclassificationsItem();

                    awsusClassification.classificationName = aClassification["LocalizedCategoryInstanceName"].StringValue;

                    globalwsusClassifications.Add(awsusClassification);
                }

                theWorker.ReportProgress(0, " Retrieved " + globalwsusClassifications.Count + " Classifications");
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Failed to retrieve Classifications");
            }
        }

        private void getwsusconfigProducts(BackgroundWorker theWorker)
        {
            try
            {
                IResultObject productsList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_UpdateCategoryInstance where (CategoryTypeName='Product' or CategoryTypeName='ProductFamily' or CategoryTypeName='Company') and AllowSubscription=1 and IsSubscribed=1");

                foreach (IResultObject aProduct in productsList)
                {
                    wsusproductsItem awsusproductsItem = new wsusproductsItem();

                    awsusproductsItem.productName = aProduct["LocalizedCategoryInstanceName"].StringValue;

                    globalwsusProducts.Add(awsusproductsItem);
                }

                theWorker.ReportProgress(0, " Retrieved " + globalwsusProducts.Count + " Products");
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Failed to retrieve Products");
            }
        }

        private string convertLanguagesToIDs(string languageNames)
        {
            List<string> languagenameList = languageNames.Split(',').ToList();

            string returnValue = "0";
            
            if (languagenameList.Count() > 0)
            {
                foreach (string languageName in languagenameList)
                {
                    for (int i = 0; i<languageTable.GetUpperBound(0); i++)
                    {
                        if (languageTable[i,0] == languageName)
                        {
                            returnValue = returnValue + "," + languageTable[i, 1];
                        }
                    }
                }
            }

            return returnValue;
        }



        private void getwsusconfigLanguages(BackgroundWorker theWorker)
        {
            try
            {
                IResultObject languageList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_CategoryInstance where CategoryTypeName = 'Locale'");

                foreach (IResultObject aLanguage in languageList)
                {
                    wsuslanguagesItem awsulanguageItem = new wsuslanguagesItem();

                    awsulanguageItem.languageName = aLanguage["LocalizedCategoryInstanceName"].StringValue;

                    globalwsusLanguages.Add(awsulanguageItem);

                    Debug.WriteLine(awsulanguageItem);

                    Console.WriteLine(awsulanguageItem);

                    Debug.Write("AAAA");
                }

                theWorker.ReportProgress(0, " Retrieved " + globalwsusLanguages.Count + " Languages");
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Failed to retrieve Languages");
            }
        }

        private void getwsusConfig(BackgroundWorker theWorker)
        {
            getwsusconfigClassifications(theWorker);
            getwsusconfigProducts(theWorker);
            getwsusconfigLanguages(theWorker);
        }

        private void getsecurityScopes(BackgroundWorker theWorker)
        {
            try
            {
                IResultObject securityscopesList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("SELECT CategoryId, categoryDescription, categoryName, isBuiltIn, createdBy, createdDate, lastModifiedBy, lastModifiedDate, SourceSite, NumberOfAdmins, NumberOfObjects FROM SMS_SecuredCategory ORDER BY CategoryName");

                foreach (IResultObject asecurityscopelistItem in securityscopesList)
                {
                    securityScopesItem asecurityScope = new securityScopesItem();

                    asecurityScope.securityscopeName = asecurityscopelistItem["categoryName"].StringValue;

                    if (asecurityScope.securityscopeName != "All")
                    {
                        globalsecurityScopes.Add(asecurityScope);
                    }
                }

                theWorker.ReportProgress(0, " Retrieved " + globalsecurityScopes.Count + " Security Scopes");
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Failed to retrieve Security Scopes");
            }
        }

        private void getconfigmgrPatches(BackgroundWorker theWorker)
        {
            bool canretrievePatches = true;

            if (globalObjects.GlobalClass.loadthreadRunning)
            {
                globalObjects.GlobalClass.patchcacheStopwatch.Start();

                canretrievePatches = true;
            }
            else
            {
                if (!globalObjects.GlobalClass.patchcacheStopwatch.IsRunning)
                {
                    globalObjects.GlobalClass.patchcacheStopwatch.Start();

                    canretrievePatches = true;
                }
                else
                {
                    if (globalObjects.GlobalClass.patchcacheStopwatch.ElapsedMilliseconds > 7200000)
                    {
                        globalObjects.GlobalClass.patchcacheStopwatch.Reset();

                        canretrievePatches = true;
                    }
                    else
                    {
                        canretrievePatches = false;
                    }
                }
            }

            if (globalObjects.GlobalClass.forceScan) // Final override
            {
                if (theWorker == null)
                {
                    sharedlogMessage("Expiring PatchMasters ConfigMgr patch cache", false);
                }
                else
                {
                    theWorker.ReportProgress(0, "Expiring PatchMasters ConfigMgr patch cache");
                }

                canretrievePatches = true;
            }

            if (canretrievePatches)
            {
                globalObjects.GlobalClass.sccmPatches.Clear();

                try
                {
                    if (theWorker == null)
                    {
                        sharedlogMessage("Retrieving Patches from ConfigMgr ...", false);
                    }
                    else
                    {
                        theWorker.ReportProgress(0, "Retrieving Patches from ConfigMgr ...");
                    }

                    IResultObject wsuspatchList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_SoftwareUpdate SU where SU.IsLatest = 1 and SU.IsExpired = 0 and SU.IsSuperseded = 0 and SU.IsDeployed = 0"); // Part of duplicate handling, will block any patch deployed

                    foreach (IResultObject awsuspatchlistItem in wsuspatchList)
                    {
                        globalObjects.sccmPatch storesccmpatch = new globalObjects.sccmPatch();

                        storesccmpatch.ArticleID = awsuspatchlistItem["ArticleID"].StringValue;

                        // Store Localized Display Name

                        storesccmpatch.LocalizedDisplayName = awsuspatchlistItem["LocalizedDisplayName"].StringValue;

                        // Store Lcoalized Category Instance Names

                        List<string> tmpcategoryList = new List<string>();

                        string[] tmpLocalizedCategoryInstanceNames = awsuspatchlistItem["LocalizedCategoryInstanceNames"].StringArrayValue;

                        foreach (string anElement in tmpLocalizedCategoryInstanceNames)
                        {
                            tmpcategoryList.Add(anElement);

                        }

                        storesccmpatch.LocalizedCategoryInstanceNames = tmpcategoryList;

                        storesccmpatch.CI_UniqueID = awsuspatchlistItem["CI_UniqueID"].StringValue;

                        storesccmpatch.CI_ID = Convert.ToInt32(awsuspatchlistItem["CI_ID"].StringValue);

                        // Store Update Locales

                        string[] tmpupdateLocales = awsuspatchlistItem["UpdateLocales"].StringArrayValue;

                        List<string> tmplocaleList = new List<string>();

                        foreach (string anElement in tmpupdateLocales)
                        {
                            tmplocaleList.Add(anElement);
                        }

                        storesccmpatch.UpdateLocales = tmplocaleList;

                        storesccmpatch.DateCreated = awsuspatchlistItem["DateCreated"].DateTimeValue;
                        storesccmpatch.DateLastModified = awsuspatchlistItem["DateLastModified"].DateTimeValue;
                        storesccmpatch.DatePosted = awsuspatchlistItem["DatePosted"].DateTimeValue;
                        storesccmpatch.DateRevised = awsuspatchlistItem["DateRevised"].DateTimeValue;

                        globalObjects.GlobalClass.sccmPatches.Add(storesccmpatch);
                    }

                    if (theWorker == null)
                    {
                        sharedlogMessage(" Retrieved " + globalObjects.GlobalClass.sccmPatches.Count + " Patches", false);
                    }
                    else
                    {
                        theWorker.ReportProgress(0, " Retrieved " + globalObjects.GlobalClass.sccmPatches.Count + " Patches");
                    }
                }
                catch (Exception ee)
                {
                    if (theWorker == null)
                    {
                        sharedlogMessage(" Failed to retrieve Patches", false);
                    }
                    else
                    {
                        theWorker.ReportProgress(0, " Retrieved " + globalObjects.GlobalClass.sccmPatches.Count + " Patches");
                    }
                }
            }
            else
            {
                if (theWorker == null)
                {
                    sharedlogMessage("PatchMaster patch cache is under 2 hours old, will continue to use it for now ", false);
                }
                else
                {
                    theWorker.ReportProgress(0, "PatchMaster patch cache is under 2 hours old, will continue to use it for now ");
                }
            }
        }

        private void setRegistry(string registryValue, object Value)
        {
            Microsoft.Win32.RegistryKey key;

            try
            {
                key = Microsoft.Win32.Registry.LocalMachine.CreateSubKey("Software\\SMSMarshall\\PatchMaster");
                key.SetValue(registryValue, Value);
                key.Close();
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not write to the Registry - " + ee.Message, false);
            }
        }

        private object getRegistry(string registryValue)
        {
            try
            {
                var Value = Registry.GetValue("HKEY_LOCAL_MACHINE\\Software\\SMSMarshall\\PatchMaster", registryValue, "");

                return Value;
            }
            catch (Exception e)
            {

            }

            return "";
        }

        private void getpatchdevicetypefromRegistry()
        {
            try
            {
                if (getRegistry("PatchDeviceTypes") == "")
                {
                    globalObjects.GlobalClass.devicetypeList.Add("Client");
                    globalObjects.GlobalClass.devicetypeList.Add("ThinClient");
                    globalObjects.GlobalClass.devicetypeList.Add("Server");

                    setRegistry("PatchDeviceTypes", globalObjects.GlobalClass.devicetypeList.ToArray());
                }

                string[] devicetypeList = (string[])getRegistry("PatchDeviceTypes");

                globalObjects.GlobalClass.devicetypeList.Clear();

                foreach (string adeviceType in devicetypeList)
                {
                    globalObjects.GlobalClass.devicetypeList.Add(adeviceType);
                }                
            }
            catch (Exception ee)
            {

            }
        }

        private globalObjects.ruleitemCollection convertruleitemcollectionfromReg(string[] aruleitemArray)
        {
            globalObjects.ruleitemCollection toReturn = new globalObjects.ruleitemCollection();

            try
            {
                foreach (string aruleItem in aruleitemArray)
                {
                    string[] splitruleItem = aruleItem.Split('|');

                    if (splitruleItem.Count() == 7) // Has correct amount of properties
                    {
                        try
                        {
                            globalObjects.ruleItem anewruleItem = new globalObjects.ruleItem();

                            anewruleItem.DeviceType = splitruleItem[0];
                            anewruleItem.Architectures = splitruleItem[1];
                            anewruleItem.Products = splitruleItem[2];
                            anewruleItem.Classifications = splitruleItem[3];
                            anewruleItem.Languages = splitruleItem[4];
                            anewruleItem.IncludeRule = splitruleItem[5];
                            anewruleItem.ExcludeRule = splitruleItem[6];

                            toReturn.Add(anewruleItem);
                        }
                        catch (Exception ee)
                        {

                        }
                    }
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn;
        }
        private globalObjects.deploymentruleCollection deploymentrulesconvertfromReg(string[] deploymentRules)
        {
            globalObjects.deploymentruleCollection toReturn = new globalObjects.deploymentruleCollection();

            try
            {
                foreach (string adeploymentRule in deploymentRules)
                {
                    string[] tmpdeploymentRule = adeploymentRule.Split('|');

                    if (tmpdeploymentRule.Count() == 8) // Has correct amount of properties
                    {
                        try
                        {
                            globalObjects.deploymentItem newdeploymentRule = new globalObjects.deploymentItem();

                            newdeploymentRule.DeviceType = tmpdeploymentRule[0];
                            newdeploymentRule.TargetCollection = tmpdeploymentRule.ToString();
                            newdeploymentRule.DeploymentTag = tmpdeploymentRule[2].ToString();
                            newdeploymentRule.Intent = tmpdeploymentRule[3].ToString();
                            newdeploymentRule.AvailDaysOffset = tmpdeploymentRule[4].ToString();
                            newdeploymentRule.AvailTimeOffset = tmpdeploymentRule[5].ToString();
                            newdeploymentRule.DeadlineDaysOffset = tmpdeploymentRule[6].ToString();
                            newdeploymentRule.DeadlineTimeOffset = tmpdeploymentRule[7].ToString();

                            toReturn.Add(newdeploymentRule);
                        }
                        catch (Exception ee)
                        {

                        }
                    }
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn;
        }

        private globalObjects.ignorepatchesCollection ignorepatchesconvertfromReg(string[] ignorepatchesRule)
        {
            globalObjects.ignorepatchesCollection toReturn = new globalObjects.ignorepatchesCollection();

            try
            {
                foreach (string aignorePatch in ignorepatchesRule)
                {
                    string[] tmpignorePatch = aignorePatch.Split('|');

                    if (tmpignorePatch.Count() == 4) // Has correct amount of properties
                    {
                        try
                        {
                            globalObjects.ignorepatchesItem newignorepathcRule = new globalObjects.ignorepatchesItem();

                            newignorepathcRule.PatchKB = tmpignorePatch[0].ToString();
                            newignorepathcRule.DisplayName = tmpignorePatch[1].ToString();
                            newignorepathcRule.Product = tmpignorePatch[2].ToString();
                            newignorepathcRule.Classification = tmpignorePatch[3].ToString();

                            toReturn.Add(newignorepathcRule);
                        }
                        catch (Exception ee)
                        {

                        }
                    }
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn;
        }

        private globalObjects.securityscopeCollection securityscopesconvertfromReg(string[] securityscopeRules)
        {
            globalObjects.securityscopeCollection toReturn = new globalObjects.securityscopeCollection();

            try
            {
                foreach (string aecurityScope in securityscopeRules)
                {
                    string[] tmpecurityScope = aecurityScope.Split('|');

                    if (tmpecurityScope.Count() == 3) // Has correct amount of properties
                    {
                        try
                        {
                            globalObjects.securityscopeItem newsecurityscopeRule = new globalObjects.securityscopeItem();

                            newsecurityscopeRule.DeviceGroup = tmpecurityScope[0].ToString();
                            newsecurityscopeRule.Scope = tmpecurityScope[1].ToString();
                            newsecurityscopeRule.ScopeType = tmpecurityScope[2].ToString();

                            toReturn.Add(newsecurityscopeRule);
                        }
                        catch (Exception ee)
                        {

                        }
                    }
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn;
        }

        private globalObjects.deploymentpropertyCollection deploymentpropertyconvertfromReg(string[] deploymentProperties)
        {
            globalObjects.deploymentpropertyCollection toReturn = new globalObjects.deploymentpropertyCollection();

            try
            {
                foreach (string adeploymentProperty in deploymentProperties)
                {
                    string[] tmpdeploymentPropery = adeploymentProperty.Split(',');

                    if (tmpdeploymentPropery.Count() == 21) // Has correct amount of properties
                    {
                        try
                        {
                            globalObjects.deploymentProperty newdeploymentProperty = new globalObjects.deploymentProperty();

                            newdeploymentProperty.DeviceGroup = tmpdeploymentPropery[0];
                            newdeploymentProperty.DisableMomAlerts = Convert.ToBoolean(tmpdeploymentPropery[1]);
                            newdeploymentProperty.DPLocality = Convert.ToInt32(tmpdeploymentPropery[2]);
                            newdeploymentProperty.LimitStateMessageVerbosity = Convert.ToBoolean(tmpdeploymentPropery[3]);
                            newdeploymentProperty.LogComplianceToWinEvent = Convert.ToBoolean(tmpdeploymentPropery[4]);
                            newdeploymentProperty.NotifyUser = Convert.ToBoolean(tmpdeploymentPropery[5]);
                            newdeploymentProperty.OverrideServiceWindows = Convert.ToBoolean(tmpdeploymentPropery[6]);
                            newdeploymentProperty.PersistOnWriteFilterDevices = Convert.ToBoolean(tmpdeploymentPropery[7]);
                            newdeploymentProperty.RaiseMomAlertsOnFailure = Convert.ToBoolean(tmpdeploymentPropery[8]);
                            newdeploymentProperty.RebootOutsideOfServiceWindows = Convert.ToBoolean(tmpdeploymentPropery[9]);
                            newdeploymentProperty.RequirePostRebootFullScan = Convert.ToBoolean(tmpdeploymentPropery[10]);
                            newdeploymentProperty.SendDetailedNonComplianceStatus = Convert.ToBoolean(tmpdeploymentPropery[11]);
                            newdeploymentProperty.SoftDeadlineEnabled = Convert.ToBoolean(tmpdeploymentPropery[12]);
                            newdeploymentProperty.StateMessagePriority = tmpdeploymentPropery[13];
                            newdeploymentProperty.StateMessageVerbosity = tmpdeploymentPropery[14];
                            newdeploymentProperty.SuppressReboot = Convert.ToInt16(tmpdeploymentPropery[15]);
                            newdeploymentProperty.UseBranchCache = Convert.ToBoolean(tmpdeploymentPropery[16]);
                            newdeploymentProperty.UseGMTTimes = Convert.ToBoolean(tmpdeploymentPropery[17]);
                            newdeploymentProperty.UserUIExperience = Convert.ToBoolean(tmpdeploymentPropery[18]);
                            newdeploymentProperty.WoLEnabled = Convert.ToBoolean(tmpdeploymentPropery[19]);
                            newdeploymentProperty.RandomizationEnabled = Convert.ToBoolean(tmpdeploymentPropery[20]);

                            toReturn.Add(newdeploymentProperty);
                        }
                        catch (Exception ee)
                        {

                        }
                    }
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn;
        }

        private string[] deploymentpropertyconverttoReg(globalObjects.deploymentpropertyCollection deploymentProperties)
        {
            List<string> toReturn = new List<string>();

            try
            {

                foreach (globalObjects.deploymentProperty adeploymentProperty in deploymentProperties)
                {
                    List<string> tmpList = new List<string>();

                    tmpList.Add(adeploymentProperty.DeviceGroup);
                    tmpList.Add(adeploymentProperty.DisableMomAlerts.ToString());
                    tmpList.Add(adeploymentProperty.DPLocality.ToString());
                    tmpList.Add(adeploymentProperty.LimitStateMessageVerbosity.ToString());
                    tmpList.Add(adeploymentProperty.LogComplianceToWinEvent.ToString());
                    tmpList.Add(adeploymentProperty.NotifyUser.ToString());
                    tmpList.Add(adeploymentProperty.OverrideServiceWindows.ToString());
                    tmpList.Add(adeploymentProperty.PersistOnWriteFilterDevices.ToString());
                    tmpList.Add(adeploymentProperty.RaiseMomAlertsOnFailure.ToString());
                    tmpList.Add(adeploymentProperty.RebootOutsideOfServiceWindows.ToString());
                    tmpList.Add(adeploymentProperty.RequirePostRebootFullScan.ToString());
                    tmpList.Add(adeploymentProperty.SendDetailedNonComplianceStatus.ToString());
                    tmpList.Add(adeploymentProperty.SoftDeadlineEnabled.ToString());
                    tmpList.Add(adeploymentProperty.StateMessagePriority.ToString());
                    tmpList.Add(adeploymentProperty.StateMessageVerbosity.ToString());
                    tmpList.Add(adeploymentProperty.SuppressReboot.ToString());
                    tmpList.Add(adeploymentProperty.UseBranchCache.ToString());
                    tmpList.Add(adeploymentProperty.UseGMTTimes.ToString());
                    tmpList.Add(adeploymentProperty.UserUIExperience.ToString());
                    tmpList.Add(adeploymentProperty.WoLEnabled.ToString());
                    tmpList.Add(adeploymentProperty.RandomizationEnabled.ToString());

                    string[] tmpstringArray;

                    tmpstringArray = tmpList.ToArray();

                    toReturn.Add(String.Join(",", tmpList));
                }
            }
            catch (Exception ee)
            {

            }

            return toReturn.ToArray();
        }

        private void getdeploymentpropertiesReg()
        {
            globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Clear();

            try
            {
                string[] deploymentProperties = (string[])getRegistry("PatchDeploymentProperties");

                if (deploymentProperties.Count() == 0) throw new Exception();

                globalObjects.GlobalClass.globaldeploymentpropertiesCollection = deploymentpropertyconvertfromReg(deploymentProperties); // Converts from string array to globalObjects.deploymentpropertyCollection                              
            }
            catch (Exception ee) // Key doesn't exist, treat as first time, build Client, Server and ThinClient as defaults
            {
                globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Clear();

                globalObjects.deploymentProperty aclientdeploymentProperty = new globalObjects.deploymentProperty();

                aclientdeploymentProperty.DeviceGroup = "Client";
                aclientdeploymentProperty.DisableMomAlerts = true;
                aclientdeploymentProperty.DPLocality = 80;
                aclientdeploymentProperty.LimitStateMessageVerbosity = false;
                aclientdeploymentProperty.LogComplianceToWinEvent = false;
                aclientdeploymentProperty.NotifyUser = false;
                aclientdeploymentProperty.OverrideServiceWindows = true;
                aclientdeploymentProperty.PersistOnWriteFilterDevices = true;
                aclientdeploymentProperty.RaiseMomAlertsOnFailure = false;
                aclientdeploymentProperty.RebootOutsideOfServiceWindows = true;
                aclientdeploymentProperty.RequirePostRebootFullScan = true;
                aclientdeploymentProperty.SendDetailedNonComplianceStatus = true;
                aclientdeploymentProperty.SoftDeadlineEnabled = true;
                aclientdeploymentProperty.StateMessagePriority = "Normal";
                aclientdeploymentProperty.StateMessageVerbosity = "All";
                aclientdeploymentProperty.SuppressReboot = 2;
                aclientdeploymentProperty.UseBranchCache = true;
                aclientdeploymentProperty.UseGMTTimes = false;
                aclientdeploymentProperty.UserUIExperience = false;
                aclientdeploymentProperty.WoLEnabled = false;
                aclientdeploymentProperty.RandomizationEnabled = true;

                globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Add(aclientdeploymentProperty);

                globalObjects.deploymentProperty aserverdeploymentProperty = new globalObjects.deploymentProperty();

                aserverdeploymentProperty.DeviceGroup = "Server";
                aserverdeploymentProperty.DisableMomAlerts = false;
                aserverdeploymentProperty.DPLocality = 80;
                aserverdeploymentProperty.LimitStateMessageVerbosity = false;
                aserverdeploymentProperty.LogComplianceToWinEvent = false;
                aserverdeploymentProperty.NotifyUser = true;
                aserverdeploymentProperty.OverrideServiceWindows = true;
                aserverdeploymentProperty.PersistOnWriteFilterDevices = true;
                aserverdeploymentProperty.RaiseMomAlertsOnFailure = true;
                aserverdeploymentProperty.RebootOutsideOfServiceWindows = true;
                aserverdeploymentProperty.RequirePostRebootFullScan = true;
                aserverdeploymentProperty.SendDetailedNonComplianceStatus = true;
                aserverdeploymentProperty.SoftDeadlineEnabled = true;
                aserverdeploymentProperty.StateMessagePriority = "Normal";
                aserverdeploymentProperty.StateMessageVerbosity = "All";
                aserverdeploymentProperty.SuppressReboot = 2;
                aserverdeploymentProperty.UseBranchCache = true;
                aserverdeploymentProperty.UseGMTTimes = false;
                aserverdeploymentProperty.UserUIExperience = true;
                aserverdeploymentProperty.WoLEnabled = false;
                aclientdeploymentProperty.RandomizationEnabled = false;

                globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Add(aserverdeploymentProperty);

                globalObjects.deploymentProperty athinclientdeploymentProperty = new globalObjects.deploymentProperty();

                athinclientdeploymentProperty.DeviceGroup = "ThinClient";
                athinclientdeploymentProperty.DisableMomAlerts = true;
                athinclientdeploymentProperty.DPLocality = 80;
                athinclientdeploymentProperty.LimitStateMessageVerbosity = false;
                athinclientdeploymentProperty.LogComplianceToWinEvent = false;
                athinclientdeploymentProperty.NotifyUser = false;
                athinclientdeploymentProperty.OverrideServiceWindows = true;
                athinclientdeploymentProperty.PersistOnWriteFilterDevices = true;
                athinclientdeploymentProperty.RaiseMomAlertsOnFailure = false;
                athinclientdeploymentProperty.RebootOutsideOfServiceWindows = true;
                athinclientdeploymentProperty.RequirePostRebootFullScan = true;
                athinclientdeploymentProperty.SendDetailedNonComplianceStatus = true;
                athinclientdeploymentProperty.SoftDeadlineEnabled = true;
                athinclientdeploymentProperty.StateMessagePriority = "Normal";
                athinclientdeploymentProperty.StateMessageVerbosity = "All";
                athinclientdeploymentProperty.SuppressReboot = 2;
                athinclientdeploymentProperty.UseBranchCache = true;
                athinclientdeploymentProperty.UseGMTTimes = false;
                athinclientdeploymentProperty.UserUIExperience = false;
                athinclientdeploymentProperty.WoLEnabled = false;
                aclientdeploymentProperty.RandomizationEnabled = false;

                globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Add(athinclientdeploymentProperty);

                string[] readyforRegistry = deploymentpropertyconverttoReg(globalObjects.GlobalClass.globaldeploymentpropertiesCollection); // Returns a string array

                setRegistry("PatchDeploymentProperties", readyforRegistry);
            }
        }

        private void getrulesReg()
        {
            globalObjects.GlobalClass.globalruleitemCollection.Clear();

            try
            { 
                string[] PatchRules = (string[])getRegistry("PatchRules");

                foreach (string patchRule in PatchRules)
                {
                    // Split into columns

                    List<string> apatchRule = patchRule.Split('|').ToList();

                    string handleArchitecture = "";

                    if (apatchRule[1].ToLower() != "x86" && apatchRule[1].ToLower() != "x64")
                    {
                        handleArchitecture = "Both";
                    }
                    else
                    {
                        handleArchitecture = apatchRule[1].ToLower();
                    }

                    globalObjects.ruleItem aruleItem = new globalObjects.ruleItem();

                    aruleItem.DeviceType = apatchRule[0];
                    aruleItem.Architectures = handleArchitecture;
                    aruleItem.Products = apatchRule[2];
                    aruleItem.Classifications = apatchRule[3];
                    aruleItem.Languages = apatchRule[4];
                    aruleItem.IncludeRule = apatchRule[5];
                    aruleItem.ExcludeRule = apatchRule[6];

                    globalObjects.GlobalClass.globalruleitemCollection.Add(aruleItem);
                }
            }
            catch (Exception e)
            {

            }
        }

        private void getdpsReg()
        {
            try
            {
                try
                {
                    globalObjects.GlobalClass.distributionpointRules.Clear();
                }
                catch (Exception ee)
                {

                }

                string[] PatchDPs = (string[])getRegistry("PatchDistributionPoints");

                foreach (string patchDP in PatchDPs)
                {
                    List<string> aDP = patchDP.Split('|').ToList(); // Split into columns

                    if (aDP.Count() > 0)
                    {                        
                        globalObjects.distributionpointItem adistributionpointItem = new globalObjects.distributionpointItem();

                        adistributionpointItem.Name = aDP[0];
                        adistributionpointItem.Type = aDP[1];
                        adistributionpointItem.ID = aDP[2];
                        adistributionpointItem.Sitecode = aDP[3];
                        adistributionpointItem.NALPath = aDP[4];

                        globalObjects.GlobalClass.distributionpointRules.Add(adistributionpointItem);
                    }
                }
            }
            catch (Exception e)
            {

            }
        }

        private void getdeploymentsReg()
        {
            try
            {
                globalObjects.GlobalClass.deploymentRules.Clear();

                string[] PatchRules = (string[])getRegistry("PatchDeployments");

                foreach (string patchRule in PatchRules)
                {
                    List<string> apatchRule = patchRule.Split('|').ToList(); // Split into columns

                    if (apatchRule[0] != "") // Get properties, if the deviceType is null it should be skipped
                    {
                        string tmpdeviceType = apatchRule[0].ToString();
                        string tmpcolTarget = apatchRule[1].ToString();

                        string tmpdepTag = "";

                        try
                        {
                            tmpdepTag = apatchRule[2].ToString();
                        }
                        catch (Exception ee)
                        {
                            tmpdepTag = "LIVE";
                        }

                        string tmpIntent = apatchRule[3].ToString();

                        string tmpavailDate = apatchRule[4].ToString();

                        string tmpavailTime = apatchRule[5].ToString();

                        string tmpdeadlineDate = apatchRule[6].ToString();

                        string tmpdeadlineTime = apatchRule[7].ToString();

                        globalObjects.deploymentItem adeploymentItem = new globalObjects.deploymentItem();

                        adeploymentItem.DeviceType = tmpdeviceType.ToString();
                        adeploymentItem.TargetCollection = tmpcolTarget;
                        adeploymentItem.DeploymentTag = tmpdepTag;
                        adeploymentItem.Intent = tmpIntent;
                        adeploymentItem.AvailDaysOffset = tmpavailDate;
                        adeploymentItem.AvailTimeOffset = tmpavailTime;
                        adeploymentItem.DeadlineDaysOffset = tmpdeadlineDate;
                        adeploymentItem.DeadlineTimeOffset = tmpdeadlineTime;

                        if (adeploymentItem.DeviceType != "" && adeploymentItem.TargetCollection != "" && adeploymentItem.DeploymentTag != "" && adeploymentItem.Intent != "" && adeploymentItem.AvailDaysOffset != "" && adeploymentItem.DeadlineDaysOffset != "")
                        {
                            globalObjects.GlobalClass.deploymentRules.Add(adeploymentItem);
                        }
                    }
                }
            }
            catch (Exception e)
            {

            }
        }
        private void getsecurityscopesReg()
        {
            try
            {
                try
                {
                    //dgv_SecurityScopes.Rows.Clear(); // ****

                    globalObjects.GlobalClass.securityscopeRules.Clear();
                }
                catch (Exception ee)
                {

                }

                string[] securityScopes = (string[])getRegistry("PatchSecurityScopes");

                foreach (string asecurityScope in securityScopes)
                {
                    List<string> tmpsplitsercurityScopes = asecurityScope.Split('|').ToList(); // Split into columns

                    tmpsplitsercurityScopes.Remove("All"); // Remove All as it is by default assigned to all Security Scopes

                    globalObjects.securityscopeItem asecurityscopeItem = new globalObjects.securityscopeItem();

                    asecurityscopeItem.DeviceGroup = tmpsplitsercurityScopes[0].ToString();
                    asecurityscopeItem.Scope = tmpsplitsercurityScopes[1].ToString();
                    asecurityscopeItem.ScopeType = tmpsplitsercurityScopes[2].ToString();

                    globalObjects.GlobalClass.securityscopeRules.Add(asecurityscopeItem);
                }
            }
            catch (Exception e)
            {

            }
        }


        private void applyconfigRegistry()
        {
            // Populate device type

            lb_deviceType.Items.Clear();

            this.c_deployments_DeviceType.Items.Clear();

            this.c_scoping_deviceType.Items.Clear();

            this.cb_deploymentdeviceGroup.Items.Clear();

            foreach (string aItem in globalObjects.GlobalClass.devicetypeList)
            {
                lb_deviceType.Items.Add(aItem);

                this.c_deployments_DeviceType.Items.Add(aItem);

                this.c_scoping_deviceType.Items.Add(aItem);

                this.cb_deploymentdeviceGroup.Items.Add(aItem);
            }

            lb_deviceType.Sorted = true;

            try // Change the drop-downs to reflect the loaded device types
            {                               
                if (globalObjects.GlobalClass.devicetypeList.Count() != 0)
                {
                    this.cb_deploymentdeviceGroup.SelectedIndex = 0;

                    populateCheckboxes();
                }
            }
            catch (Exception ee)
            {

            }

            if (!globalObjects.GlobalClass.SilentRunning)
            {
                // Add current rule to the DGV

                dgv_Transcript.Rows.Clear();

                foreach (globalObjects.ruleItem aruleItem in globalObjects.GlobalClass.globalruleitemCollection)
                {
                    dgv_Transcript.Rows.Add(aruleItem.DeviceType, aruleItem.Architectures, aruleItem.Products, aruleItem.Classifications, aruleItem.Languages, aruleItem.IncludeRule, aruleItem.ExcludeRule);                        
                }

                // Populate the DP List ComboBox

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    foreach (globalObjects.globaldistributionpointItem aglobaldistributionpointItem in globalObjects.GlobalClass.globaldistributionpointCollection)
                    {
                        if (aglobaldistributionpointItem.Type == "DP")
                        {
                            cb_dpList.Items.Add(aglobaldistributionpointItem.Name);
                        }
                    }
                }

                // Populate the selected DP List

                foreach (globalObjects.distributionpointItem adistributionpointItem in globalObjects.GlobalClass.distributionpointRules)
                {
                    dgv_distributionPoints.Rows.Add(adistributionpointItem.Name, adistributionpointItem.Type, adistributionpointItem.ID, adistributionpointItem.Sitecode, adistributionpointItem.NALPath);
                }

                // Populate force scan

                cb_forceScan.Checked = globalObjects.GlobalClass.forceScan;

                // Populate download retry

                nud_downloadRetry.Value = Convert.ToInt16(globalObjects.GlobalClass.DownloadFailureRetry);

                // Populate Package UNC

                tb_packagesourcePath.Text = globalObjects.GlobalClass.patchpathUNC;

                // Populate Patch folder

                tb_packageFolder.Text = globalObjects.GlobalClass.patchfolderPath;                

                // Populate ignore patches

                foreach (globalObjects.ignorepatchesItem aignorepatchesItem in globalObjects.GlobalClass.globalignorepatchesCollection)
                {
                    int ret = dgv_ignorePatches.Rows.Add(aignorepatchesItem.PatchKB, aignorepatchesItem.DisplayName, aignorepatchesItem.Product, aignorepatchesItem.Classification);
                }

                // Populate OOC tag

                tb_ooc_Tag.Text = globalObjects.GlobalClass.oocTag;            

                // Populate delimiter

                cb_patchnamingDelimiter.Text = globalObjects.GlobalClass.namingDelimiter;

                // Handle naming bar lock

                if (globalObjects.GlobalClass.namingbarlockStatus)
                {
                    cb_unlocknamingBar.Checked = true;

                    unlocknamingBar();
                }
                else
                {
                    cb_unlocknamingBar.Checked = false;

                    locknamingBar();
                }

                // Handle reporting checkboxes

                cb_createreportingSUGS.Checked = globalObjects.GlobalClass.allowreportingSUGS;

                cb_rollupclientOS.Checked = globalObjects.GlobalClass.rollupclientOS;

                cb_rollupserverOS.Checked = globalObjects.GlobalClass.rollupserverOS;

                cb_rollupOffice.Checked = globalObjects.GlobalClass.rollupoffice;

                // Set SUM Cleanup checkbox

                cb_runsumCleanup.Checked = globalObjects.GlobalClass.patchrunsumcleanuppostBuild;

                // Deployments

                try
                {
                    dgv_Deployments.Rows.Clear();                    
                }
                catch (Exception ee)
                {

                }

                foreach (globalObjects.deploymentItem adeploymentItem in globalObjects.GlobalClass.deploymentRules)
                {
                    int ret = dgv_Deployments.Rows.Add(adeploymentItem.DeviceType, adeploymentItem.TargetCollection, adeploymentItem.DeploymentTag, adeploymentItem.Intent, adeploymentItem.AvailDaysOffset, adeploymentItem.AvailTimeOffset, adeploymentItem.DeadlineDaysOffset, adeploymentItem.DeadlineTimeOffset);
                }

                foreach (globalObjects.securityscopeItem asecurityscopeItem in globalObjects.GlobalClass.securityscopeRules)
                {
                    int ret = dgv_SecurityScopes.Rows.Add(asecurityscopeItem.DeviceGroup, asecurityscopeItem.Scope, asecurityscopeItem.ScopeType);
                }

                // Build the Naming Standard bar

                List<string> anamingStandard = globalObjects.GlobalClass.namingStandard.Split('|').ToList();

                globalObjects.GlobalClass.sugnameFormat.Clear();

                foreach (string namingstandardItem in anamingStandard)
                {
                    if (namingstandardItem.Contains(':')) // Check for a Custom Text item
                    { 
                        if (namingstandardItem.Contains("Text:"))
                        {                            
                            List<string> textboxInfo = namingstandardItem.Split(':').ToList();

                            TextBox newtextBox = new TextBox();

                            newtextBox.Text = textboxInfo[1];

                            Size aSize = new Size();
                            aSize.Height = 23;
                            aSize.Width = 113;
                            newtextBox.Size = aSize;

                            newtextBox.Name = "tb_name_customText";

                            for (int i = 1; i < 6; i++)
                            {
                                string controlName = newtextBox.Name + i;

                                var aResult = flp_namingSelections.Controls.Find(controlName, true);

                                if (aResult == null || aResult.Length == 0)
                                {
                                    newtextBox.Name = "tb_name_customText" + i;

                                    newtextBox.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                                    flp_namingSelections.Controls.Add(newtextBox);

                                    tb_addTextbox.Text = "";

                                    break;
                                }
                            }
                        }
                        else if (namingstandardItem.Contains("Button:"))
                        {
                            switch (namingstandardItem)
                            {
                                case "Button:Day":

                                    b_addDay_Click(this, new EventArgs());

                                    break;
                                case "Button:Month":

                                    b_addMonth_Click(this, new EventArgs());

                                    break;

                                case "Button:Year":

                                    b_addYear_Click(this, new EventArgs());

                                    break;

                                case "Button:Product":

                                    b_addProduct_Click(this, new EventArgs());

                                    break;

                                case "Button:Classification":

                                    b_addClassification_Click(this, new EventArgs());

                                    break;

                                case "Button:Architecture":

                                    b_addArchitecture_Click(this, new EventArgs());

                                    break;

                                case "Button:Out of Cycle":

                                    b_OOC_Click(this, new EventArgs());

                                    break;
                                case "Button:Reporting":

                                    b_addReporting_Click(this, new EventArgs());

                                    break;
                            }
                        }
                    }
                }
            }
        }

        private void getconfigRegistry() // Fetch configuration from the registry HKEY_LOCAL_MACHINE\Software\SMSMarshall\PatchMaster
        {
            // Validate version

            string theproductVersion = (string)getRegistry("PatchVersion");

            if (theproductVersion == globalObjects.GlobalClass.buildVersion)
            {

            }
            else
            {
                // Version mismatch

                // Cleanup various keys that have been modified between this version and the previous

                setRegistry("PatchVersion", globalObjects.GlobalClass.buildVersion); // Brand with current version            
            }

            /// get force refresh of ConfigMgr patch cache

            try
            {
                globalObjects.GlobalClass.forceScan = false;

                string tmpforceScan = (string)getRegistry("PatchForceScan");

                if (tmpforceScan == "")
                {
                    globalObjects.GlobalClass.forceScan = true;                    

                    setRegistry("PatchForceScan", "True");
                }
                else
                {
                    try
                    {
                        globalObjects.GlobalClass.forceScan = Convert.ToBoolean(tmpforceScan);

                        cb_forceScan.Checked = Convert.ToBoolean(tmpforceScan);
                    }
                    catch (Exception ee)
                    {
                        globalObjects.GlobalClass.forceScan = true;
                    }
                }
            }
            catch (Exception e)
            {

            }

            // Get the Deployment Properties for the device groups

            getdeploymentpropertiesReg();

            // Get the Rules

            getrulesReg();

            // Get the Distribution Points

            getdpsReg();

            // Get the Package Source Path and Package Folder

            try
            {
                string patchPath = (string)getRegistry("PatchPackageSourceLocation");

                string patchFolder = (string)getRegistry("PatchPackageFolder");

                globalObjects.GlobalClass.uncPath = patchPath + @"\" + patchFolder;

                globalObjects.GlobalClass.patchfolderPath = patchFolder;

                globalObjects.GlobalClass.patchpathUNC = patchPath;
            }
            catch (Exception e)
            {

            }

            // Get the patch download failure retry value

            try
            {
                string tmpRetry = (string)getRegistry("PatchDownloadFailureRetry");

                if (tmpRetry == "")
                {
                    globalObjects.GlobalClass.DownloadFailureRetry = "6";

                    setRegistry("PatchDownloadFailureRetry", "6");
                }
                else
                {
                    globalObjects.GlobalClass.DownloadFailureRetry = tmpRetry;
                }
            }
            catch (Exception e)
            {

            }

            // Get the Deployments

            getdeploymentsReg();

            // Get the Security Scopes

            getsecurityscopesReg();

            // Get the Patches to be ignored

            try
            {
                try
                {
                    globalObjects.GlobalClass.globalignorepatchesCollection.Clear();
                }
                catch (Exception ee)
                {

                }

                string[] ignorePatches = (string[])getRegistry("PatchIgnorePatches");

                foreach (string ignorePatch in ignorePatches)
                {
                    // Split into columns

                    List<string> aignorePatch = ignorePatch.Split('|').ToList();

                    globalObjects.ignorepatchesItem aignorepatchesItem = new globalObjects.ignorepatchesItem();

                    aignorepatchesItem.PatchKB = aignorePatch[0].ToString();
                    aignorepatchesItem.DisplayName = aignorePatch[1].ToString();
                    aignorepatchesItem.Product = aignorePatch[2].ToString();
                    aignorepatchesItem.Classification = aignorePatch[3].ToString();

                    globalObjects.GlobalClass.globalignorepatchesCollection.Add(aignorepatchesItem);
                }
            }
            catch (Exception e)
            {

            }

            // Get Out of Cycle settings

            try
            {
                string ooc_Tag = (string)getRegistry("PatchOutofCycleTag");

                if (ooc_Tag == "" || ooc_Tag == null)
                {
                    ooc_Tag = "OOC";

                    setRegistry("PatchOutofCycleTag", ooc_Tag);
                }

                globalObjects.GlobalClass.oocTag = ooc_Tag;
            }
            catch (Exception e)
            {

            }

            // Get Naming standard delimiter

            try
            {
                globalObjects.GlobalClass.namingDelimiter = (string)getRegistry("PatchNamingDelimiter");

                if (globalObjects.GlobalClass.namingDelimiter == "" || globalObjects.GlobalClass.namingDelimiter == null)
                {
                    globalObjects.GlobalClass.namingDelimiter = " - ";

                    setRegistry("PatchNamingDelimiter", globalObjects.GlobalClass.namingDelimiter);
                }
            }
            catch (Exception ee)
            {

            }

            // Get Naming Bar lock status

            try
            {
                string namingbarLock = (string)getRegistry("PatchNamingBarLock");

                if (namingbarLock == "" || namingbarLock == null)
                {
                    setRegistry("PatchNamingBarLock", "Unlocked");

                    globalObjects.GlobalClass.namingbarlockStatus = false;
                }
                else
                {
                    globalObjects.GlobalClass.namingbarlockStatus = true;                  
                }
            }
            catch (Exception ee)
            {

            }

            // Get Device Type list            

            getpatchdevicetypefromRegistry();

            // Get Naming standard

            try
            {
                try
                {
                    string namingStandard = (string)getRegistry("PatchNamingStandard");

                    if (namingStandard == "" || namingStandard == null)
                    {
                        setRegistry("PatchNamingStandard", "Button:Reporting|Button:Product|Button:Out of Cycle"); // Possible issue here, am i defining enough buttons, where is OOC handled?

                        namingStandard = "Button:Reporting|Button:Product|Button:Out of Cycle";

                        globalObjects.GlobalClass.namingStandard = namingStandard;

                        globalObjects.GlobalClass.sugnameFormat.Add("Button:Product");
                        globalObjects.GlobalClass.sugnameFormat.Add("Button:Reporting");
                        globalObjects.GlobalClass.sugnameFormat.Add("Button:Out of Cycle");
                    }
                    else
                    {
                        globalObjects.GlobalClass.namingStandard = namingStandard;

                        string[] tempSplit = namingStandard.Split('|');

                        foreach(string namingElement in tempSplit)
                        {
                            globalObjects.GlobalClass.sugnameFormat.Add(namingElement);
                        }
                    }
                }
                catch (Exception ee)
                {

                }
            }
            catch (Exception e)
            {

            }

            // Get allow reporting SUGs

            try
            {
                string allowreportingSUGS = (string)getRegistry("PatchAllowReporting");

                if (allowreportingSUGS == "" || allowreportingSUGS == null)
                {
                    globalObjects.GlobalClass.allowreportingSUGS = true;

                    setRegistry("PatchAllowReporting", "True");
                }
                else
                {
                    bool theState = Convert.ToBoolean(allowreportingSUGS);

                    globalObjects.GlobalClass.allowreportingSUGS = theState;
                }
            }
            catch (Exception ee)
            {

            }

            // Get rollup client OS

            try
            {
                string clientOSrollup = (string)getRegistry("PatchRollupClientSUGS");

                if (clientOSrollup == "" || clientOSrollup == null)
                {
                    globalObjects.GlobalClass.rollupclientOS = true;

                    setRegistry("PatchRollupClientSUGS", "True");
                }
                else
                {
                    bool theState = Convert.ToBoolean(clientOSrollup);

                    globalObjects.GlobalClass.rollupclientOS = theState;
                }
            }
            catch (Exception ee)
            {

            }

            // Get rollup Server OS

            try
            {
                string serverOSrollup = (string)getRegistry("PatchRollupServerSUGS");

                if (serverOSrollup == "" || serverOSrollup == null)
                {
                    globalObjects.GlobalClass.rollupserverOS = true;                    

                    setRegistry("PatchRollupServerSUGS", "True");
                }
                else
                {
                    bool theState = Convert.ToBoolean(serverOSrollup);

                    globalObjects.GlobalClass.rollupserverOS = theState;
                }
            }
            catch (Exception ee)
            {

            }

            // Get rollup OFfice

            try
            {
                string officerollup = (string)getRegistry("PatchRollupOfficeSUGS");

                if (officerollup == "" || officerollup == null)
                {
                    globalObjects.GlobalClass.rollupoffice = true;

                    setRegistry("PatchRollupOfficeSUGS", "True");
                }
                else
                {
                    bool theState = Convert.ToBoolean(officerollup);

                    globalObjects.GlobalClass.rollupoffice = theState;
                }
            }
            catch (Exception ee)
            {

            }

            // Get the Run SUM Cleanup Post Build switch

            try
            {
                globalObjects.GlobalClass.patchrunsumcleanuppostBuild = Convert.ToBoolean((string)getRegistry("PatchRunSUMCleanupPostBuild"));
            }
            catch (Exception e)
            {
                globalObjects.GlobalClass.patchrunsumcleanuppostBuild = false;

                setRegistry("PatchRunSUMCleanupPostBuild", false);
            }
        }

        private void getCollections(BackgroundWorker theWorker)
        {
            try
            {
                IResultObject collectionsList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("SELECT Name FROM SMS_Collection ORDER BY Name");

                foreach (IResultObject acollectionlistItem in collectionsList)
                {
                    collectioncollectionItem aCollection = new collectioncollectionItem();

                    aCollection.collectionName = acollectionlistItem["Name"].StringValue;

                    globalCollections.Add(aCollection);
                }

                theWorker.ReportProgress(0, " Retrieved " + globalCollections.Count + " Collections");
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Failed to retrieve Collections");
            }
        }
        public void getsitedistributionPoints(BackgroundWorker theWorker)
        {
            globalObjects.GlobalClass.globaldistributionpointCollection.Clear();

            try
            {
                IResultObject distributionpointgroupList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("SELECT * FROM SMS_DistributionPointGroup");

                foreach (IResultObject adistributionpointGroup in distributionpointgroupList)
                {
                    try
                    {
                        globalObjects.globaldistributionpointItem aglobaldistributionpointItem = new globalObjects.globaldistributionpointItem();

                        aglobaldistributionpointItem.Name = adistributionpointGroup["Name"].StringValue;
                        aglobaldistributionpointItem.Type = "DPGroup";
                        aglobaldistributionpointItem.NALPath = adistributionpointGroup["GroupID"].StringValue;

                        globalObjects.GlobalClass.globaldistributionpointCollection.Add(aglobaldistributionpointItem);
                    }
                    catch (Exception)
                    {

                    }
                }
            }
            catch (Exception ee)
            {

            }

            try
            {
                IResultObject distributionpointList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("SELECT * FROM SMS_SystemResourceList WHERE RoleName='SMS Distribution Point' AND SiteCode='" + globalObjects.GlobalClass.SCCMSiteCode + "'");

                foreach (IResultObject adistributionpoint in distributionpointList)
                {
                    try
                    {
                        globalObjects.globaldistributionpointItem aglobaldistributionpointItem = new globalObjects.globaldistributionpointItem();

                        aglobaldistributionpointItem.Name = adistributionpoint["ServerName"].StringValue;
                        aglobaldistributionpointItem.Type = "DP";
                        aglobaldistributionpointItem.NALPath = adistributionpoint["NALPath"].StringValue;

                        aglobaldistributionpointItem.Sitecode = adistributionpoint["SiteCode"].StringValue;

                        globalObjects.GlobalClass.globaldistributionpointCollection.Add(aglobaldistributionpointItem);
                    }
                    catch (Exception ee)
                    {
                        theWorker.ReportProgress(0, " Fatal error gathering Distribution Points - " + ee.Message);
                    }
                }

                if (globalObjects.GlobalClass.globaldistributionpointCollection.Count == 0)
                {
                    theWorker.ReportProgress(0, " No Distribution Points found");
                }
                else
                {
                    theWorker.ReportProgress(0, " Retrieved " + globalObjects.GlobalClass.globaldistributionpointCollection.Count + " Distribution Points");
                }
            }
            catch (Exception ee)
            {
                theWorker.ReportProgress(0, " Fatal error gathering Distribution Points and Distribution Point Groups - " + ee.Message);
            }
        }

        private bool connecttositeServer()
        {
            globalObjects.GlobalClass.serverName = (string)getRegistry("PatchSiteServer");

            if (globalObjects.GlobalClass.serverName == null)
            {
                globalObjects.GlobalClass.serverName = "";
            }

            bool localconnectionSuccess = false;

            if (globalObjects.GlobalClass.serverName.ToLower() == "") // try a local connection before pestering the user
            {
                try
                {
                    // Check if Site server is local

                    globalObjects.GlobalClass.serverName = Environment.MachineName;

                    SmsNamedValuesDictionary avaluesDictionary = new SmsNamedValuesDictionary();

                    WqlConnectionManager connectionManager = new WqlConnectionManager(avaluesDictionary);

                    globalObjects.GlobalClass.ConnectionManager = connectionManager;

                    try
                    {
                        globalObjects.GlobalClass.ConnectionManager.Connect(globalObjects.GlobalClass.serverName);

                        localconnectionSuccess = true; // Indicate that we have successfully connected                                               

                        setRegistry("PatchSiteServer", globalObjects.GlobalClass.serverName); // Store the site server name in the registry

                        foreach (var anItem in avaluesDictionary)
                        {
                            if (anItem.Key.ToString() == "ConnectedSiteCode")
                            {
                                globalObjects.GlobalClass.SCCMSiteCode = anItem.Value.ToString();

                                sharedlogMessage("Connected to Site server " + globalObjects.GlobalClass.serverName + " - " + globalObjects.GlobalClass.SCCMSiteCode, false);
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        globalObjects.GlobalClass.serverName = "";
                    }
                }
                catch (Exception ee)
                {

                }
            }

            if (!localconnectionSuccess) // Connect to SMS Provider if still required
            {
                if (globalObjects.GlobalClass.serverName == "") // Pop up a prompt for the user to fill in
                {
                    using (f_siteserverName af_siteserverName = new f_siteserverName())
                    {
                        DialogResult adialogResult = af_siteserverName.ShowDialog();
                    }
                }

                try
                {
                    SmsNamedValuesDictionary avaluesDictionary = new SmsNamedValuesDictionary();

                    WqlConnectionManager connectionManager = new WqlConnectionManager(avaluesDictionary);

                    globalObjects.GlobalClass.ConnectionManager = connectionManager;

                    globalObjects.GlobalClass.ConnectionManager.Connect(globalObjects.GlobalClass.serverName);

                    avaluesDictionary = connectionManager.NamedValueDictionary;

                    foreach (var anItem in avaluesDictionary)
                    {
                        if (anItem.Key.ToString() == "ConnectedSiteCode")
                        {
                            globalObjects.GlobalClass.SCCMSiteCode = anItem.Value.ToString();

                            sharedlogMessage("Connected to Site server " + globalObjects.GlobalClass.serverName + " - " + globalObjects.GlobalClass.SCCMSiteCode, false);

                            setRegistry("PatchSiteServer", globalObjects.GlobalClass.serverName); // Store the site server name in the registry on successful connection
                        }
                    }
                }
                catch (Exception ee)
                {
                    return false;
                }
            }

            return true;
        }

        private void clearDatagrids()
        {
            dgv_Transcript.Rows.Clear();
            dgv_ignorePatches.Rows.Clear();
            dgv_availablePatches.Rows.Clear();
            dgv_Deployments.Rows.Clear();
            dgv_Logging.Rows.Clear();
            dgv_Preview.Rows.Clear();
            dgv_SecurityScopes.Rows.Clear();
        }

        private void initialiseCollections()
        {
            Stopwatch aStopwatch = new Stopwatch();

            globalObjects.GlobalClass.patchcacheStopwatch = aStopwatch;

            List<string> tmpsugnameformatList = new List<string>();

            globalObjects.GlobalClass.sugnameFormat = tmpsugnameformatList;

            globalObjects.sugitemCollection tmpglobalsugItems = new globalObjects.sugitemCollection();

            globalObjects.GlobalClass.globalsugItems = tmpglobalsugItems;

            globalObjects.sccmpatchCollection tmpglobalsccmPatches = new globalObjects.sccmpatchCollection();

            globalObjects.GlobalClass.sccmPatches = tmpglobalsccmPatches;

            globalObjects.deploymentpropertyCollection adeploymentpropertyCollection = new globalObjects.deploymentpropertyCollection();

            globalObjects.GlobalClass.globaldeploymentpropertiesCollection = adeploymentpropertyCollection;

            globalObjects.candidatesccmpatchCollection tmpcandidatesccmpatchCollection = new globalObjects.candidatesccmpatchCollection();

            globalObjects.GlobalClass.candidatePatches = tmpcandidatesccmpatchCollection;

            List<string> tmpdevicetypeList = new List<string>();

            globalObjects.GlobalClass.devicetypeList = tmpdevicetypeList;

            List<string> tmpsccmsugList = new List<string>();

            globalObjects.GlobalClass.SCCMSUGList = tmpsccmsugList;

            globalObjects.globaldistributionpointCollection tmpglobaldistributionpointCollection = new globalObjects.globaldistributionpointCollection();

            globalObjects.GlobalClass.globaldistributionpointCollection = tmpglobaldistributionpointCollection;

            globalObjects.distributionpointCollection tmpdistributionpointCollection = new globalObjects.distributionpointCollection();

            globalObjects.GlobalClass.distributionpointRules = tmpdistributionpointCollection;

            globalObjects.globalcollectionCollection tmpglobalcollectionCollection = new globalObjects.globalcollectionCollection();

            globalObjects.GlobalClass.sccmCollections = tmpglobalcollectionCollection;

            globalObjects.supersededpatchesCollection tmpsupersededpatchesCollection = new globalObjects.supersededpatchesCollection();

            globalObjects.GlobalClass.globalsupersedpatchesCollection = tmpsupersededpatchesCollection;

            globalObjects.ruleitemCollection tmpruleitemCollection = new globalObjects.ruleitemCollection();

            globalObjects.GlobalClass.globalruleitemCollection = tmpruleitemCollection;

            globalObjects.deploymentruleCollection tmpdeploymentRules = new globalObjects.deploymentruleCollection();

            globalObjects.GlobalClass.deploymentRules = tmpdeploymentRules;

            globalObjects.securityscopeCollection tmpsecurityscopeRules = new globalObjects.securityscopeCollection();

            globalObjects.GlobalClass.securityscopeRules = tmpsecurityscopeRules;

            globalObjects.ignorepatchesCollection tmpignorepatchesCollection = new globalObjects.ignorepatchesCollection();

            globalObjects.GlobalClass.globalignorepatchesCollection = tmpignorepatchesCollection;
        }
        private Bitmap loadimagefromString(string Image)
        {
            try
            {
                byte[] imageBytes = Convert.FromBase64String(Image);

                MemoryStream ms = new MemoryStream(imageBytes);

                Bitmap streamImage = (Bitmap)Bitmap.FromStream(ms, true);

                return streamImage;
            }
            catch (Exception ee)
            {

            }

            return null;
        }

        private void Launch()
        {
            globalObjects.GlobalClass.GlobalTimeMachine = false;

            // Check if we're silent running

            // globalObjects.GlobalClass.SilentRunning = true;

            if (globalObjects.GlobalClass.SilentRunning)
            {
                sharedlogMessage("███████╗██╗██╗     ███████╗███╗   ██╗████████╗    ██████╗ ██╗   ██╗███╗   ██╗███╗   ██╗██╗███╗   ██╗ ██████╗ ", true);
                sharedlogMessage("██╔════╝██║██║     ██╔════╝████╗  ██║╚══██╔══╝    ██╔══██╗██║   ██║████╗  ██║████╗  ██║██║████╗  ██║██╔════╝ ", true);
                sharedlogMessage("███████╗██║██║     █████╗  ██╔██╗ ██║   ██║       ██████╔╝██║   ██║██╔██╗ ██║██╔██╗ ██║██║██╔██╗ ██║██║  ███╗", true);
                sharedlogMessage("╚════██║██║██║     ██╔══╝  ██║╚██╗██║   ██║       ██╔══██╗██║   ██║██║╚██╗██║██║╚██╗██║██║██║╚██╗██║██║   ██║", true);
                sharedlogMessage("███████║██║███████╗███████╗██║ ╚████║   ██║       ██║  ██║╚██████╔╝██║ ╚████║██║ ╚████║██║██║ ╚████║╚██████╔╝", true);
                sharedlogMessage("╚══════╝╚═╝╚══════╝╚══════╝╚═╝  ╚═══╝   ╚═╝       ╚═╝  ╚═╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ", true);
                sharedlogMessage("", true);
                sharedlogMessage("Silent Running mode activated", true);
                sharedlogMessage("", true);
            }      

            globalObjects.GlobalClass.disableProcessing = true; // Do not allow restricted processing to take place

            disableInterface();

            if (!globalObjects.GlobalClass.SilentRunning)
            {
                pb_waitImage.Image = loadimagefromString(waitimageString);

                pb_Tom.Image = loadimagefromString(tombakerStringOff);

                pb_bigLogo.Image = loadimagefromString(bigLogo);

                dgv_availablePatches.ContextMenuStrip = cmt_Patch;

                dgv_ignorePatches.ContextMenuStrip = cmt_removeignoredPatch;

                clearDatagrids(); // Clear all DataGrids
            }
            else // Silent running
            {
                tc_Main.TabPages.Remove(tb_Config);
                tc_Main.TabPages.Remove(tb_Rules);
                tc_Main.TabPages.Remove(tb_Deployments);
                tc_Main.TabPages.Remove(tb_SecurityScopes);
                tc_Main.TabPages.Remove(tb_AvailablePatches);
                tc_Main.TabPages.Remove(tb_IgnorePatches);
                tc_Main.TabPages.Remove(tb_SUMaint);
                tc_Main.TabPages.Remove(tb_WSUS);
                tc_Main.TabPages.Remove(tb_About);
            }

            initialiseCollections(); // Initialise collections

            if (!globalObjects.GlobalClass.SilentRunning)
            {
                tc_Main.SelectedTab = tb_Log; // Switch to logging tab
            }

            connecttositeServer(); // Connect to the site server

            // Start the load thread

            BackgroundWorker bwLoad = new BackgroundWorker();
            bwLoad.WorkerSupportsCancellation = true;
            bwLoad.WorkerReportsProgress = true;
            bwLoad.DoWork +=
                new DoWorkEventHandler(bw_load_DoWork);
            bwLoad.ProgressChanged +=
                new ProgressChangedEventHandler(bw_load_ProgressChanged);
            bwLoad.RunWorkerCompleted +=
                new RunWorkerCompletedEventHandler(bw_load_RunWorkerCompleted);

            if (bwLoad.IsBusy != true)
            {
                bwLoad.RunWorkerAsync();

                globalObjects.GlobalClass.loadthreadRunning = true;
            }
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            tc_Main.TabPages.Remove(tb_WSUS);

            sharedlogMessage("", true);
            sharedlogMessage("██████╗  █████╗ ████████╗ ██████╗██╗  ██╗███╗   ███╗ █████╗ ███████╗████████╗███████╗██████╗ ", true);
            sharedlogMessage("██╔══██╗██╔══██╗╚══██╔══╝██╔════╝██║  ██║████╗ ████║██╔══██╗██╔════╝╚══██╔══╝██╔════╝██╔══██╗", true);
            sharedlogMessage("██████╔╝███████║   ██║   ██║     ███████║██╔████╔██║███████║███████╗   ██║   █████╗  ██████╔╝", true);
            sharedlogMessage("██╔═══╝ ██╔══██║   ██║   ██║     ██╔══██║██║╚██╔╝██║██╔══██║╚════██║   ██║   ██╔══╝  ██╔══██╗", true);
            sharedlogMessage("██║     ██║  ██║   ██║   ╚██████╗██║  ██║██║ ╚═╝ ██║██║  ██║███████║   ██║   ███████╗██║  ██║", true);
            sharedlogMessage("╚═╝     ╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝╚══════╝   ╚═╝   ╚══════╝╚═╝  ╚═╝", true);
            sharedlogMessage("", true);
            sharedlogMessage("██╗   ██╗ ██╗   ███████╗", true);
            sharedlogMessage("██║   ██║███║   ██╔════╝", true);
            sharedlogMessage("██║   ██║╚██║   ███████╗", true);
            sharedlogMessage("╚██╗ ██╔╝ ██║   ╚════██║", true);
            sharedlogMessage(" ╚████╔╝  ██║██╗███████║", true);
            sharedlogMessage("  ╚═══╝   ╚═╝╚═╝╚══════╝", true);
            sharedlogMessage("", true);
            sharedlogMessage(@"Startup date\time: " + DateTime.Now.GetDateTimeFormats('d')[0] + " " + DateTime.Now.GetDateTimeFormats('t')[0], true);
            sharedlogMessage("", true);

            Launch();
        }

        private void dgv_Transcript_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex != -1)
            {
                if (e.ColumnIndex == 0) // Device Types selected
                {
                    List<string> tempList = new List<string>();

                    foreach (string adeviceType in globalObjects.GlobalClass.devicetypeList)
                    {
                        tempList.Add(adeviceType);
                    }

                    MultiSelect aMultiSelect = new MultiSelect();

                    aMultiSelect.manifestList = tempList; // Pass the list of items

                    var tempValue = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value; // Pass the list of selected items

                    List<string> passedList = new List<string>();

                    if (tempValue != null)
                    {
                        if (tempValue.GetType() == typeof(System.String))
                        {
                            string passedString = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value.ToString();

                            passedList = passedString.Split(',').ToList();
                        }
                        else
                        {
                            passedList = (List<string>)dgv_Transcript[e.ColumnIndex, e.RowIndex].Value;
                        }
                    }

                    aMultiSelect.selectedItems = passedList;

                    DialogResult returnList = aMultiSelect.ShowDialog();

                    if (globalObjects.GlobalClass.popupformManifest != null && globalObjects.GlobalClass.popupformManifest.Count() > 0)
                    {
                        // string adevicetypeList = String.Join(",", globalObjects.GlobalClass.popupformManifest);

                        DataGridViewTextBoxCell aCell = new DataGridViewTextBoxCell();

                        //////////////////////////////////////
                        // MULTI-DEVICEGROUP CODE MODIFICATION
                        //////////////////////////////////////

                        aCell.Value = String.Join(",", globalObjects.GlobalClass.popupformManifest);

                        // aCell.Value = globalObjects.GlobalClass.popupformManifest[0]; // Only select the top Device Group so that multiple items do not pass down further into the code

                        dgv_Transcript.Rows[e.RowIndex].Cells[e.ColumnIndex] = aCell;

                        if (dgv_Transcript.IsCurrentCellDirty)
                        {
                            dgv_Transcript.CommitEdit(DataGridViewDataErrorContexts.Commit);
                        }
                    }
                }

                if (e.ColumnIndex == 2) // Products selected
                {
                    List<string> tempList = new List<string>();

                    foreach (wsusproductsItem awsusproductsItem in globalwsusProducts)
                    {
                        tempList.Add(awsusproductsItem.productName);
                    }

                    MultiSelect aMultiSelect = new MultiSelect();

                    aMultiSelect.manifestList = tempList; // Pass the list of items

                    var tempValue = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value; // Pass the list of selected items

                    List<string> passedList = new List<string>();

                    if (tempValue != null)
                    {
                        if (tempValue.GetType() == typeof(System.String))
                        {
                            string passedString = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value.ToString();

                            passedList = passedString.Split(',').ToList();
                        }
                        else
                        {
                            passedList = (List<string>)dgv_Transcript[e.ColumnIndex, e.RowIndex].Value;
                        }
                    }

                    aMultiSelect.selectedItems = passedList;

                    DialogResult returnList = aMultiSelect.ShowDialog();

                    if (globalObjects.GlobalClass.popupformManifest != null)
                    {

                        string aproductList = String.Join(",", globalObjects.GlobalClass.popupformManifest);

                        DataGridViewTextBoxCell aCell = new DataGridViewTextBoxCell();

                        aCell.Value = aproductList;

                        dgv_Transcript.Rows[e.RowIndex].Cells[e.ColumnIndex] = aCell;

                        if (dgv_Transcript.IsCurrentCellDirty)
                        {
                            dgv_Transcript.CommitEdit(DataGridViewDataErrorContexts.Commit);
                        }
                    }
                }

                if (e.ColumnIndex == 3) // Classifications selected
                {
                    List<string> tempList = new List<string>();

                    foreach (wsusclassificationsItem awsusclassificationsItem in globalwsusClassifications)
                    {
                        tempList.Add(awsusclassificationsItem.classificationName);
                    }

                    MultiSelect aMultiSelect = new MultiSelect();

                    aMultiSelect.manifestList = tempList; // Pass the list of items

                    var tempValue = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value; // Pass the list of selected items

                    List<string> passedList = new List<string>();

                    if (tempValue != null)
                    {
                        if (tempValue.GetType() == typeof(System.String))
                        {
                            string passedString = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value.ToString();

                            passedList = passedString.Split(',').ToList();
                        }
                        else
                        {
                            passedList = (List<string>)dgv_Transcript[e.ColumnIndex, e.RowIndex].Value;
                        }
                    }

                    aMultiSelect.selectedItems = passedList;

                    DialogResult returnList = aMultiSelect.ShowDialog();

                    // Bit of error hanhdling here for closing the form

                    string aclassificationList = String.Join(",", globalObjects.GlobalClass.popupformManifest);

                    DataGridViewTextBoxCell aCell = new DataGridViewTextBoxCell();

                    aCell.Value = aclassificationList;

                    dgv_Transcript.Rows[e.RowIndex].Cells[e.ColumnIndex] = aCell;

                    if (dgv_Transcript.IsCurrentCellDirty)
                    {
                        dgv_Transcript.CommitEdit(DataGridViewDataErrorContexts.Commit);
                    }
                }

                if (e.ColumnIndex == 4) // Languages selected
                {
                    List<string> tempList = new List<string>();

                    foreach (wsuslanguagesItem awsuslanguageItem in globalwsusLanguages)
                    {
                        tempList.Add(awsuslanguageItem.languageName);
                    }

                    MultiSelect aMultiSelect = new MultiSelect();

                    aMultiSelect.manifestList = tempList;

                    var tempValue = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value; // Pass the list of selected items

                    List<string> passedList = new List<string>();

                    if (tempValue != null)
                    {
                        if (tempValue.GetType() == typeof(System.String))
                        {
                            string passedString = dgv_Transcript[e.ColumnIndex, e.RowIndex].Value.ToString();

                            passedList = passedString.Split(',').ToList();
                        }
                        else
                        {
                            passedList = (List<string>)dgv_Transcript[e.ColumnIndex, e.RowIndex].Value;
                        }
                    }

                    aMultiSelect.selectedItems = passedList;

                    DialogResult returnList = aMultiSelect.ShowDialog();

                    string alanguageList = String.Join(",", globalObjects.GlobalClass.popupformManifest);

                    DataGridViewTextBoxCell aCell = new DataGridViewTextBoxCell();

                    aCell.Value = alanguageList;

                    dgv_Transcript.Rows[e.RowIndex].Cells[e.ColumnIndex] = aCell;

                    if (dgv_Transcript.IsCurrentCellDirty)
                    {
                        dgv_Transcript.CommitEdit(DataGridViewDataErrorContexts.Commit);
                    }
                }
            }
        }

        private void dragdrop_MouseDown(object sender, MouseEventArgs e)
        {
            if (e.Button == System.Windows.Forms.MouseButtons.Right)
            {
                if (sender.GetType() == typeof(Button)) // Handle different controls
                {
                    Button targetButton = sender as Button;

                    FlowLayoutPanel theFLP = targetButton.Parent as FlowLayoutPanel;

                    if (targetButton.Text != "Reporting" && targetButton.Text != "Out of Cycle") flp_namingSelections.Controls.Remove(targetButton);
                    // if (targetButton.Text != "Reporting" && targetButton.Text != "Product" && targetButton.Text != "Out of Cycle") flp_namingSelections.Controls.Remove(targetButton);
                }

                if (sender.GetType() == typeof(TextBox))
                {
                    TextBox targetTextbox = sender as TextBox;

                    FlowLayoutPanel theFLP = targetTextbox.Parent as FlowLayoutPanel;

                    flp_namingSelections.Controls.Remove(targetTextbox);
                }
            }

            Control source = (Control)sender;

            source.DoDragDrop(new MyWrapper(source), DragDropEffects.Move);

            buildsugnameFormat();

            buildPreview();
        }

        private void flp_namingSelections_DragDrop(object sender, DragEventArgs e)
        {
            try
            {
                MyWrapper wrapper = (MyWrapper)e.Data.GetData(typeof(MyWrapper));
                Control source = wrapper.Control;

                Point mousePosition = flp_namingSelections.PointToClient(new Point(e.X, e.Y));
                Control destination = flp_namingSelections.GetChildAtPoint(mousePosition);

                if (source.Text != "Out of Cycle")
                {
                    int indexDestination = flp_namingSelections.Controls.IndexOf(destination);
                    if (flp_namingSelections.Controls.IndexOf(source) < indexDestination)
                        indexDestination--;

                    flp_namingSelections.Controls.SetChildIndex(source, indexDestination);

                    buildsugnameFormat(); // Handle globalObjects.GlobalClass.sugnameFormat here
                }
            }
            catch (Exception ee)
            {

            }
        }

        private void buildsugnameFormat()
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                try
                {
                    globalObjects.GlobalClass.sugnameFormat.Clear();

                    foreach (Control aControl in flp_namingSelections.Controls)
                    {
                        if (aControl.GetType() == typeof(Button))
                        {
                            globalObjects.GlobalClass.sugnameFormat.Add("Button:" + aControl.Text);
                        }

                        if (aControl.GetType() == typeof(TextBox))
                        {
                            globalObjects.GlobalClass.sugnameFormat.Add("Text:" + aControl.Text);
                        }
                    }

                    // Now write the SUG Name Format to the registry

                    string tmpResult = "";

                    foreach (string aValue in globalObjects.GlobalClass.sugnameFormat)
                    {
                        tmpResult = tmpResult + aValue + "|";
                    }

                    if (tmpResult != "")
                    {
                        tmpResult = tmpResult.Substring(0, tmpResult.LastIndexOf('|'));

                        setRegistry("PatchNamingStandard", tmpResult);
                    }
                }
                catch (Exception ee)
                {
                    sharedlogMessage("Could not write SUG Name Format to the registry - " + ee.Message, false);
                }

            }
        }

        private void flp_namingSelections_DragEnter(object sender, DragEventArgs e)
        {
            if (e.Data.GetDataPresent(typeof(MyWrapper)))
                e.Effect = DragDropEffects.Move;
            else
                e.Effect = DragDropEffects.None;

            buildsugnameFormat(); // Handle globalObjects.GlobalClass.sugnameFormat here
        }

        private void tb_addTextbox_DoubleClick(object sender, EventArgs e)
        {
            TextBox newtextBox = new TextBox();
            newtextBox.Text = tb_addTextbox.Text;
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newtextBox.Size = aSize;
            newtextBox.Name = "tb_name_customText";

            for (int i = 1; i < 6; i++)
            {
                string controlName = newtextBox.Name + i;

                var aResult = flp_namingSelections.Controls.Find(controlName, true);

                if (aResult == null || aResult.Length == 0)
                {
                    newtextBox.Name = "tb_name_customText" + i;

                    newtextBox.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                    flp_namingSelections.Controls.Add(newtextBox);

                    tb_addTextbox.Text = "";

                    break;
                }
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addReporting_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Reporting";
            newButton.Name = "b_name_Reporting";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addDay_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Day";
            newButton.Name = "b_name_Day";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addMonth_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Month";
            newButton.Name = "b_name_Month";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addYear_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Year";
            newButton.Name = "b_name_Year";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addClassification_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Classification";
            newButton.Name = "b_name_Classification";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addArchitecture_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Architecture";
            newButton.Name = "b_name_Architecture";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void flp_namingSelections_DragLeave(object sender, EventArgs e)
        {
            Control passedControl = (Control)sender;

            buildsugnameFormat();
        }

        private void b_OOC_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Out of Cycle";
            newButton.Name = "b_name_OOC";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_addProduct_Click(object sender, EventArgs e)
        {
            Button newButton = new Button();
            newButton.Text = "Product";
            newButton.Name = "b_name_Product";
            Size aSize = new Size();
            aSize.Height = 23;
            aSize.Width = 113;
            newButton.Size = aSize;

            newButton.ForeColor = Color.Black;

            var aResult = flp_namingSelections.Controls.Find(newButton.Name, true);

            if (aResult == null || aResult.Length == 0)
            {
                newButton.MouseDown += new System.Windows.Forms.MouseEventHandler(this.dragdrop_MouseDown);

                flp_namingSelections.Controls.Add(newButton);
            }

            buildsugnameFormat();

            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void dgv_Transcript_RowValidated(object sender, DataGridViewCellEventArgs e)
        {
        }

        private void dgv_Deployments_DataError(object sender, DataGridViewDataErrorEventArgs e)
        {
            e.Cancel = true;
        }

        private void dgv_SecurityScopes_DataError(object sender, DataGridViewDataErrorEventArgs e)
        {
            e.Cancel = true;
        }

        // Trying to eliminate dependence on dgv for rules

        //private globalObjects.ruleitemCollection buildruleCollection(DataGridViewRowCollection theTranscripts)
        //{
        //    try
        //    {
        //        globalObjects.ruleitemCollection aruleCollection = new globalObjects.ruleitemCollection(); // Prepare the Rule Collection

        //        foreach (DataGridViewRow aRow in theTranscripts)
        //        {
        //            try
        //            {
        //                if (aRow.Cells["c_transcript_deviceType"].Value != null)
        //                {
        //                    // Get properties, if they are null it should fire an exception

        //                    string tmpdeviceType = aRow.Cells["c_transcript_deviceType"].Value.ToString();
        //                    string tmpArchitecture = aRow.Cells["c_transcript_Architecture"].Value.ToString();
        //                    string tmpProducts = aRow.Cells["c_transcript_Product"].Value.ToString();
        //                    string tmpClassifications = aRow.Cells["c_transcript_Classifications"].Value.ToString();
        //                    string tmpLanguages = aRow.Cells["c_transcript_Languages"].Value.ToString();

        //                    string tmpignoreBuilds = ""; // Get IgnoreBuilds, tolerate it being null

        //                    if (aRow.Cells["c_transcript_ignoreBuilds"].Value != null)
        //                    {
        //                        tmpignoreBuilds = aRow.Cells["c_transcript_ignoreBuilds"].Value.ToString();
        //                    }

        //                    string tmpincludeRule = ""; // Get include rules, tolerate it being null

        //                    if (aRow.Cells["c_transcript_includeRule"].Value != null)
        //                    {
        //                        tmpincludeRule = aRow.Cells["c_transcript_includeRule"].Value.ToString();
        //                    }

        //                    // Set Mandatory values to null if they are returned as an empty string, this is so that an exception will occur when adding to the rule collection

        //                    if (aRow.Cells["c_transcript_ignoreBuilds"].Value == null)
        //                    {
        //                        tmpignoreBuilds = "";
        //                    }

        //                    globalObjects.ruleItem aruleItem = new globalObjects.ruleItem();

        //                    aruleItem.DeviceType = tmpdeviceType.ToString();
        //                    aruleItem.Architectures = tmpArchitecture.ToString();
        //                    aruleItem.Products = tmpProducts.ToString();
        //                    aruleItem.ExcludeRule = tmpignoreBuilds.ToString();
        //                    aruleItem.IncludeRule = tmpincludeRule.ToString();
        //                    aruleItem.Classifications = tmpClassifications.ToString();
        //                    aruleItem.Languages = tmpLanguages.ToString();

        //                    if (aruleItem.DeviceType != "" && aruleItem.Architectures != "" && aruleItem.Products != "" && aruleItem.Classifications != "")
        //                    {
        //                        aruleCollection.Add(aruleItem);
        //                    }
        //                }
        //            }
        //            catch (Exception ee)
        //            {
        //                sharedlogMessage(@"Warning: One of the Ruleset rules contains a null\empty column, correct it - " + aRow.Index.ToString());
        //            }

        //        }


        //        return aruleCollection;
        //    }
        //    catch (Exception ee)
        //    {
        //        string sds = ee.Message;
        //    }

        //    return null;
        //}

        private globalObjects.securityscopeCollection buildsecurityscopeCollection(DataGridViewRowCollection theTranscripts)
        {
            try
            {
                globalObjects.securityscopeCollection adsecurityscopeCollection = new globalObjects.securityscopeCollection(); // Prepare the Security Scope Collection

                foreach (DataGridViewRow aRow in theTranscripts)
                {
                    try
                    {
                        if (aRow.Cells["c_scoping_deviceType"].Value != null)
                        {
                            // Get properties, if they are null it should fire an exception

                            string tmpdeviceType = aRow.Cells["c_scoping_deviceType"].Value.ToString();
                            string tmpscopeType = aRow.Cells["c_scoping_Type"].Value.ToString();
                            string tmpsecurityScope = aRow.Cells["c_scoping_Scope"].Value.ToString();

                            globalObjects.securityscopeItem asecurityscopeItem = new globalObjects.securityscopeItem();

                            asecurityscopeItem.DeviceGroup = tmpdeviceType;
                            asecurityscopeItem.ScopeType = tmpscopeType;
                            asecurityscopeItem.Scope = tmpsecurityScope;

                            if (asecurityscopeItem.DeviceGroup != "" && asecurityscopeItem.ScopeType != "" && asecurityscopeItem.Scope != "")
                            {
                                adsecurityscopeCollection.Add(asecurityscopeItem);
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        sharedlogMessage(@"One of the Security Scope rules contains a null\empty column, correct it - " + aRow.Index.ToString(), false);
                    }
                }

                return adsecurityscopeCollection;
            }
            catch (Exception ee)
            {
                string sds = ee.Message;
            }

            return null;
        }

        private globalObjects.distributionpointCollection builddistributionpointCollection(DataGridViewRowCollection theTranscripts)
        {
            try
            {
                globalObjects.distributionpointCollection adistributionpointCollection = new globalObjects.distributionpointCollection(); // Prepare the Distribution Point Collection

                foreach (DataGridViewRow aRow in theTranscripts)
                {
                    try
                    {
                        if (aRow.Cells["c_dp_Name"].Value != null)
                        {
                            // Get properties, if they are null it should fire an exception

                            string tmpName = aRow.Cells["c_dp_Name"].Value.ToString();

                            string tmpType = aRow.Cells["c_dp_Type"].Value.ToString();

                            string tmpID = aRow.Cells["c_dp_ID"].Value.ToString();

                            string tmpSitecode = aRow.Cells["c_dp_Sitecode"].Value.ToString();

                            string tmpnalPath = "";

                            foreach (globalObjects.globaldistributionpointItem aglobaldistributionpointItem in globalObjects.GlobalClass.globaldistributionpointCollection)
                            {
                                if (aglobaldistributionpointItem.Name == tmpName)
                                {
                                    tmpnalPath = aglobaldistributionpointItem.NALPath;
                                }
                            }

                            globalObjects.distributionpointItem adistributionpointItem = new globalObjects.distributionpointItem();

                            adistributionpointItem.Name = tmpName;

                            adistributionpointItem.Type = tmpType;

                            adistributionpointItem.ID = tmpID;

                            adistributionpointItem.Sitecode = tmpSitecode;

                            adistributionpointItem.NALPath = tmpnalPath;

                            if (adistributionpointItem.Name != "" && adistributionpointItem.Type != "" && adistributionpointItem.ID != "" && adistributionpointItem.Sitecode != "" && adistributionpointItem.NALPath != "")
                            {
                                adistributionpointCollection.Add(adistributionpointItem);
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        sharedlogMessage(@"One of the Distribution Points contains a null\empty column, correct it - " + aRow.Index.ToString(), false);
                    }
                }

                return adistributionpointCollection;
            }
            catch (Exception ee)
            {
                string sds = ee.Message;
            }

            return null;
        }

        private globalObjects.deploymentruleCollection builddeploymentCollection(DataGridViewRowCollection theTranscripts)
        {
            try
            {
                globalObjects.deploymentruleCollection adeploymentCollection = new globalObjects.deploymentruleCollection(); // Prepare the Deployment Collection

                foreach (DataGridViewRow aRow in theTranscripts)
                {
                    try
                    {
                        if (aRow.Cells["c_deployments_DeviceType"].Value != null)
                        {
                            // Get properties, if they are null it should fire an exception

                            string tmpdeviceType = aRow.Cells["c_deployments_DeviceType"].Value.ToString();
                            string tmpcolTarget = aRow.Cells["c_deployment_coltarget"].Value.ToString();

                            string tmpdepTag = "";

                            try
                            {
                                tmpdepTag = aRow.Cells["c_deployment_depTag"].Value.ToString();
                            }
                            catch (Exception ee)
                            {
                                tmpdepTag = "LIVE";
                            }
                            string tmpIntent = aRow.Cells["c_deployment_availReq"].Value.ToString();
                            string tmpavailDate = aRow.Cells["c_deployment_availdate"].Value.ToString();
                            string tmpdeadlineDate = aRow.Cells["c_deployment_deadlinedateOffset"].Value.ToString();

                            string tmpavailTime = aRow.Cells["c_deployment_availTime"].Value.ToString();
                            string tmpdeadlineTime = aRow.Cells["c_deployment_deadlineTime"].Value.ToString();

                            globalObjects.deploymentItem adeploymentItem = new globalObjects.deploymentItem();

                            adeploymentItem.DeviceType = tmpdeviceType.ToString();
                            adeploymentItem.TargetCollection = tmpcolTarget;
                            adeploymentItem.DeploymentTag = tmpdepTag;
                            adeploymentItem.Intent = tmpIntent;
                            adeploymentItem.AvailDaysOffset = tmpavailDate;
                            adeploymentItem.AvailTimeOffset = tmpavailTime;
                            adeploymentItem.DeadlineDaysOffset = tmpdeadlineDate;
                            adeploymentItem.DeadlineTimeOffset = tmpdeadlineTime;

                            if (adeploymentItem.DeviceType != "" && adeploymentItem.TargetCollection != "" && adeploymentItem.DeploymentTag != "" && adeploymentItem.Intent != "" && adeploymentItem.AvailDaysOffset != "" && adeploymentItem.DeadlineDaysOffset != "")
                            {
                                adeploymentCollection.Add(adeploymentItem);
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        sharedlogMessage(@"One of the Deployment rules contains a null\empty column, correct it - " + aRow.Index.ToString(), false);
                    }
                }

                return adeploymentCollection;
            }
            catch (Exception ee)
            {
                string sds = ee.Message;
            }

            return null;
        }

        private string findignoredPatch(globalObjects.ignorepatchesItem inboundignorepatchesItem, List<string> LocalizedCategoryInstanceNames)
        {
            foreach (globalObjects.ignorepatchesItem aignorepatchesItem in globalObjects.GlobalClass.globalignorepatchesCollection)
            {
                if (inboundignorepatchesItem.PatchKB == aignorepatchesItem.PatchKB && inboundignorepatchesItem.DisplayName == aignorepatchesItem.DisplayName && LocalizedCategoryInstanceNames.Contains(aignorepatchesItem.Product))
                {
                    return aignorepatchesItem.Product;
                }
            }

            return "";
        }

        private void checkforPatches(BackgroundWorker worker)
        {
            if (worker == null)
            {
                sharedlogMessage("Checking for patches that match the criteria in the rule set", false);
            }
            else
            {
                worker.ReportProgress(0, "Checking for patches that match the criteria in the rule set");
            }

            // Refresh the rules from the registry

            getrulesReg();

            if (!globalObjects.GlobalClass.SilentRunning && worker == null)
            {
                dgv_availablePatches.Rows.Clear();

                dgv_Preview.Rows.Clear();

                Application.DoEvents();
            }

            // Call the new thread

            if (globalObjects.GlobalClass.buildthreadRunning == false)
            {
                BackgroundWorker bwcheckforPatches = new BackgroundWorker();
                bwcheckforPatches.WorkerSupportsCancellation = true;
                bwcheckforPatches.WorkerReportsProgress = true;
                bwcheckforPatches.DoWork +=
                    new DoWorkEventHandler(bw_checkforPatches_DoWork);
                bwcheckforPatches.ProgressChanged +=
                    new ProgressChangedEventHandler(bw_checkforPatches_ProgressChanged);
                bwcheckforPatches.RunWorkerCompleted +=
                    new RunWorkerCompletedEventHandler(bw_checkforPatches_RunWorkerCompleted);

                if (bwcheckforPatches.IsBusy != true)
                {
                    globalObjects.GlobalClass.checkforpatchesthreadRunning = true; 

                    bwcheckforPatches.RunWorkerAsync();
                }
            }
            else
            {
                if (worker == null)
                {
                    sharedlogMessage("Build in progress...ignoring request to check for patches", false);
                }
                else
                {
                    worker.ReportProgress(0, "Build in progress ... ignoring request to check for patches");
                }
            }
        }

        private void docheckforPatches()
        {
            if (!globalObjects.GlobalClass.SilentRunning)
            {
                pb_waitImage.Visible = true;                
            }

            disableInterface();

            checkforPatches(null);
        }

        private void b_checkforPatches_Click(object sender, EventArgs e)
        {
            docheckforPatches();
        }

        private bool checksugnameFormat(string elementName)
        {
            foreach (string storedelementName in globalObjects.GlobalClass.sugnameFormat)
            {
                if ("Button:" + elementName == storedelementName || "Text: " + elementName == storedelementName) return true;
            }

            return false;
        }

        private List<string> getsugnameformatText()
        {
            List<string> returnList = new List<string>();

            foreach (string storedelementName in globalObjects.GlobalClass.sugnameFormat)
            {
                if (storedelementName.StartsWith("Text:"))
                {
                    returnList.Add(storedelementName.Replace("Text:", ""));
                }
                if (storedelementName.StartsWith("Button:"))
                {
                    returnList.Add(storedelementName.Replace("Button:", ""));
                }
            }

            return returnList;
        }

        private void getsccmsugList(BackgroundWorker theWorker)
        {
            globalObjects.GlobalClass.SCCMSUGList.Clear();

            try
            {
                IResultObject sugList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_AuthorizationList");

                foreach (IResultObject asuglistItem in sugList)
                {
                    globalObjects.GlobalClass.SCCMSUGList.Add(asuglistItem["LocalizedDisplayName"].StringValue);
                }

                if (theWorker == null)
                {
                    sharedlogMessage(" Retrieved " + globalObjects.GlobalClass.SCCMSUGList.Count + " Software Update Groups", false);
                }
                else
                {
                    theWorker.ReportProgress(0, " Retrieved " + globalObjects.GlobalClass.SCCMSUGList.Count + " Software Update Groups");
                }
            }
            catch (Exception ee)
            {
                if (theWorker == null)
                {
                    sharedlogMessage(" Failed to retrieve Software Update Groups", false);
                }
                else
                {
                    theWorker.ReportProgress(0, " Failed to retrieve Software Update Groups");
                }
            }
        }

        private string getDate(string theAction)
        {
            string returnValue = "";

            if (globalObjects.GlobalClass.GlobalTimeMachine) // Let the Time Machine take over
            {
                if (theAction == "Year") returnValue = globalObjects.GlobalClass.GlobalTimeMachineYear;
                if (theAction == "Month") returnValue = globalObjects.GlobalClass.GlobalTimeMachineMonth;
                if (theAction == "Day") returnValue = globalObjects.GlobalClass.GlobalTimeMachineDay;
            }
            else
            {
                if (theAction == "Year") returnValue = DateTime.Now.Year.ToString();
                if (theAction == "Month") returnValue = DateTime.Now.ToString("MMMM");
                if (theAction == "Day") returnValue = DateTime.Now.Day.ToString();
            }

            return returnValue;
        }

        private void buildPreview()
        {
            if (!globalObjects.GlobalClass.SilentRunning)
            {
                getsccmsugList(null);

                dgv_Preview.Rows.Clear();
            }

            if (!globalObjects.GlobalClass.disableProcessing)
            {
                List<string> sugNames = new List<string>();

                // Begin processing the Rule Collection

                bool rollupProduct;

                globalObjects.GlobalClass.globalsugItems.Clear(); // Clear the global SUG Rule Item list

                List<String> sugnameformatText = getsugnameformatText();

                if (!checksugnameFormat("Product"))
                {
                    rollupProduct = true;
                }
                else
                {
                    rollupProduct = false;
                }

                bool rollupClassification = true;

                if (!checksugnameFormat("Classification"))
                {
                    rollupClassification = true;
                }
                else
                {
                    rollupClassification = false;
                }

                bool rollupArchitecture = true;

                if (!checksugnameFormat("Architecture"))
                {
                    rollupArchitecture = true;
                }
                else
                {
                    rollupArchitecture = false;
                }

                // Prepare the Deployment Software Update Groups

                foreach (globalObjects.ruleItem aruleItem in globalObjects.GlobalClass.globalruleitemCollection)
                {
                    List<string> productGroup = aruleItem.Products.Split(',').ToList();

                    List<string> classificationGroup = aruleItem.Classifications.Split(',').ToList();

                    List<string> architectureGroup = aruleItem.Architectures.Split(',').ToList();

                    foreach (string aProduct in productGroup)
                    {
                        foreach (string aClassification in classificationGroup)
                        {
                            if (aruleItem.Architectures == "Both")
                            {
                                architectureGroup.Clear();
                                architectureGroup.Add("x64");
                                architectureGroup.Add("x86");
                            }

                            foreach (string aArchitecture in architectureGroup)
                            {
                                globalObjects.sugItem asugItem = new globalObjects.sugItem();

                                asugItem.SUGType = "Deployment";

                                asugItem.DeviceType = aruleItem.DeviceType;

                                asugItem.Languages = aruleItem.Languages;

                                // Set SUG Name

                                string newsugName = "";

                                foreach (string sugnameformatItem in globalObjects.GlobalClass.sugnameFormat)
                                {
                                    if (sugnameformatItem.ToLower().ToString().StartsWith("text"))
                                    {
                                        newsugName += sugnameformatItem.Replace("Text:", "");
                                    }

                                    if (sugnameformatItem.ToLower().ToString().StartsWith("button"))
                                    {
                                        string switchValue = sugnameformatItem.Replace("Button:", "");

                                        switch (switchValue)
                                        {
                                            case "Year":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Year");
                                                break;
                                            case "Month":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Month");
                                                break;
                                            case "Day":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Day");
                                                break;
                                            case "Product":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + aProduct;
                                                break;
                                            case "Classification":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + aClassification;
                                                break;
                                            case "Architecture":
                                                newsugName += globalObjects.GlobalClass.namingDelimiter + aArchitecture;
                                                break;
                                            case "Reporting":
                                                if (asugItem.SUGType != "Deployment") newsugName += globalObjects.GlobalClass.namingDelimiter + "Reporting";
                                                break;
                                        }

                                        if (sugnameformatItem.Contains("Text:"))
                                        {
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + sugnameformatItem.Replace("Text:", "");
                                        }
                                    }
                                }

                                if (newsugName.StartsWith(globalObjects.GlobalClass.namingDelimiter))
                                {
                                    newsugName = newsugName.Substring(globalObjects.GlobalClass.namingDelimiter.Length, newsugName.Length - globalObjects.GlobalClass.namingDelimiter.Length);
                                }

                                asugItem.sugName = newsugName;

                                // Check if the SUG already exists in the SCCMSUGList list before we commit it

                                bool existtripWire = false;

                                foreach (string searchItem in globalObjects.GlobalClass.SCCMSUGList)
                                {
                                    if (searchItem == asugItem.sugName)
                                    {
                                        existtripWire = true;
                                    }
                                }

                                // Now check if the name exists as a real SUG in SCCM, if it does handle OOO and iterate through the serial 001-999

                                // At this point we should check if SUG reuse is enabled, if it is we get the existing SUG instead of creating it, we'd also have to recreate the deployments ****

                                if (existtripWire)
                                {
                                    for (int i = 1; i < 999; i++)
                                    {
                                        string tmpString = globalObjects.GlobalClass.namingDelimiter + tb_ooc_Tag.Text + " " + i.ToString("D3");

                                        asugItem.sugName = asugItem.sugName.Replace(globalObjects.GlobalClass.namingDelimiter + tb_ooc_Tag.Text + " " + (i - 1).ToString("D3"), "");

                                        asugItem.sugName += tmpString;

                                        if (!globalObjects.GlobalClass.SCCMSUGList.Contains(asugItem.sugName))
                                        {
                                            existtripWire = false;

                                            break;
                                        }
                                    }
                                }

                                if ((!existtripWire && !sugNames.Contains(asugItem.sugName) || rollupProduct))
                                {
                                    if (rollupProduct)
                                    {
                                        asugItem.Products = productGroup;
                                    }
                                    else
                                    {
                                        List<string> tmpproductList = new List<string>();

                                        tmpproductList.Add(aProduct);

                                        asugItem.Products = tmpproductList;
                                    }

                                    if (rollupClassification)
                                    {
                                        asugItem.Classifications = classificationGroup;
                                    }
                                    else
                                    {
                                        List<string> tmpclassificationList = new List<string>();

                                        tmpclassificationList.Add(aClassification);

                                        asugItem.Classifications = tmpclassificationList;
                                    }

                                    if (rollupArchitecture)
                                    {
                                        asugItem.Architectures = architectureGroup;
                                    }
                                    else
                                    {
                                        List<string> tmparchitecturesList = new List<string>();

                                        tmparchitecturesList.Add(aArchitecture);

                                        asugItem.Architectures = tmparchitecturesList;
                                    }

                                    // Check if we have a patch that fits the M.O. of the proposed SUG

                                    bool foundPatch = false;

                                    int itotalPatches = 0;

                                    foreach (globalObjects.candidatesccmPatch acandidatePatch in globalObjects.GlobalClass.candidatePatches)
                                    {
                                        if (asugItem.Products.Contains(acandidatePatch.Product))
                                        {
                                            if (asugItem.Classifications.Contains(acandidatePatch.Classification))
                                            {
                                                if (asugItem.Architectures.Contains(acandidatePatch.Architecture))
                                                {
                                                    foundPatch = true;

                                                    itotalPatches += 1;
                                                }
                                            }
                                        }
                                    }

                                    // Add SUG if a Patch has been been found for it (foundPatch)

                                    if (foundPatch)
                                    {
                                        if (!sugNames.Contains(asugItem.sugName))
                                        {
                                            asugItem.TotalPatches = Convert.ToInt16(itotalPatches);

                                            globalObjects.GlobalClass.globalsugItems.Add(asugItem);

                                            sugNames.Add(asugItem.sugName);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }

                // Prepare the Reporting Software Update Groups

                globalObjects.sugitemCollection tmpareportingsugItem = new globalObjects.sugitemCollection();

                if (globalObjects.GlobalClass.allowreportingSUGS)
                {
                    foreach (globalObjects.sugItem areportingsugItem in globalObjects.GlobalClass.globalsugItems)
                    {
                        List<string> productGroup = areportingsugItem.Products;

                        List<string> classificationGroup = areportingsugItem.Classifications;

                        List<string> architectureGroup = areportingsugItem.Architectures;

                        List<string> languagesGroup = areportingsugItem.Languages.Split(',').ToList();

                        foreach (string aProduct in productGroup)
                        {
                            globalObjects.sugItem anewsugItem = new globalObjects.sugItem();

                            string newsugName = "";

                            // Put the controls into a list as textual entries, TEXT: to denote special, rest are assumed as buttons

                            foreach (string sugnameformatItem in globalObjects.GlobalClass.sugnameFormat)
                            {
                                if (sugnameformatItem.ToLower().ToString().StartsWith("text"))
                                {
                                    newsugName += sugnameformatItem.Replace("Text:", "");
                                }

                                if (sugnameformatItem.ToLower().ToString().StartsWith("button"))
                                {
                                    string switchValue = sugnameformatItem.Replace("Button:", "");

                                    switch (switchValue)
                                    {
                                        case "Year":
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Year");
                                            break;
                                        case "Month":
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Month");
                                            break;
                                        case "Day":
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Day");
                                            break;
                                        case "Product":
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + aProduct;
                                            break;
                                        case "Reporting":
                                            newsugName += globalObjects.GlobalClass.namingDelimiter + "Reporting";
                                            break;
                                    }
                                }

                            }

                            if (newsugName.StartsWith(globalObjects.GlobalClass.namingDelimiter))
                            {
                                newsugName = newsugName.Substring(globalObjects.GlobalClass.namingDelimiter.Length, newsugName.Length - globalObjects.GlobalClass.namingDelimiter.Length);
                            }

                            anewsugItem.sugName = newsugName;
                            anewsugItem.Architectures = architectureGroup;
                            anewsugItem.Products = productGroup;
                            anewsugItem.Languages = areportingsugItem.Languages;
                            anewsugItem.SUGType = "Reporting";
                            anewsugItem.TotalPatches = 0;

                            anewsugItem.DeviceType = "";

                            anewsugItem.Classifications = classificationGroup;

                            // Check if we have a patch that fits the M.O. of the proposed SUG

                            int itotalPatches = 0;

                            foreach (globalObjects.candidatesccmPatch acandidatePatch in globalObjects.GlobalClass.candidatePatches)
                            {
                                if (anewsugItem.Products.Contains(acandidatePatch.Product))

                                    if (anewsugItem.Classifications.Contains(acandidatePatch.Classification))
                                    {
                                        if (anewsugItem.Architectures.Contains(acandidatePatch.Architecture))
                                        {
                                            itotalPatches += 1;
                                        }
                                    }
                            }

                            anewsugItem.TotalPatches = Convert.ToInt16(itotalPatches);

                            tmpareportingsugItem.Add(anewsugItem);
                        }
                    }
                }

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    //dgv_Preview.Rows.Clear();
                }

                // Create Client monthly rollup reporting SUG - This is cosmetic, it won't be processed by the engine

                if (globalObjects.GlobalClass.rollupclientOS)
                {
                    bool clientsugFound = false;

                    foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems) // Look in the SUG list to see if there are any client SUGS
                    {
                        // If non-PM SUGs are present, they will be rolled up as we do not have a static identifier in the SUG name

                        if (asugItem.sugName.ToLower().Contains("windows 7") || asugItem.sugName.ToLower().Contains("windows 8") || asugItem.sugName.ToLower().Contains("windows 10") || asugItem.sugName.ToLower().Contains("windows xp") || asugItem.sugName.ToLower().Contains("Windows vista") && !asugItem.sugName.ToLower().Contains("reporting"))
                        {
                            clientsugFound = true; // We've found a client SUG so toggle the switch

                            break;
                        }
                    }

                    if (clientsugFound)
                    {
                        // Tally the total patches 

                        globalObjects.sugItem anewsugItem = new globalObjects.sugItem();

                        int totalclientPatches = 0;

                        foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                        {
                            if (asugItem.sugName.ToLower().Contains("windows 7") || asugItem.sugName.ToLower().Contains("windows 8") || asugItem.sugName.ToLower().Contains("windows 10") || asugItem.sugName.ToLower().Contains("windows xp") || asugItem.sugName.ToLower().Contains("Windows vista") && !asugItem.sugName.ToLower().Contains("reporting"))
                            {
                                totalclientPatches += Convert.ToInt16(asugItem.TotalPatches);
                            }
                        }

                        string newsugName = "";

                        // Put the controls into a list as textual entries, TEXT: to denote special, rest are assumed as buttons

                        foreach (string sugnameformatItem in globalObjects.GlobalClass.sugnameFormat)
                        {
                            if (sugnameformatItem.ToLower().ToString().StartsWith("text"))
                            {
                                newsugName += sugnameformatItem.Replace("Text:", "");
                            }

                            if (sugnameformatItem.ToLower().ToString().StartsWith("button"))
                            {
                                string switchValue = sugnameformatItem.Replace("Button:", "");

                                switch (switchValue)
                                {
                                    case "Year":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Year");
                                        break;
                                    case "Month":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Month");
                                        break;
                                    case "Day":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Day");
                                        break;
                                    case "Product":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "All Client OS";
                                        break;
                                    case "Reporting":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "Reporting";
                                        break;
                                }
                            }

                        }

                        if (newsugName.StartsWith(globalObjects.GlobalClass.namingDelimiter))
                        {
                            newsugName = newsugName.Substring(globalObjects.GlobalClass.namingDelimiter.Length, newsugName.Length - globalObjects.GlobalClass.namingDelimiter.Length);
                        }

                        anewsugItem.sugName = newsugName;
                        anewsugItem.Architectures = new List<string>();
                        anewsugItem.Products = new List<string>();
                        anewsugItem.Languages = "";
                        anewsugItem.SUGType = "Reporting";
                        anewsugItem.TotalPatches = Convert.ToInt16(totalclientPatches);
                        anewsugItem.DeviceType = "";
                        anewsugItem.Classifications = new List<string>();

                        tmpareportingsugItem.Add(anewsugItem);
                    }
                }

                // Create Server monthly rollup reporting SUG - This is cosmetic, it won't be processed by the engine                    

                if (globalObjects.GlobalClass.rollupserverOS)
                {
                    bool serversugFound = false;

                    foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems) // Look in the SUG reporting list to see if there are any Server SUGS
                    {
                        if (asugItem.sugName.ToLower().Contains("windows server"))
                        {
                            serversugFound = true; // We've found a server SUG so toggle the switch

                            break;
                        }
                    }

                    if (serversugFound)
                    {
                        // Tally the total patches 

                        globalObjects.sugItem anewsugItem = new globalObjects.sugItem();

                        int totalserverPatches = 0;

                        foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                        {
                            if (asugItem.sugName.ToLower().Contains("server") && !asugItem.sugName.ToLower().Contains("reporting"))
                            {
                                totalserverPatches += Convert.ToInt16(asugItem.TotalPatches);
                            }
                        }

                        string newsugName = "";

                        // Put the controls into a list as textual entries, TEXT: to denote special, rest are assumed as buttons

                        foreach (string sugnameformatItem in globalObjects.GlobalClass.sugnameFormat)
                        {
                            if (sugnameformatItem.ToLower().ToString().StartsWith("text"))
                            {
                                newsugName += sugnameformatItem.Replace("Text:", "");
                            }

                            if (sugnameformatItem.ToLower().ToString().StartsWith("button"))
                            {
                                string switchValue = sugnameformatItem.Replace("Button:", "");

                                switch (switchValue)
                                {
                                    case "Year":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Year");
                                        break;
                                    case "Month":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Month");
                                        break;
                                    case "Day":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Day");
                                        break;
                                    case "Product":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "All Server OS";
                                        break;
                                    case "Reporting":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "Reporting";
                                        break;
                                }
                            }

                        }

                        if (newsugName.StartsWith(globalObjects.GlobalClass.namingDelimiter))
                        {
                            newsugName = newsugName.Substring(globalObjects.GlobalClass.namingDelimiter.Length, newsugName.Length - globalObjects.GlobalClass.namingDelimiter.Length);
                        }

                        anewsugItem.sugName = newsugName;
                        anewsugItem.Architectures = new List<string>();
                        anewsugItem.Products = new List<string>();
                        anewsugItem.Languages = "";
                        anewsugItem.SUGType = "Reporting";
                        anewsugItem.TotalPatches = Convert.ToInt16(totalserverPatches);
                        anewsugItem.DeviceType = "";
                        anewsugItem.Classifications = new List<string>();

                        tmpareportingsugItem.Add(anewsugItem);
                    }
                }

                // Create Office monthly rollup reporting SUG - This is cosmetic, it won't be processed by the engine

                if (globalObjects.GlobalClass.rollupoffice)
                {
                    bool officesugFound = false;

                    foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems) // Look in the SUG reporting list to see if there are any office SUGS
                    {
                        if (asugItem.sugName.ToLower().Contains("office"))
                        {
                            officesugFound = true; // We've found a server SUG so toggle the switch

                            break;
                        }
                    }

                    if (officesugFound)
                    {
                        // Tally the total patches 

                        globalObjects.sugItem anewsugItem = new globalObjects.sugItem();

                        int totalofficePatches = 0;

                        foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                        {
                            if (asugItem.sugName.ToLower().Contains("office") && !asugItem.sugName.ToLower().Contains("reporting"))
                            {
                                totalofficePatches += Convert.ToInt16(asugItem.TotalPatches);
                            }
                        }

                        string newsugName = "";

                        // Put the controls into a list as textual entries, TEXT: to denote special, rest are assumed as buttons

                        foreach (string sugnameformatItem in globalObjects.GlobalClass.sugnameFormat)
                        {
                            if (sugnameformatItem.ToLower().ToString().StartsWith("text"))
                            {
                                newsugName += sugnameformatItem.Replace("Text:", "");
                            }

                            if (sugnameformatItem.ToLower().ToString().StartsWith("button"))
                            {
                                string switchValue = sugnameformatItem.Replace("Button:", "");

                                switch (switchValue)
                                {
                                    case "Year":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Year");
                                        break;
                                    case "Month":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Month");
                                        break;
                                    case "Day":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + getDate("Day");
                                        break;
                                    case "Product":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "All Office";
                                        break;
                                    case "Reporting":
                                        newsugName += globalObjects.GlobalClass.namingDelimiter + "Reporting";
                                        break;
                                }
                            }

                        }

                        if (newsugName.StartsWith(globalObjects.GlobalClass.namingDelimiter))
                        {
                            newsugName = newsugName.Substring(globalObjects.GlobalClass.namingDelimiter.Length, newsugName.Length - globalObjects.GlobalClass.namingDelimiter.Length);
                        }

                        anewsugItem.sugName = newsugName;
                        anewsugItem.Architectures = new List<string>();
                        anewsugItem.Products = new List<string>();
                        anewsugItem.Languages = "";
                        anewsugItem.SUGType = "Reporting";
                        anewsugItem.TotalPatches = Convert.ToInt16(totalofficePatches);
                        anewsugItem.DeviceType = "";
                        anewsugItem.Classifications = new List<string>();

                        tmpareportingsugItem.Add(anewsugItem);
                    }
                }

                // Add Reporting SUGs to the global SUG collection

                if (tmpareportingsugItem.Count > 0)
                {
                    foreach (globalObjects.sugItem asugItem in tmpareportingsugItem)
                    {
                        globalObjects.GlobalClass.globalsugItems.Add(asugItem);
                    }
                }

                // Add Reporting and Deployment SUGs to the DGV

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                    {
                        DataGridViewRow adgvRow = new DataGridViewRow();

                        if (asugItem.SUGType == "Reporting")
                        {
                            // Check if this SUG is already in the DGV

                            bool amatchFound = false;

                            foreach (DataGridViewRow amanageddgvRow in dgv_Preview.Rows)
                            {
                                if (amanageddgvRow.Cells["c_preview_Name"].Value.ToString() == asugItem.sugName)
                                {
                                    amatchFound = true;

                                    break;
                                }
                            }

                            if (amatchFound) // A Reporting SUG already exists
                            {
                                // Find the Reporting SUG in the DGV, and update it with the totalPatches from the current Reporting SUG item

                                foreach (DataGridViewRow updatedgvRow in dgv_Preview.Rows)
                                {
                                    if (updatedgvRow.Cells["c_preview_Name"].Value.ToString() == asugItem.sugName)
                                    {
                                        int itotalPatches = 0;

                                        itotalPatches = Convert.ToInt16(updatedgvRow.Cells["c_preview_TotalItems"].Value);

                                        itotalPatches += Convert.ToInt16(asugItem.TotalPatches);

                                        updatedgvRow.Cells["c_preview_TotalItems"].Value = Convert.ToInt16(itotalPatches);
                                    }
                                }
                            }
                            else
                            {
                                dgv_Preview.Rows.Add(asugItem.SUGType, asugItem.sugName, Convert.ToInt16(asugItem.TotalPatches), asugItem.DeviceType);
                            }
                        }
                        else // Deployment SUG
                        {
                            dgv_Preview.Rows.Add(asugItem.SUGType, asugItem.sugName, Convert.ToInt16(asugItem.TotalPatches), asugItem.DeviceType);
                        }
                    }
                }

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    l_totalRows.Text = "Total patches: " + globalObjects.GlobalClass.candidatePatches.Count + " - Total SUGs: " + globalObjects.GlobalClass.globalsugItems.Count.ToString(); // why are there more entries in globalsugitems than shown in dgv?
                    l_totalRows.Text = "Total patches: " + globalObjects.GlobalClass.candidatePatches.Count + " - Total SUGs: " + dgv_Preview.Rows.Count.ToString();
                }
            }
        }

        private void buildPreview_Click(object sender, EventArgs e)
        {
            buildPreview();
        }

        private void cb_patchnamingDelimiter_TextChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.loadthreadRunning)
            {
                buildPreview();
            }
        }

        private void b_devicetypeAdd_Click(object sender, EventArgs e)
        {
            try
            {
                if (!lb_deviceType.Items.Contains(tb_deviceType.Text) && tb_deviceType.Text != "")
                {
                    // Add a new Deployment Property config for this new device group

                    globalObjects.deploymentProperty aclientdeploymentProperty = new globalObjects.deploymentProperty();

                    aclientdeploymentProperty.DeviceGroup = tb_deviceType.Text;
                    aclientdeploymentProperty.DisableMomAlerts = true;
                    aclientdeploymentProperty.DPLocality = 80;
                    aclientdeploymentProperty.LimitStateMessageVerbosity = false;
                    aclientdeploymentProperty.LogComplianceToWinEvent = false;
                    aclientdeploymentProperty.NotifyUser = false;
                    aclientdeploymentProperty.OverrideServiceWindows = true;
                    aclientdeploymentProperty.PersistOnWriteFilterDevices = true;
                    aclientdeploymentProperty.RaiseMomAlertsOnFailure = false;
                    aclientdeploymentProperty.RebootOutsideOfServiceWindows = true;
                    aclientdeploymentProperty.RequirePostRebootFullScan = true;
                    aclientdeploymentProperty.SendDetailedNonComplianceStatus = true;
                    aclientdeploymentProperty.SoftDeadlineEnabled = true;
                    aclientdeploymentProperty.StateMessagePriority = "Normal";
                    aclientdeploymentProperty.StateMessageVerbosity = "All";
                    aclientdeploymentProperty.SuppressReboot = 2;
                    aclientdeploymentProperty.UseBranchCache = true;
                    aclientdeploymentProperty.UseGMTTimes = false;
                    aclientdeploymentProperty.UserUIExperience = false;
                    aclientdeploymentProperty.WoLEnabled = false;

                    globalObjects.GlobalClass.globaldeploymentpropertiesCollection.Add(aclientdeploymentProperty);                   

                    // Add to the global device group collection

                    globalObjects.GlobalClass.devicetypeList.Add(tb_deviceType.Text);

                    // Clear the data entry field for the device group

                    tb_deviceType.Text = "";

                    // Repopulate the dependent drop downs

                    this.lb_deviceType.Items.Clear();

                    this.c_deployments_DeviceType.Items.Clear();

                    this.c_scoping_deviceType.Items.Clear();

                    this.cb_deploymentdeviceGroup.Items.Clear();

                    foreach (string aItem in globalObjects.GlobalClass.devicetypeList)
                    {
                        // Add to the Device Group drop-down

                        lb_deviceType.Items.Add(aItem);

                        this.c_deployments_DeviceType.Items.Add(aItem);

                        this.c_scoping_deviceType.Items.Add(aItem);

                        // Add to the device properties drop-down

                        this.cb_deploymentdeviceGroup.Items.Add(aItem);
                    }
                    
                    // Store device groups in the registry

                    setRegistry("PatchDeviceTypes", globalObjects.GlobalClass.devicetypeList.ToArray());

                    string[] readyforRegistry = deploymentpropertyconverttoReg(globalObjects.GlobalClass.globaldeploymentpropertiesCollection); // Returns a string array

                    setRegistry("PatchDeploymentProperties", readyforRegistry);

                    getpatchdevicetypefromRegistry();                    
                }
            }
            catch (Exception ee)
            {

            }
        }

        private void b_devicetypeRemove_Click(object sender, EventArgs e)
        {
            try
            {
                string devicetypeitemName = lb_deviceType.SelectedItem.ToString();

                globalObjects.GlobalClass.globaldeploymentpropertiesCollection.RemoveName(devicetypeitemName);

                globalObjects.GlobalClass.devicetypeList.Remove(devicetypeitemName);

                // Repopulate the dependent drop downs

                this.lb_deviceType.Items.Clear();

                this.c_deployments_DeviceType.Items.Clear();

                this.c_scoping_deviceType.Items.Clear();

                this.cb_deploymentdeviceGroup.Items.Clear();

                foreach (string aItem in globalObjects.GlobalClass.devicetypeList)
                {
                    // Add to the Device Group drop-down

                    lb_deviceType.Items.Add(aItem);

                    this.c_deployments_DeviceType.Items.Add(aItem);

                    this.c_scoping_deviceType.Items.Add(aItem);

                    // Add to the device properties drop-down

                    this.cb_deploymentdeviceGroup.Items.Add(aItem);
                }

                try
                {
                    cb_deploymentdeviceGroup.SelectedIndex = 0;
                }
                catch (Exception ee)
                {

                }

                setRegistry("PatchDeviceTypes", globalObjects.GlobalClass.devicetypeList.ToArray());

                string[] readyforRegistry = deploymentpropertyconverttoReg(globalObjects.GlobalClass.globaldeploymentpropertiesCollection); // Returns a string array

                setRegistry("PatchDeploymentProperties", readyforRegistry);

                getpatchdevicetypefromRegistry();
            }
            catch (Exception ee)
            {

            }
        }

        private void dgv_Transcript_DataError(object sender, DataGridViewDataErrorEventArgs e)
        {
            e.Cancel = true;
        }

        private List<string> languagetoContentLocale(List<string> friendlyLanguages)
        {
            List<string> contentlocaleList = new List<string>();

            foreach (string aLanguage in friendlyLanguages)
            {
                IResultObject contentLocaleLookup = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_CategoryInstance where CategoryTypeName = 'Locale'  and LocalizedCategoryInstanceName = '" + aLanguage + "'");

                foreach (IResultObject contentLocalelookupItem in contentLocaleLookup)
                {
                    contentlocaleList.Add(contentLocalelookupItem["CategoryInstance_UniqueID"].StringValue);
                }
            }

            // Add Locale:0 as it applies to all

            contentlocaleList.Add("Locale:0");

            return contentlocaleList;
        }

        // Threaded Code

        private string getwsusupdateserver()
        {
            string passString = "";

            try
            {
                IUpdateServer updateServer = AdminProxy.GetUpdateServer(globalObjects.GlobalClass.serverName, false, 8530);

                globalObjects.GlobalClass.wsusManagement = updateServer;

                passString = "true";

            }
            catch (Exception ee)
            {
                passString = ee.ToString();
            }

            return passString;
        }

        private void bw_load_DoWork(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker worker = sender as BackgroundWorker;

            if ((worker.CancellationPending == true))
            {
                e.Cancel = true;
            }
            else
            {
            }

            worker.ReportProgress(0, "Checking for WSUS Management capability");

            string senseWSUS = getwsusupdateserver();

            if (senseWSUS == "true")
            {
                worker.ReportProgress(0, "Found WSUS Management assembly");
            }
            else
            {
                worker.ReportProgress(0, "Couldn't find WSUS Management assembly - " + senseWSUS);
            }

            worker.ReportProgress(0, "Retrieving WSUS Products, Classifications and Languages");

            getwsusConfig(worker);

            worker.ReportProgress(0, "Retrieving ConfigMgr Security Scopes");

            getsecurityScopes(worker);

            worker.ReportProgress(0, "Retrieving ConfigMgr Collections");

            getCollections(worker);

            worker.ReportProgress(0, "Retrieving ConfigMgr Software Update Groups");

            getsccmsugList(worker);

            worker.ReportProgress(0, "Retrieving Distribution Points");

            getsitedistributionPoints(worker);

            worker.ReportProgress(0, "SPECIAL-TRUE");

            getconfigmgrPatches(worker);

            // Obtain configuration from Registry (only do this after everything else has been collected)

            worker.ReportProgress(0, "Retrieving Patch Master Configuration from the registry");

            getconfigRegistry();

            worker.ReportProgress(0, "SPECIAL-FALSE");

            //checkforPatches(worker);
        }

        private void bw_load_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            string theMessage = e.UserState.ToString();

            if (theMessage == "SPECIAL-TRUE")
            {
                this.pb_waitImage.Visible = true;
            }
            else if (theMessage == "SPECIAL-FALSE")
            {
                this.pb_waitImage.Visible = false;
            }
            else
            {
                sharedlogMessage(theMessage, false);
            }
        }

        private void bw_load_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if ((e.Cancelled == true))
            {
            }

            if (e.Error == null)
            {
                // Apply configuration obtained from registry

                applyconfigRegistry();

                // Set the forms controls based on the registry config just brought in

                globalObjects.GlobalClass.disableProcessing = false;

                globalObjects.GlobalClass.buildthreadRunning = false;

                List<string> collectionNames = new List<string>();

                foreach (collectioncollectionItem aScope in globalCollections)
                {
                    if (aScope.collectionName != "All Custom Resources") // Skip if it is All Custom Resources hidden collection
                    {
                        collectionNames.Add(aScope.collectionName);
                    }
                }

                this.c_deployment_coltarget.Items.Clear();

                this.c_deployment_coltarget.Items.AddRange(collectionNames.ToArray());

                // Add globalsecurityScopes to dgv_securityScopes

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    foreach (securityScopesItem securityScope in globalsecurityScopes)
                    {
                        c_scoping_Scope.Items.Add(securityScope.securityscopeName);
                    }
                }                

                // Store SUG Name rendering bar format

                //if (!globalObjects.GlobalClass.SilentRunning)
                //{
                    //buildsugnameFormat();
                //}

                // Build SUG Name Preview

                //buildPreview();

                globalObjects.GlobalClass.loadthreadRunning = false;

                sharedlogMessage("Loading complete", false);

                // Check for Patches

                docheckforPatches();

                // Completion

                // enableInterface();
            }
        }

        private void bw_sumCleanup_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {            
            if ((e.Cancelled == true))
            {
            }

            if (e.Error == null)
            {

            }

            if (!globalObjects.GlobalClass.SilentRunning)
            {

                b_locatesupersedPatches.Enabled = true;

                b_removesupersededPatches.Enabled = true;

                dgv_supersededPatches.Rows.Clear();

                enableInterface();
            }

            globalObjects.GlobalClass.sumcleanupthreadRunning = false;

            globalObjects.GlobalClass.globalsupersedpatchesCollection.Clear();

            // We're at the end of the line for silent running, we should exit the application if SilentRunning is enabled            

            if (globalObjects.GlobalClass.SilentRunning)
            {
                Application.Exit();
            }
        }


        private void bw_sumCleanup_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            string theMessage = e.UserState.ToString();

            sharedlogMessage(theMessage, false);
        }

        private void bw_sumCleanup_DoWork(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker worker = sender as BackgroundWorker;

            if ((worker.CancellationPending == true))
            {
                e.Cancel = true;
            }
            else
            {

            }

            worker.ReportProgress(0, "----------------------------------------------------------");
            worker.ReportProgress(0, "Beginning removal of superseded patches from SUGs and SUPs");
            worker.ReportProgress(0, "----------------------------------------------------------");

            if (globalObjects.GlobalClass.globalsupersedpatchesCollection.Count > 0)
            {
                worker.ReportProgress(0, "Processing Software Update Groups");

                List<string> packageIDS = new List<string>();

                List<int> CIIDS = new List<int>();

                foreach (globalObjects.supersededPatch asupersededPatch in globalObjects.GlobalClass.globalsupersedpatchesCollection)
                {
                    string sugName = asupersededPatch.SugName;
                    int sugCIID = Convert.ToInt32(asupersededPatch.SugCIID);
                    int patchCIID = Convert.ToInt32(asupersededPatch.PatchCIID);
                    string KBID = asupersededPatch.ArticleID;
                    string Name = asupersededPatch.LocalizedDisplayName;

                    if (!CIIDS.Contains(patchCIID)) // Add the patches CIID onto the CIIDS list for later handling
                    {
                        CIIDS.Add(patchCIID);
                    }

                    try
                    {
                        // Get the sugName

                        worker.ReportProgress(0, "Retrieving SUG " + sugName);

                        try
                        {
                            IResultObject updateGroup = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_AuthorizationList.CI_ID=" + sugCIID);

                            // Get sugName's Patches

                            int[] sugPatches = updateGroup["Updates"].IntegerArrayValue;

                            // Remove current CIID

                            List<int> patchIDs = sugPatches.ToList();

                            patchIDs.Remove(patchCIID);

                            sugPatches = patchIDs.ToArray();

                            // Check that patches exist in the SUG

                            if (sugPatches.Count() > 0)
                            {
                                try
                                {
                                    updateGroup["Updates"].IntegerArrayValue = sugPatches;

                                    updateGroup.Put();

                                    worker.ReportProgress(0, "Updated SUG " + sugName);
                                }
                                catch (Exception ee)
                                {
                                    worker.ReportProgress(0, "Failure to update SUG " + sugName);
                                }
                            }
                            else // Remove the SUG as it no longer contain patches
                            {
                                try
                                {
                                    worker.ReportProgress(0, "Removing empty SUG " + sugName);

                                    updateGroup.Delete();

                                    worker.ReportProgress(0, "Successfully removed empty SUG " + sugName);
                                }
                                catch (Exception ee)
                                {
                                    worker.ReportProgress(0, "Failure deleting the SUG " + sugName + " - " + ee.Message);
                                }
                            }
                        }
                        catch (Exception ee)
                        {
                            worker.ReportProgress(0, "Failed to retrieve SUG " + sugName + " - " + ee.Message);
                        }
                    }
                    catch (Exception ee)
                    {
                        worker.ReportProgress(0, "Could not get the SUG " + sugName + " - " + ee.Message);
                    }
                }

                // Now remove Content

                if (CIIDS.Count > 0)
                {
                    worker.ReportProgress(0, "Processing Software Update Packages");

                    foreach (int CIID in CIIDS)
                    {
                        IResultObject patchContents = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("SELECT SMS_PackageToContent.ContentID,SMS_PackageToContent.PackageID FROM SMS_PackageToContent JOIN SMS_CIToContent ON SMS_CIToContent.ContentID = SMS_PackageToContent.ContentID WHERE SMS_CIToContent.CI_ID = '" + CIID + "'");

                        foreach (IResultObject patchContent in patchContents)
                        {
                            IResultObject existingSUMDeploymentPackage = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_SoftwareUpdatesPackage.PackageID='" + patchContent["PackageID"].StringValue + "'");

                            // Store PackageID away if unique

                            if (!packageIDS.Contains(patchContent["PackageID"].StringValue))
                            {
                                packageIDS.Add(patchContent["PackageID"].StringValue);
                            }

                            Dictionary<string, object> removecontentProperties = new Dictionary<string, object>();

                            List<int> contentList = new List<int>();

                            contentList.Add(Convert.ToInt32(patchContent["ContentID"].IntegerValue));

                            removecontentProperties.Add("ContentIDs", contentList.ToArray());

                            try
                            {
                                worker.ReportProgress(0, "Removing ContentID " + patchContent["ContentID"].IntegerValue.ToString() + " from " + patchContent["PackageID"].StringValue);

                                existingSUMDeploymentPackage.ExecuteMethod("RemoveContent", removecontentProperties);

                                worker.ReportProgress(0, "Successfully removed ContentID " + patchContent["ContentID"].IntegerValue.ToString() + " from " + patchContent["PackageID"].StringValue);
                            }
                            catch (Exception ee)
                            {
                                worker.ReportProgress(0, "Couldn't complete removal of ContentID " + patchContent["ContentID"].IntegerValue.ToString() + " from " + patchContent["PackageID"].StringValue);
                            }
                        }
                    }

                    // Now update the DP's by refreshing their content

                    worker.ReportProgress(0, "Processing Distribution Point Refresh for affected Packages");

                    foreach (string packageID in packageIDS)
                    {
                        try
                        {
                            worker.ReportProgress(0, "Retrieving SUP " + packageID);

                            IResultObject existingSUMDeploymentPackage = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_SoftwareUpdatesPackage.PackageID='" + packageID + "'");

                            worker.ReportProgress(0, "Retrieved SUP " + packageID);

                            Dictionary<string, object> refreshdpProperties = new Dictionary<string, object>();

                            worker.ReportProgress(0, "Executing SUP Refresh Package Source " + packageID);

                            try
                            {
                                existingSUMDeploymentPackage.ExecuteMethod("RefreshPkgSource", refreshdpProperties);

                                worker.ReportProgress(0, "Refreshed Package Source " + packageID);
                            }
                            catch (Exception ee)
                            {
                                worker.ReportProgress(0, "Failure to Refresh Package Source " + packageID + " - " + ee.Message);
                            }
                        }
                        catch (Exception ee)
                        {
                            worker.ReportProgress(0, "Failed to retrieve the SUP " + packageID + " - " + ee.Message);
                        }
                    }
                }
            }

            worker.ReportProgress(0, "----------------------------------------------------------");
            worker.ReportProgress(0, "Completed removal of superseded patches from SUGs and SUPs");
            worker.ReportProgress(0, "----------------------------------------------------------");
        }


        private void bw_sumcleanupDetect_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if ((e.Cancelled == true))
            {
            }

            if (e.Error == null)
            {

            }

            // I am trying to clean up how the superceded patches are removed, when calling dection i need to accept true\false and spawn the cleanup, so that build and auto cleanup can work

            if (!globalObjects.GlobalClass.SilentRunning)
            {
                b_locatesupersedPatches.Enabled = true;

                b_removesupersededPatches.Enabled = true;
            }

            // Check if we should fire the SUM Cleanup thread off the back of this thread

            bool runsumCleanup = (bool)e.Result;

            try
            {
                if (runsumCleanup)
                {
                    if (!globalObjects.GlobalClass.SilentRunning)
                    {
                        tc_Main.SelectedTab = tb_Log; // Switch to logging tab
                    }

                    // Start the SUM Cleanup thread

                    BackgroundWorker bwsumCleanup = new BackgroundWorker();
                    bwsumCleanup.WorkerSupportsCancellation = true;
                    bwsumCleanup.WorkerReportsProgress = true;
                    bwsumCleanup.DoWork +=
                        new DoWorkEventHandler(bw_sumCleanup_DoWork);
                    bwsumCleanup.ProgressChanged +=
                        new ProgressChangedEventHandler(bw_sumCleanup_ProgressChanged);
                    bwsumCleanup.RunWorkerCompleted +=
                        new RunWorkerCompletedEventHandler(bw_sumCleanup_RunWorkerCompleted);

                    if (bwsumCleanup.IsBusy != true)
                    {
                        bwsumCleanup.RunWorkerAsync();

                        globalObjects.GlobalClass.sumcleanupthreadRunning = true;
                    }
                }
                else
                {
                    sharedlogMessage("No patches were identified for removal", false);

                    enableInterface();
                }
            }
            catch (Exception ee)
            {
                sharedlogMessage("Error launching the cleanup - " + ee.Message, false);

                enableInterface();
            }

            sharedlogMessage("Completed detection of superceded patches in Software Update Groups", false);

            globalObjects.GlobalClass.sumcleanupdetectthreadRunning = false;

            if (globalObjects.GlobalClass.SilentRunning && !runsumCleanup)
            {
                Application.Exit();
            }
        }


        private void bw_sumcleanupDetect_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (!globalObjects.GlobalClass.SilentRunning)
            {
                if (e.UserState is globalObjects.supersededPatch)
                {
                    try
                    {
                        DataGridViewRow newRow = (DataGridViewRow)dgv_supersededPatches.Rows[0].Clone();

                        globalObjects.supersededPatch asupersededPatch = (globalObjects.supersededPatch)e.UserState;

                        newRow.Cells[0].Value = asupersededPatch.SugName;
                        newRow.Cells[1].Value = asupersededPatch.SugCIID;
                        newRow.Cells[2].Value = Convert.ToInt32(asupersededPatch.PatchCIID);
                        newRow.Cells[3].Value = asupersededPatch.ArticleID;
                        newRow.Cells[4].Value = asupersededPatch.LocalizedDisplayName;

                        dgv_supersededPatches.Rows.Add(newRow);
                    }
                    catch (Exception) // Handle this being the first row in the DGV
                    {
                        // Create a row so we can clone it then alter its properties, before clearing the rows and adding it again (we get the row with correct columns)

                        try
                        {
                            dgv_supersededPatches.Rows.Add("Test", "Test", "Test", "Test", "Test");

                            DataGridViewRow newRow = (DataGridViewRow)dgv_supersededPatches.Rows[0].Clone();

                            dgv_supersededPatches.Rows.Clear();

                            globalObjects.supersededPatch asupersededPatch = (globalObjects.supersededPatch)e.UserState;

                            newRow.Cells[0].Value = asupersededPatch.SugName;
                            newRow.Cells[1].Value = asupersededPatch.SugCIID;
                            newRow.Cells[2].Value = Convert.ToInt32(asupersededPatch.PatchCIID);
                            newRow.Cells[3].Value = asupersededPatch.ArticleID;
                            newRow.Cells[4].Value = asupersededPatch.LocalizedDisplayName;

                            dgv_supersededPatches.Rows.Add(newRow);
                        }
                        catch (Exception)
                        {

                        }
                    }
                }
                else if (e.UserState is string)
                {
                    sharedlogMessage(e.UserState.ToString(), false);
                }
            }
            else
            {
                sharedlogMessage(e.UserState.ToString(), false);
            }
        }

        private void bw_sumcleanupDetect_DoWork(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker worker = sender as BackgroundWorker;

            bool doCleanup = false;

            // If the check for patches thread is still running, hold off

            Stopwatch astopWatch = new Stopwatch();

            astopWatch.Start();

            if(globalObjects.GlobalClass.checkforpatchesthreadRunning)
            {
                worker.ReportProgress(0, "  other threads are running, waiting for things to settle down");
            }

            while (globalObjects.GlobalClass.checkforpatchesthreadRunning)
            {
                if (astopWatch.ElapsedMilliseconds > 300000)
                {
                    astopWatch.Stop();

                    break;
                }
            }

            if ((worker.CancellationPending == true))
            {
                e.Cancel = true;
            }
            else
            {

            }

            // Clear superseded patches global list

            globalObjects.GlobalClass.globalsupersedpatchesCollection.Clear();

            try
            {
                List<string> supersededpatchesList = new List<string>();

                foreach (string asugItem in globalObjects.GlobalClass.SCCMSUGList)
                {
                    worker.ReportProgress(0, "  Processing " + asugItem); // Go add a new DGV row for this patch

                    try
                    {
                        IResultObject updateGroups = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_AuthorizationList where LocalizedDisplayName = '" + asugItem + "'");

                        foreach (IResultObject aupdateGroup in updateGroups)
                        {
                            try
                            {
                                IResultObject updateGroup = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_AuthorizationList.CI_ID=" + aupdateGroup["CI_ID"].IntegerValue + "");

                                int[] sugPatches = updateGroup["Updates"].IntegerArrayValue;

                                int sugCIID = updateGroup["CI_ID"].IntegerValue;

                                foreach (int apatchCI_ID in sugPatches)
                                {
                                    // Get the patch and identify if it is superseded

                                    try
                                    {
                                        IResultObject aPatch = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_SoftwareUpdate.CI_ID=" + apatchCI_ID + "");

                                        bool ispatchSuperseded = aPatch["IsSuperseded"].BooleanValue;

                                        string apatchKBID = aPatch["ArticleID"].StringValue;

                                        if (ispatchSuperseded)
                                        {
                                            doCleanup = true;

                                            globalObjects.supersededPatch asupercededPatch = new globalObjects.supersededPatch();

                                            asupercededPatch.SugName = asugItem;
                                            asupercededPatch.SugCIID = aupdateGroup["CI_ID"].IntegerValue.ToString();
                                            asupercededPatch.PatchCIID = apatchCI_ID.ToString();
                                            asupercededPatch.ArticleID = aPatch["ArticleID"].StringValue;
                                            asupercededPatch.LocalizedDisplayName = aPatch["LocalizedDisplayName"].StringValue;

                                            globalObjects.GlobalClass.globalsupersedpatchesCollection.Add(asupercededPatch);

                                            worker.ReportProgress(0, asupercededPatch); // Go add a new DGV row for this patch                                
                                        }
                                    }
                                    catch (Exception ee)
                                    {
                                        worker.ReportProgress(0, "  Failure obtaining a patch from ConfigMgr for analysis - " + ee.Message);
                                    }
                                }
                            }
                            catch (Exception ee)
                            {
                                worker.ReportProgress(0, "  Failure handling SUG " + asugItem + " - " + ee.Message);
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        worker.ReportProgress(0, "  Failure handling SUG " + asugItem + " - " + ee.Message);
                    }
                }
            }
            catch (Exception ee)
            {
                worker.ReportProgress(0, "  Failure - " + ee.Message);
            }

            e.Result = doCleanup;
        }

        private bool hashcheckFile(string theFile, string theHash)
        {           
            byte[] patchhashBytes;

            string computedHash = "";

            if (theHash.ToLower().Contains("sha256")) // Treat as Sha256
            {
                //var message = System.Text.Encoding.UTF8.GetBytes(strData);

                SHA256Managed hashString = new SHA256Managed();

                using (hashString)
                {
                    using (var stream = File.OpenRead(theFile))
                    {
                        patchhashBytes = hashString.ComputeHash(stream);
                    }
                }

                foreach (byte b in patchhashBytes)
                {
                    var hexValue = b.ToString("x2");

                    computedHash = computedHash + (hexValue);
                }

                computedHash = ("Sha256:") + (computedHash.ToString().Replace("{", "").Replace("}", "").ToUpper());

            }
            else // Treat as Sha1
            {
                using (var sha1Hash = SHA1.Create())
                {
                    using (var stream = File.OpenRead(theFile))
                    {
                        patchhashBytes = sha1Hash.ComputeHash(stream);
                    }
                }                

                foreach (byte b in patchhashBytes)
                {
                    var hexValue = b.ToString("x2");

                    computedHash = computedHash + (hexValue);
                }

                computedHash = ("SHA1:") + (computedHash.ToString().Replace("{", "").Replace("}", "").ToUpper());
            }
                       
            if (computedHash == theHash)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

        private bool isclientPatch(string searchString)
        {
            if (searchString.ToLower().Contains("windows 7") || searchString.ToLower().Contains("windows 8") || searchString.ToLower().Contains("windows 10") || searchString.ToLower().Contains("windows xp") || searchString.ToLower().Contains("windows vista"))
            {
                return true;
            }

            return false;
        }

        private bool isserverPatch(string searchString)
        {
            if (searchString.ToLower().Contains("windows server"))
            {
                return true;
            }

            return false;
        }

        private bool isofficePatch(string searchString)
        {
            if (searchString.ToLower().Contains("office"))
            {
                return true;
            }

            return false;
        }

        private void bw_checkforPatches_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if ((e.Cancelled == true))
            {
            }

            if (e.Error == null)
            {
                sharedlogMessage("Total patches to ignore: " + e.Result.ToString(), false);

                l_totalRows.Text = "Total patches: " + globalObjects.GlobalClass.candidatePatches.Count + " - Total SUGs: " + globalObjects.GlobalClass.globalsugItems.Count.ToString();

                sharedlogMessage("Found " + globalObjects.GlobalClass.candidatePatches.Count + " Patches", false);

                buildPreview();

                if (!globalObjects.GlobalClass.sumcleanupdetectthreadRunning && !globalObjects.GlobalClass.sumcleanupthreadRunning)
                {
                    enableInterface();
                }

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    b_checkforPatches.Visible = true;

                    l_totalRows.Visible = true;

                    dgv_availablePatches.Visible = true;

                    pb_waitImage.Visible = false;

                    tc_Main.Visible = true;

                    if (cb_unlocknamingBar.Checked)
                    {
                        flp_namingSelections.Enabled = true;
                    }

                    dgv_availablePatches.ResumeLayout();

                    tc_Main.SelectedTab = tb_AvailablePatches;
                }              

                globalObjects.GlobalClass.checkforpatchesthreadRunning = false;

                // this.WindowState = FormWindowState.Normal;

                this.Activate();

                // buildPreview(); // Update the Build Preview *****

                if (globalObjects.GlobalClass.SilentRunning) // Begin the automated build out
                {
                    sharedlogMessage("Silent running build initiated", false);

                    beginBuildout();
                }
            }
        }
        private void bw_checkforPatches_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            if (e.UserState.GetType() == typeof(String))
            {
                if (e.UserState.ToString().Contains(ignorepatchMsg))
                {
                    sharedlogMessage(e.UserState.ToString(), true);
                }
                else
                {
                    sharedlogMessage(e.UserState.ToString(), false);
                }
            }
            else if (e.UserState.GetType() == typeof(List<string>))
            {
                List<string> passedList = (List<string>)e.UserState;
                
                int thearticleID = 0;

                try
                {
                    thearticleID = Convert.ToInt32(passedList[1]);
                }
                catch (Exception ee)
                {                    
                }

                DateTime datetime1 = new DateTime();

                DateTime datetime2 = new DateTime();

                try
                {
                    datetime1 = Convert.ToDateTime(passedList[6]);
                }
                catch (Exception ee)
                {
                    datetime1 = DateTime.Now;
                }

                try
                {
                    datetime2 = Convert.ToDateTime(passedList[7]);
                }
                catch (Exception ee)
                {
                    datetime2 = DateTime.Now;
                }

                dgv_availablePatches.Rows.Add(passedList[0], thearticleID, passedList[2], passedList[3], passedList[4], passedList[5], datetime1, datetime2);
            }
            else if (e.UserState.GetType() == typeof(String[]))
            {
                //foreach (string ignorepatchString in (Array)e.UserState)
                //{
                sharedlogMessage((String[])e.UserState, true);
                //}
            }
        }

        private void bw_checkforPatches_DoWork(object sender, DoWorkEventArgs e)
        {
            BackgroundWorker worker = sender as BackgroundWorker;

            if ((worker.CancellationPending == true))
            {
                e.Cancel = true;
            }
            else
            {
                getconfigmgrPatches(worker);

                int totalpatchestoIgnore = 0;

                globalObjects.GlobalClass.candidatePatches.Clear();

                List<string> ignorepatchList = new List<string>();

                foreach (globalObjects.sccmPatch aPatch in globalObjects.GlobalClass.sccmPatches)
                {
                    List<string> categoryinstancenameList = new List<string>(aPatch.LocalizedCategoryInstanceNames.ToList());

                    foreach (globalObjects.ruleItem aruleItem in globalObjects.GlobalClass.globalruleitemCollection)
                    {
                        List<string> productList = new List<string>(aruleItem.Products.Split(','));

                        // Is this patch relevant?

                        bool processthisPatch = false;

                        foreach (string testProduct in productList)
                        {
                            if (categoryinstancenameList.Contains(testProduct))
                            {
                                processthisPatch = true;
                            }
                        }

                        if (processthisPatch)
                        {
                            List<string> classificationList = new List<string>(aruleItem.Classifications.Split(','));
                            List<string> archictectureList = new List<string>(aruleItem.Architectures.Split(','));

                            List<string> includeruleList = new List<string>(aruleItem.IncludeRule.Split(','));

                            List<string> ignorebuildList = new List<string>(aruleItem.ExcludeRule.Split(','));

                            bool productFound = false;
                            bool classiificationFound = false;
                            bool architectureFound = false;
                            bool ignorebuildFound = false;
                            bool ignorelistFound = false;

                            string foundproductName = "";
                            string foundclassificationName = "";
                            string foundarchitectureName = "";

                            bool anincluderulematchFound = false;

                            if (includeruleList.Count() > 0 && includeruleList[0] != "") // If includeruleList contains any elements, then we're on for excluding anything not mentioned in the include rule array
                            {
                                foreach (string aincludeRule in includeruleList)
                                {
                                    if (aPatch.LocalizedDisplayName.Contains(aincludeRule))
                                    {
                                        anincluderulematchFound = true;
                                    }
                                }
                            }
                            else
                            {
                                anincluderulematchFound = true; // enable matchFound as there is no Include rule found
                            }

                            if (anincluderulematchFound) // If there is a match (or there are no Include rules, then this patch can be processed using the Exclude rules
                            {
                                List<string> foundproductNames = new List<string>();

                                foreach (string aProduct in productList)
                                {
                                    if (categoryinstancenameList.Contains(aProduct))
                                    {
                                        productFound = true;

                                        foundproductName = aProduct;

                                        foundproductNames.Add(aProduct);
                                    }
                                }

                                foreach (string aClassification in classificationList)
                                {
                                    if (categoryinstancenameList.Contains(aClassification))
                                    {
                                        classiificationFound = true;

                                        foundclassificationName = aClassification;
                                    }
                                }

                                foreach (string aArchictecture in archictectureList)
                                {
                                    if (aArchictecture == "Both")
                                    {
                                    }

                                    if (aArchictecture.ToLower() == "x86" || aArchictecture.ToLower() == "32-bit" || aArchictecture.ToLower() == "both")
                                    {
                                        if (!aPatch.LocalizedDisplayName.Contains("x64") && !aPatch.LocalizedDisplayName.Contains("64-Bit"))
                                        {
                                            architectureFound = true;

                                            foundarchitectureName = "x86";
                                        }
                                    }

                                    if (aArchictecture.ToLower() == "x64" || aArchictecture.ToLower() == "64-bit" || aArchictecture.ToLower() == "both")
                                    {
                                        if (aPatch.LocalizedDisplayName.Contains("x64") || aPatch.LocalizedDisplayName.Contains("64-Bit"))
                                        {
                                            architectureFound = true;

                                            foundarchitectureName = "x64";
                                        }
                                    }
                                }

                                foreach (string ignorebuildVersion in ignorebuildList)
                                {
                                    if (ignorebuildVersion != "")
                                    {
                                        if (aPatch.LocalizedDisplayName.Contains(ignorebuildVersion))
                                        {
                                            ignorebuildFound = true;
                                        }
                                    }
                                }

                                try
                                {
                                    globalObjects.ignorepatchesItem aignorepatchesItem = new globalObjects.ignorepatchesItem();

                                    aignorepatchesItem.PatchKB = aPatch.ArticleID;
                                    aignorepatchesItem.DisplayName = aPatch.LocalizedDisplayName;

                                    //aignorepatchesItem.Product = foundproductName; // *** Major change here - somehow i need to determine the OS the patch is for, problem is a patch can be for multiple OS's such as the malicious software tool

                                    aignorepatchesItem.Product = foundproductName; // *** 

                                    aignorepatchesItem.Classification = foundclassificationName;

                                    if (globalObjects.GlobalClass.globalignorepatchesCollection.Count > 0)
                                    {
                                        if (globalObjects.GlobalClass.globalignorepatchesCollection.Contains(aignorepatchesItem, aruleItem.Products.Split(',').ToList()))
                                        {
                                            ignorelistFound = true;

                                            ignorepatchList.Add("  " + ignorepatchMsg + ", " + findignoredPatch(aignorepatchesItem, aruleItem.Products.Split(',').ToList()) + " - " + aPatch.ArticleID + " - " + aPatch.LocalizedDisplayName);

                                            totalpatchestoIgnore += 1;
                                        }
                                    }
                                }
                                catch (Exception ee)
                                {

                                }

                                // We are pruning out duplicates here, when we should be allowing them if they meet the criteria???

                                if (productFound && classiificationFound && architectureFound && !ignorebuildFound && !ignorelistFound) // Does the Patch meet our criteria
                                {
                                    foreach (string atargetProduct in foundproductNames)
                                    {
                                        if (!globalObjects.GlobalClass.SilentRunning) // Add the patch to the datagridview availablePatches
                                        {
                                            List<string> passList = new List<string>();

                                            passList.Add(aruleItem.DeviceType);

                                            passList.Add(aPatch.ArticleID);
                                            passList.Add(aPatch.LocalizedDisplayName);
                                            passList.Add(atargetProduct);
                                            passList.Add(foundclassificationName);
                                            passList.Add(foundarchitectureName);
                                            passList.Add(aPatch.DateCreated.ToString());
                                            passList.Add(aPatch.DateLastModified.ToString());

                                            worker.ReportProgress(0, passList);
                                        }

                                        globalObjects.candidatesccmPatch acandidatePatch = new globalObjects.candidatesccmPatch();

                                        acandidatePatch.CI_ID = aPatch.CI_ID;
                                        acandidatePatch.CI_UniqueID = aPatch.CI_UniqueID;
                                        acandidatePatch.Product = atargetProduct;
                                        acandidatePatch.ArticleID = aPatch.ArticleID;
                                        acandidatePatch.Classification = foundclassificationName;
                                        acandidatePatch.Architecture = foundarchitectureName;
                                        acandidatePatch.LocalizedDisplayName = aPatch.LocalizedDisplayName;
                                        acandidatePatch.LocalizedCategoryInstanceNames = aPatch.LocalizedCategoryInstanceNames;
                                        acandidatePatch.UpdateLocales = aPatch.UpdateLocales;

                                        acandidatePatch.DateCreated = aPatch.DateCreated;
                                        acandidatePatch.DateLastModified = aPatch.DateLastModified;
                                        acandidatePatch.DatePosted = aPatch.DatePosted;
                                        acandidatePatch.DateRevised = aPatch.DateRevised;

                                        globalObjects.GlobalClass.candidatePatches.Add(acandidatePatch);
                                    }
                                }
                            }
                        }
                    }
                }


                if (ignorepatchList.Count > 0)
                {
                    worker.ReportProgress(0, ignorepatchList.ToArray());
                }

                e.Result = totalpatchestoIgnore;
            }
        }

        private void removeSUP(BackgroundWorker worker, string sugName)
        {
            worker.ReportProgress(0, "Removing Software Update Package " + sugName + @" due to an error (see above\log)");

            worker.ReportProgress(0, " Removing the SUP " + sugName);

            try
            {
                IResultObject theSUPS = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_SoftwareUpdatesPackage where Name = '" + sugName + "'");

                foreach (IResultObject theSUP in theSUPS)
                {
                    theSUP.Delete();
                }

                worker.ReportProgress(0, " SUP " + sugName + " removed");
            }
            catch (Exception ee)
            {
                worker.ReportProgress(0, " Failure to remove the SUP " + sugName);
            }
        }

        private void removeSUG(BackgroundWorker worker, string sugName, List<string> downloadfailureList)
        {
            if (downloadfailureList.Count > 0)
            {
                worker.ReportProgress(0, "Download error, skipping " + sugName + " - Patches not downloaded " + String.Join(", ", downloadfailureList));
            }

            worker.ReportProgress(0, "Removing the SUG " + sugName);

            try
            {
                IResultObject theSUGS = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_AuthorizationList where LocalizedDisplayName = '" + sugName + "'");

                foreach (IResultObject theSUG in theSUGS)
                {
                    theSUG.Delete();
                }

                worker.ReportProgress(0, "  SUG " + sugName + " removed");
            }
            catch (Exception ee)
            {
                worker.ReportProgress(0, "  Failure to remove the SUG " + sugName);
            }
        }

        private void sharedlogMessage(object incomingMessage, bool noDGV)
        {
            string theMessage = "";
            string[] theMessages;

            if (incomingMessage.GetType() == typeof(String[]))
            {
                theMessages = (String[])incomingMessage;
            }
            else if (incomingMessage.GetType() == typeof(String))
            {
                theMessage = (String)incomingMessage;
            }

            // Post to the log file (always resides in the same folder as the process)

            try
            {
                DateTime datetimenow = DateTime.Now;

                String formattedTime = "HH:mm:ss.mmm";

                formattedTime = datetimenow.ToString(formattedTime) + "-60";

                String formattedDate = "MM-dd-yyyy";

                formattedDate = datetimenow.ToString(formattedDate);

                //formattedTime = "01:16:03.939-60";

                string patchmasterprocessName = "";

                string patchmasterprocessId = "";

                string patchmasterloggingPath = "";

                try
                {
                    var patchmasterProcess = System.Diagnostics.Process.GetCurrentProcess();

                    patchmasterprocessName = patchmasterProcess.ProcessName;

                    patchmasterprocessId = patchmasterProcess.Id.ToString();

                    string fileName = Path.GetFileName(patchmasterProcess.MainModule.FileName.ToString());

                    patchmasterloggingPath = patchmasterProcess.MainModule.FileName.ToString();

                    patchmasterloggingPath = patchmasterloggingPath.Replace(@"\" + fileName, "") + @"\PatchMaster.log";
                }
                catch (Exception)
                {
                    patchmasterprocessName = "PatchMaster.exe";

                    patchmasterprocessId = "0";

                    string rootPath = Path.GetPathRoot(Environment.GetFolderPath(Environment.SpecialFolder.System));

                    patchmasterloggingPath = Path.GetPathRoot(Environment.GetFolderPath(Environment.SpecialFolder.System)) + @"Windows\Temp";
                }

                // Check if file is too big (5MB)

                try
                {
                    long logfileSize = new System.IO.FileInfo(patchmasterloggingPath).Length;

                    if (logfileSize > 5242880)
                    {
                        string addedtimeStamp = formattedTime;

                        System.IO.File.Move(patchmasterloggingPath, patchmasterloggingPath.Replace(".log", "-" + formattedDate.Replace("-", "") + formattedTime.Replace(":", "").Replace(".", "").Replace("-", "") + "._lo"));
                    }

                }
                catch (Exception)
                {

                }

                // Write to the log

                if (incomingMessage.GetType() == typeof(String))
                {
                    string eventlogEntry = "<![LOG[" + (String)incomingMessage + "]LOG]!>";

                    eventlogEntry = eventlogEntry + "<time=" + (char)34 + formattedTime + (char)34 + " date=" + (char)34 + formattedDate + (char)34 + " component=" + (char)34 + "PatchMaster" + (char)34 + " context=" + (char)34 + (char)34 + " type=" + (char)34 + "1" + (char)34 + " thread=" + (char)34 + patchmasterprocessId + (char)34 + " file=" + (char)34 + patchmasterprocessName + ":0" + (char)34 + ">";

                    File.AppendAllText(patchmasterloggingPath, eventlogEntry + Environment.NewLine);
                }
                else if (incomingMessage.GetType() == typeof(String[]))
                {
                    List<string> pumpignoreMessages = new List<string>();

                    string eventlogEntry = "";

                    foreach (string pumpMessage in (String[])incomingMessage)
                    {
                        eventlogEntry = "<![LOG[" + pumpMessage + "]LOG]!>";

                        eventlogEntry = eventlogEntry + "<time=" + (char)34 + formattedTime + (char)34 + " date=" + (char)34 + formattedDate + (char)34 + " component=" + (char)34 + "PatchMaster" + (char)34 + " context=" + (char)34 + (char)34 + " type=" + (char)34 + "1" + (char)34 + " thread=" + (char)34 + patchmasterprocessId + (char)34 + " file=" + (char)34 + patchmasterprocessName + ":0" + (char)34 + ">" + Environment.NewLine;

                        File.AppendAllText(patchmasterloggingPath, eventlogEntry);
                    }
                }
            }
            catch (Exception ee)
            {

            }

            // Post to the dgv so that the log tab is populated if silent running

            if (!noDGV && (incomingMessage.GetType() != typeof(String[])))
            {
                dgv_Logging.SuspendLayout();

                try
                {
                    DataGridViewRow newRow = (DataGridViewRow)dgv_Logging.Rows[0].Clone();

                    newRow.Cells[0].Value = theMessage;

                    if (theMessage.ToLower().Contains("warning"))
                    {
                        newRow.DefaultCellStyle.BackColor = Color.LightYellow;
                    }

                    if (theMessage.ToLower().Contains("error") || theMessage.ToLower().Contains("fail"))
                    {
                        newRow.DefaultCellStyle.BackColor = Color.OrangeRed;
                    }

                    dgv_Logging.Rows.Add(newRow);
                }
                catch (Exception) // Handle this being the first row in the DGV
                {
                    // Create a row so we can clone it then alter its properties, before clearing the rows and adding it again (we get the row with correct columns)

                    try
                    {
                        dgv_Logging.Rows.Add(theMessage);

                        DataGridViewRow newRow = (DataGridViewRow)dgv_Logging.Rows[0].Clone();

                        dgv_Logging.Rows.Clear();

                        newRow.Cells[0].Value = theMessage;

                        dgv_Logging.Rows.Add(newRow);
                    }
                    catch (Exception)
                    {

                    }
                }

                dgv_Logging.ResumeLayout();
            }

            if (dgv_Logging.Rows.Count - 1 >= 1) // Make selected row last row added and move to it
            {
                dgv_Logging.Rows[dgv_Logging.Rows.Count - 1].Selected = true;

                try
                {
                    dgv_Logging.Rows[dgv_Logging.Rows.Count - 2].Selected = false;
                }
                catch (Exception ee)
                {

                }

                try
                {
                    dgv_Logging.FirstDisplayedScrollingRowIndex = dgv_Logging.Rows.Count - 1;

                    dgv_Logging.Update();
                }
                catch (Exception ee)
                {

                }
            }
        }

        private void bw_build_DoWork(object sender, DoWorkEventArgs e)
        {
            // DeviceGroup has to be better handled, .Contains isn't usable as win7 and win7-canarie will throw a match for win7
            // I was tweaking sugitem.DeviceGroup to contain Win7,Win7-Canaries and then tracing through the code to see what wasn't honouring the split of the devicegroup and processing properly
            // ************


            BackgroundWorker worker = sender as BackgroundWorker;

            if (globalObjects.GlobalClass.checkforpatchesthreadRunning)
            {
                worker.ReportProgress(0, "Waiting for patch check thread to settle down ...");
            }

            while (globalObjects.GlobalClass.checkforpatchesthreadRunning) // Wait for check for patches thread to stop
            {
                Thread.Sleep(1000); // Sleep for 1 second

                if (!globalObjects.GlobalClass.checkforpatchesthreadRunning)
                {
                    worker.ReportProgress(0, "  thread has settled down ... ready for build out");
                }
            }

            if (globalObjects.GlobalClass.candidatePatches.Count > 0)
            {
                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    getconfigmgrPatches(worker); // Get the latesst patches from ConfigMgr if the PatchMaster patch cache is stale
                }

                List<string> summaryList = new List<string>();

                if ((worker.CancellationPending == true))
                {
                    e.Cancel = true;
                }
                else
                {
                    if (globalObjects.GlobalClass.globalsugItems.Count > 0)
                    {
                        globalObjects.supdpitemCollection asupdpitemCollection = new globalObjects.supdpitemCollection();

                        foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                        {
                            string[] asugdeviceType = asugItem.DeviceType.Split(','); // split the SUGs DeviceType string

                            List<string> sugPatchesCI_UniqueID = new List<string>();

                            List<int> sugPatches = new List<int>();

                            // Enumerate lists and identify patches from globalObjects.GlobalClass.candidatePatches

                            worker.ReportProgress(0, "Identifying Patches ...");

                            foreach (globalObjects.candidatesccmPatch acandidatesccmPatch in globalObjects.GlobalClass.candidatePatches)
                            {
                                if (asugItem.Products.Contains(acandidatesccmPatch.Product))
                                {
                                    if (asugItem.Classifications.Contains(acandidatesccmPatch.Classification))
                                    {
                                        if (asugItem.Architectures.Contains(acandidatesccmPatch.Architecture))
                                        {
                                            sugPatches.Add(Convert.ToInt32(acandidatesccmPatch.CI_ID));

                                            sugPatchesCI_UniqueID.Add(acandidatesccmPatch.CI_UniqueID);
                                        }
                                    }
                                }
                                else // Let's check to see if this is a rollup 'All X' reporting SUG
                                {
                                    if (asugItem.sugName.ToLower().Contains("all client"))
                                    {
                                        if (isclientPatch(acandidatesccmPatch.Product))
                                        {
                                            sugPatches.Add(Convert.ToInt32(acandidatesccmPatch.CI_ID));

                                            sugPatchesCI_UniqueID.Add(acandidatesccmPatch.CI_UniqueID);
                                        }
                                    }
                                    else if (asugItem.sugName.ToLower().Contains("all server"))
                                    {
                                        if (isserverPatch(acandidatesccmPatch.Product))
                                        {
                                            sugPatches.Add(Convert.ToInt32(acandidatesccmPatch.CI_ID));

                                            sugPatchesCI_UniqueID.Add(acandidatesccmPatch.CI_UniqueID);
                                        }
                                    }
                                    else if (asugItem.sugName.ToLower().Contains("all office"))
                                    {
                                        if (isofficePatch(acandidatesccmPatch.Product))
                                        {
                                            sugPatches.Add(Convert.ToInt32(acandidatesccmPatch.CI_ID));

                                            sugPatchesCI_UniqueID.Add(acandidatesccmPatch.CI_UniqueID);
                                        }
                                    }
                                }
                            }

                            worker.ReportProgress(0, "Patches Identified");

                            if (sugPatches.Count > 0) // Create the SUG
                            {
                                worker.ReportProgress(0, "Handling Software Update Group " + asugItem.sugName);

                                globalObjects.patchcontentidsCollection sugcontentidsCollection = new globalObjects.patchcontentidsCollection();

                                globalObjects.candidatesccmpatchCollection tmpcandidatesccmpatchCollection = new globalObjects.candidatesccmpatchCollection();

                                IResultObject updateGroup = null;

                                //IResultObject updateGroup = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_AuthorizationList");

                                try
                                {
                                    // Check if update group is reporting, if it exists then get a handle on it, if it is deployment assume it is unique

                                    bool reportingsugFound = false;

                                    if (asugItem.SUGType == "Reporting") // SUG could exist if it is a Reporting SUG
                                    {
                                        var updateGroups = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("select * from SMS_AuthorizationList where LocalizedDisplayName = '" + asugItem.sugName + "'");

                                        Int32 sugCIID = 0;

                                        // string dfsdfds = updateGroups["LocalizedDisplayName"].StringValue;

                                        try
                                        {
                                            foreach (IResultObject aupdateGroup in updateGroups)
                                            {
                                                sugCIID = aupdateGroup["CI_ID"].IntegerValue;

                                                reportingsugFound = true;

                                                worker.ReportProgress(0, "Retrieved existing Software Update Group " + asugItem.sugName);
                                            }

                                            if (reportingsugFound) //(sugCIID > 0) ***
                                            {
                                                updateGroup = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_AuthorizationList.CI_ID=" + sugCIID.ToString() + "");
                                            }
                                            else
                                            {
                                                worker.ReportProgress(0, "Creating new Software Update Group " + asugItem.sugName);

                                                updateGroup = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_AuthorizationList");

                                                worker.ReportProgress(0, "  Created.");
                                            }
                                        }
                                        catch (Exception ee) // This reporting SUG does not already exist so create it
                                        {
                                            if (!reportingsugFound)
                                            {
                                                worker.ReportProgress(0, "Creating new Software Update Group " + asugItem.sugName);

                                                updateGroup = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_AuthorizationList");

                                                worker.ReportProgress(0, "  Created.");
                                            }
                                        }
                                    }
                                    else // A Deployment
                                    {
                                        worker.ReportProgress(0, "Creating new Software Update Group " + asugItem.sugName);

                                        updateGroup = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_AuthorizationList");

                                        worker.ReportProgress(0, "  Created.");
                                    }

                                    try
                                    {
                                        if (reportingsugFound || (asugItem.sugName.ToLower().Contains("all client") || asugItem.sugName.ToLower().Contains("all server") || asugItem.sugName.ToLower().Contains("all office"))) // Combine the existing Updates with the new updates if a Reporting SUG and one exists
                                        {
                                            try
                                            {
                                                var existingPatches = updateGroup["Updates"].IntegerArrayValue;

                                                updateGroup["Updates"].IntegerArrayValue = existingPatches.Concat(sugPatches.ToArray()).ToArray();
                                            }
                                            catch (Exception ee)
                                            {
                                                updateGroup["Updates"].IntegerArrayValue = sugPatches.ToArray();

                                                List<IResultObject> localizedInfoArray = new List<IResultObject>();
                                                IResultObject tempPropObject = globalObjects.GlobalClass.ConnectionManager.CreateEmbeddedObjectInstance("SMS_CI_LocalizedProperties");
                                                tempPropObject["DisplayName"].StringValue = asugItem.sugName;
                                                tempPropObject["Description"].StringValue = "";
                                                tempPropObject["LocaleID"].IntegerValue = System.Threading.Thread.CurrentThread.CurrentUICulture.LCID;
                                                localizedInfoArray.Add(tempPropObject);
                                                updateGroup.SetArrayItems("LocalizedInformation", localizedInfoArray);
                                            }
                                        }
                                        else // new Deployment SUG                                    
                                        {
                                            updateGroup["Updates"].IntegerArrayValue = sugPatches.ToArray();

                                            List<IResultObject> localizedInfoArray = new List<IResultObject>();
                                            IResultObject tempPropObject = globalObjects.GlobalClass.ConnectionManager.CreateEmbeddedObjectInstance("SMS_CI_LocalizedProperties");
                                            tempPropObject["DisplayName"].StringValue = asugItem.sugName;
                                            tempPropObject["Description"].StringValue = "";
                                            tempPropObject["LocaleID"].IntegerValue = System.Threading.Thread.CurrentThread.CurrentUICulture.LCID;
                                            localizedInfoArray.Add(tempPropObject);
                                            updateGroup.SetArrayItems("LocalizedInformation", localizedInfoArray);
                                        }

                                        worker.ReportProgress(0, "Storing new Software Update Group " + asugItem.sugName);

                                        updateGroup.Put();

                                        worker.ReportProgress(0, "  Stored.");

                                        worker.ReportProgress(0, "Retrieving new Software Update Group " + asugItem.sugName);

                                        updateGroup.Get();

                                        worker.ReportProgress(0, "  Retrieved.");

                                        worker.ReportProgress(0, "Handling Patch CI's");

                                        int aupdateGroupCIID = updateGroup["CI_ID"].IntegerValue;

                                        string aupdategroupCI_UniqueID = updateGroup["CI_UniqueID"].StringValue;

                                        // Get ContentID's and CI_UniqueID's

                                        List<Int32> thecontentIDs = new List<int>();

                                        List<string> thecontentPaths = new List<string>();

                                        foreach (Int32 currentCI_ID in sugPatches)
                                        {
                                            IResultObject contentidList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_CITOContent where CI_ID = '" + currentCI_ID + "'");

                                            // Convert the SUG Language string into a string array, containing the correct ContentLocale for each Language

                                            List<string> convertedLanguages = languagetoContentLocale(asugItem.Languages.Split(',').ToList());

                                            foreach (IResultObject acontentid in contentidList)
                                            {
                                                string[] retrievedContentLocales = acontentid["ContentLocales"].StringArrayValue;

                                                bool triggerLanguage = false;

                                                foreach (string acontentLocale in retrievedContentLocales)
                                                {
                                                    if (convertedLanguages.Contains(acontentLocale))
                                                    {
                                                        triggerLanguage = true;

                                                        break;
                                                    }
                                                }

                                                if (triggerLanguage)
                                                {
                                                    globalObjects.patchcontentIDs newpatchcontentIDs = new globalObjects.patchcontentIDs();

                                                    newpatchcontentIDs.ContentID = acontentid["ContentID"].IntegerValue;

                                                    newpatchcontentIDs.ContentUniqueID = acontentid["ContentUniqueID"].StringValue;

                                                    newpatchcontentIDs.CI_UniqueID = acontentid["CI_UniqueID"].StringValue;

                                                    sugcontentidsCollection.Add(newpatchcontentIDs);
                                                }
                                            }
                                        }

                                        worker.ReportProgress(0, "  Handled.");

                                        if (reportingsugFound)
                                        {
                                            worker.ReportProgress(0, "Software Update Group " + asugItem.sugName + " updated");
                                        }
                                        else
                                        {
                                            worker.ReportProgress(0, "Software Update Group " + asugItem.sugName + " finished");
                                        }

                                        // Sort out the Security Scopes for the SUG  

                                        foreach (globalObjects.securityscopeItem asecurityscopeItem in globalObjects.GlobalClass.securityscopeRules)
                                        {
                                            string[] adeviceGroups = asecurityscopeItem.DeviceGroup.Split(',');

                                            foreach (string adeviceGroup in adeviceGroups)
                                            {
                                                if (asugdeviceType.Contains(adeviceGroup)) // Set Security Scope for this SUG
                                                {
                                                    if (asugItem.SUGType == asecurityscopeItem.ScopeType.ToString()) // Get Security Scope ID
                                                    {
                                                        worker.ReportProgress(0, "Securing Security Scopes for Software Update Group " + asugItem.sugName);

                                                        try
                                                        {
                                                            IResultObject thesecurityScopes = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_SecuredCategory where CategoryName = '" + asecurityscopeItem.Scope + "'");

                                                            string asecurityScopeID = "";
                                                            string asecurityScopeName = "";

                                                            foreach (IResultObject asecurityScope in thesecurityScopes)
                                                            {
                                                                asecurityScopeID = asecurityScope["CategoryID"].StringValue;
                                                                asecurityScopeName = asecurityScope["CategoryName"].StringValue;
                                                            }

                                                            IResultObject aAssignment = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_SecuredCategoryMembership");

                                                            aAssignment.Properties["CategoryID"].StringValue = asecurityScopeID;
                                                            aAssignment.Properties["ObjectKey"].StringValue = aupdategroupCI_UniqueID;
                                                            aAssignment.Properties["ObjectTypeID"].IntegerValue = 34;

                                                            try
                                                            {
                                                                aAssignment.Put();

                                                                worker.ReportProgress(0, "  Secured");
                                                            }
                                                            catch (Exception ee)
                                                            {
                                                                worker.ReportProgress(0, "  Failure to create Security Scope " + asecurityScopeName + " - " + ee.Message);
                                                            }
                                                        }
                                                        catch (Exception ee)
                                                        {
                                                            worker.ReportProgress(0, "  General Failure handling Security Scopes - " + ee.Message);
                                                        }
                                                    }
                                                }
                                            }
                                        }

                                        // At this point we check if the SUG Item is Reporting or Deployment

                                        if (asugItem.SUGType == "Deployment") // Only get underway with this SUG Item if it is a Deployment SUG
                                        {
                                            // Authorising the licence for any in-scope Software Updates that require it

                                            worker.ReportProgress(0, "Authorising Software Update licenses");

                                            foreach (int apatchCI_ID in sugPatches)
                                            {
                                                //break;

                                                try
                                                {
                                                    IResultObject existingsoftwareUpdate = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_SoftwareUpdate.CI_ID=" + apatchCI_ID.ToString() + "");

                                                    bool handleLicense = existingsoftwareUpdate["EULAExists"].BooleanValue;

                                                    if (handleLicense)
                                                    {
                                                        Dictionary<string, object> addEULAParameters = new Dictionary<string, object>();

                                                        addEULAParameters.Add("Accepted", true);

                                                        try
                                                        {
                                                            existingsoftwareUpdate.ExecuteMethod("AcceptEULA", addEULAParameters); // May have to return to this to set the licence different way

                                                            // existingsoftwareUpdate["EULAAccepted"].IntegerValue = 1;

                                                            // existingsoftwareUpdate.Put();

                                                            worker.ReportProgress(0, "  License accepted for patch KB" + existingsoftwareUpdate["ArticleID"].StringValue + " (CI_ID " + apatchCI_ID.ToString() + ")");
                                                        }
                                                        catch (Exception ee)
                                                        {
                                                            worker.ReportProgress(0, "  Warning: Could not accept the license for patch " + existingsoftwareUpdate["ArticleID"].StringValue + " (CI_ID " + apatchCI_ID.ToString() + ")");
                                                        }
                                                    }

                                                    existingsoftwareUpdate.Dispose();
                                                }
                                                catch (Exception ee)
                                                {
                                                    worker.ReportProgress(0, "  Warning: License acceptance issues");
                                                }
                                            }

                                            worker.ReportProgress(0, "Preparing files for download for " + asugItem.sugName);

                                            List<string> downloadfailureList = new List<string>(); // Used to store patch names for those that fail to download

                                            foreach (globalObjects.patchcontentIDs apatchcontentIDs in sugcontentidsCollection) // Obtain the SMS_CIContentFiles class instances
                                            {
                                                IResultObject contentfileList = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_CIContentFiles where ContentID = '" + apatchcontentIDs.ContentID + "' AND SMS_CIContentFiles.LanguageID IN (" + convertLanguagesToIDs(asugItem.Languages) + ")");

                                                foreach (IResultObject acontentFile in contentfileList)
                                                {
                                                    int contentID = acontentFile["ContentID"].IntegerValue;
                                                    string patchfolderName = apatchcontentIDs.ContentUniqueID;
                                                    string patchURL = acontentFile["SourceURL"].StringValue;
                                                    string patchFilename = acontentFile["FileName"].StringValue;
                                                    string patchHash = acontentFile["FileHash"].StringValue;

                                                    // Language validation for files with known language codes in their filename

                                                    if (!approvedlanguagePresent(patchFilename))
                                                    {
                                                        break;
                                                    }

                                                    try // Prepare the download folder
                                                    {
                                                        // Check if the filename contains a Path

                                                        if (patchFilename.Contains(@"\")) // Append the extended path info onto pathfolderName
                                                        {
                                                            int lastSlash = patchFilename.LastIndexOf(@"\");

                                                            string[] folderpathInfo = new string[] { patchFilename.Substring(0, lastSlash), patchFilename.Substring(lastSlash + 1) };

                                                            patchfolderName = String.Concat(patchfolderName, @"\", folderpathInfo[0]);

                                                            patchFilename = folderpathInfo[1];
                                                        }

                                                        worker.ReportProgress(0, "Creating Download Folder " + globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + " for ContentID " + apatchcontentIDs.ContentID);

                                                        System.IO.Directory.CreateDirectory(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName);

                                                        // Add to the contentID and contentPath arrays

                                                        thecontentIDs.Add(Convert.ToInt32(contentID));

                                                        thecontentPaths.Add(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName);

                                                        // Download the file or reuse if already downloaded

                                                        int retryCount = 6;

                                                        for (int i = 0; i < Convert.ToInt16(globalObjects.GlobalClass.DownloadFailureRetry); i++) // Retry the download if the hash cannot be validated
                                                        {
                                                            bool reuseFile = false;

                                                            worker.ReportProgress(0, "Downloading file " + patchFilename);

                                                            if (File.Exists(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + @"\" + patchFilename)) // Check if it exists, hash check it, use it if valid
                                                            {
                                                                worker.ReportProgress(0, "  File already exists, verifying hash");

                                                                if (patchHash == null)
                                                                {
                                                                    worker.ReportProgress(0, "    WARNING: Hash not supplied by Microsoft, unable to verifying hash, proceeding to use downloaded file");

                                                                    reuseFile = true;
                                                                }
                                                                else
                                                                {
                                                                    if (hashcheckFile(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + @"\" + patchFilename, patchHash))
                                                                    {
                                                                        worker.ReportProgress(0, "  Hash verified, using already downloaded content");

                                                                        reuseFile = true;
                                                                    }
                                                                    else
                                                                    {
                                                                        worker.ReportProgress(0, "  Hash failure, removing already downloaded content");

                                                                        try // Remove the old file
                                                                        {
                                                                            File.Delete(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + @"\" + patchFilename);
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }
                                                                    }
                                                                }
                                                            }

                                                            if (reuseFile)
                                                            {
                                                                worker.ReportProgress(0, "File downloaded");

                                                                downloadfailureList.Remove(patchfolderName + @"\" + patchFilename); // Remove the patch from the download failure list, if it is present

                                                                break;
                                                            }
                                                            else
                                                            {
                                                                try
                                                                {
                                                                    HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(patchURL);

                                                                    HttpWebRequest httpfilesizeRequest = (HttpWebRequest)WebRequest.Create(patchURL);

                                                                    httpRequest.Method = WebRequestMethods.Http.Get;

                                                                    httpRequest.AllowAutoRedirect = true;

                                                                    httpRequest.MaximumAutomaticRedirections = 2;

                                                                    httpRequest.Timeout = 2000000;

                                                                    HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();

                                                                    Stream httpResponseStream = httpResponse.GetResponseStream();

                                                                    int bufferSize = 1024;

                                                                    Int32 totalBytes = 0;

                                                                    byte[] buffer = new byte[bufferSize];

                                                                    int bytesRead = 0;

                                                                    worker.ReportProgress(0, "  Beginning file download");

                                                                    FileStream fileStream = File.Create(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + @"\" + patchFilename); // fileName is the full path                            

                                                                    try
                                                                    {
                                                                        while ((bytesRead = httpResponseStream.Read(buffer, 0, bufferSize)) != 0)
                                                                        {
                                                                            try
                                                                            {
                                                                                fileStream.Write(buffer, 0, bytesRead);

                                                                                totalBytes = totalBytes + bufferSize;
                                                                            }
                                                                            catch (Exception ee)
                                                                            {
                                                                                fileStream.Close();
                                                                            }
                                                                        }

                                                                        worker.ReportProgress(0, "File downloaded");

                                                                        fileStream.Close();

                                                                        httpResponseStream.Close();

                                                                        httpResponse.Close();

                                                                        worker.ReportProgress(0, "Hash checking the Patch file");

                                                                        if (patchHash == null)
                                                                        {
                                                                            worker.ReportProgress(0, "    WARNING: Hash not supplied by Microsoft, unable to verifying hash, proceeding to use downloaded file");

                                                                            downloadfailureList.Remove(patchfolderName + @"\" + patchFilename); // Remove the patch from the download failure list, if it is present

                                                                            break;
                                                                        }
                                                                        else
                                                                        {
                                                                            if (hashcheckFile(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName + @"\" + patchfolderName + @"\" + patchFilename, patchHash)) // The Patches hash matches                                                            
                                                                            {
                                                                                worker.ReportProgress(0, " Hash verification successful for file " + patchFilename);

                                                                                downloadfailureList.Remove(patchfolderName + @"\" + patchFilename); // Remove the patch from the download failure list, if it is present

                                                                                break;
                                                                            }
                                                                            else
                                                                            {
                                                                                worker.ReportProgress(0, " Hash verification failure for file " + patchFilename + ", retrying");

                                                                                if (!downloadfailureList.Contains(patchfolderName + @"\" + patchFilename))
                                                                                {
                                                                                    downloadfailureList.Add(patchfolderName + @"\" + patchFilename);
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                    catch (Exception ee)
                                                                    {
                                                                        worker.ReportProgress(0, " Error when handling file download " + patchFilename + " - " + ee.Message);

                                                                        fileStream.Close();

                                                                        if (!downloadfailureList.Contains(patchfolderName + @"\" + patchFilename))
                                                                        {
                                                                            downloadfailureList.Add(patchfolderName + @"\" + patchFilename);
                                                                        }

                                                                        // Wait 1 minute then proceed

                                                                        if (i < retryCount)
                                                                        {
                                                                            worker.ReportProgress(0, "  Waiting one minute for things to settle down and then retrying " + patchFilename);

                                                                            System.Threading.Thread.Sleep(15000);
                                                                        }
                                                                    }
                                                                }
                                                                catch (Exception ee)
                                                                {
                                                                    worker.ReportProgress(0, " Error when handling file download " + patchFilename + " - " + ee.Message);

                                                                    if (!downloadfailureList.Contains(patchfolderName + @"\" + patchFilename))
                                                                    {
                                                                        downloadfailureList.Add(patchfolderName + @"\" + patchFilename);
                                                                    }

                                                                    // Wait 1 minute then proceed

                                                                    if (i < retryCount)
                                                                    {
                                                                        worker.ReportProgress(0, "  Waiting one minute for things to settle down and then retrying " + patchFilename);

                                                                        System.Threading.Thread.Sleep(15000);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                    catch (Exception ee)
                                                    {
                                                        worker.ReportProgress(0, "Fatal error handling file downloads - " + ee.Message);

                                                        break;
                                                    }
                                                }

                                                if (downloadfailureList.Count > 0) break; // Let's back out of here since we have a download failure
                                            }

                                            if (downloadfailureList.Count == 0) // Continue if nothing on the failure list
                                            {
                                                worker.ReportProgress(0, "Creating Software Update Package " + asugItem.sugName);

                                                // Create the SUP

                                                IResultObject newSUMDeploymentPackage = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_SoftwareUpdatesPackage");

                                                newSUMDeploymentPackage["Name"].StringValue = asugItem.sugName;
                                                newSUMDeploymentPackage["Description"].StringValue = "";
                                                newSUMDeploymentPackage["PkgSourceFlag"].IntegerValue = 2;
                                                newSUMDeploymentPackage["PkgSourcePath"].StringValue = globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName;

                                                newSUMDeploymentPackage.Put();

                                                worker.ReportProgress(0, "Software Update Package " + asugItem.sugName + " Created");

                                                // Get the Package now that we've created it

                                                newSUMDeploymentPackage.Get();

                                                string apackageID = newSUMDeploymentPackage["PackageID"].StringValue;

                                                IResultObject existingSUMDeploymentPackage = globalObjects.GlobalClass.ConnectionManager.GetInstance(@"SMS_SoftwareUpdatesPackage.PackageID='" + apackageID + "'");

                                                // Populate SUP with SUG patches

                                                worker.ReportProgress(0, "Adding Patches to Software Update Package " + asugItem.sugName);

                                                string[] newArrayContentSourcePath = new string[] { globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName };

                                                newArrayContentSourcePath = Enumerable.Repeat(globalObjects.GlobalClass.uncPath + @"\" + asugItem.sugName, asugItem.TotalPatches).ToArray();

                                                Dictionary<string, object> addUpdateContentParameters = new Dictionary<string, object>();

                                                addUpdateContentParameters.Add("ContentIds", thecontentIDs.ToArray());
                                                addUpdateContentParameters.Add("ContentSourcePath", thecontentPaths.ToArray());
                                                addUpdateContentParameters.Add("bRefreshDPs", false);

                                                bool patcheswhereAdded = false;

                                                try
                                                {
                                                    existingSUMDeploymentPackage.ExecuteMethod("AddUpdateContent", addUpdateContentParameters);

                                                    globalObjects.supdpItem asupdpItem = new globalObjects.supdpItem();

                                                    asupdpItem.Name = asugItem.sugName;
                                                    asupdpItem.PackageID = apackageID;

                                                    asupdpitemCollection.Add(asupdpItem); // Put the SUP into its collection so we can process it later

                                                    worker.ReportProgress(0, " Patches added");

                                                    patcheswhereAdded = true;
                                                }
                                                catch (Exception ee)
                                                {
                                                    worker.ReportProgress(0, " Fatal error when adding Patches to Package - " + ee.Message);
                                                }

                                                // Handle DP Update                                                

                                                if (patcheswhereAdded)
                                                {
                                                    // *** we need to add to DP Groups and DPs

                                                    worker.ReportProgress(0, "Adding Software Update Package " + asugItem.sugName + " to Distribution Points");

                                                    foreach (globalObjects.distributionpointItem adistributionpointItem in globalObjects.GlobalClass.distributionpointRules)
                                                    {
                                                        if (adistributionpointItem.Type == "DP")
                                                        {
                                                            IResultObject distributionPoint = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_DistributionPoint");

                                                            distributionPoint["PackageID"].StringValue = apackageID;

                                                            distributionPoint["ServerNALPath"].StringValue = adistributionpointItem.NALPath;

                                                            distributionPoint["SiteCode"].StringValue = adistributionpointItem.Sitecode;

                                                            try
                                                            {
                                                                distributionPoint.Put();

                                                                worker.ReportProgress(0, " Added " + asugItem.sugName + " to Distribution Point " + adistributionpointItem.NALPath);

                                                            }
                                                            catch (Exception ee)
                                                            {
                                                                worker.ReportProgress(0, " Failed to add " + asugItem.sugName + " to Distribution Point " + adistributionpointItem.NALPath);
                                                            }
                                                        }
                                                        else // DP Group
                                                        {

                                                        }
                                                    }
                                                }

                                                worker.ReportProgress(0, " Initiating Distribution Point Update for " + asugItem.sugName);

                                                try
                                                {                                                    
                                                    existingSUMDeploymentPackage.ExecuteMethod("RefreshPkgSource", null);

                                                    existingSUMDeploymentPackage.Dispose();

                                                    worker.ReportProgress(0, "   Successfully initiated Distribution Point Update");
                                                }
                                                catch (Exception ee)
                                                {
                                                    worker.ReportProgress(0, " Failed to initiate an update for " + asugItem.sugName + " to Distribution Point: " + ee.Message);
                                                }

                                                // Create Deployments for this SUG

                                                if (!summaryList.Contains(asugItem.sugName))
                                                {
                                                    worker.ReportProgress(0, "Creating Deployments for Software Update Group " + asugItem.sugName);

                                                    foreach (globalObjects.deploymentItem adeploymentItem in globalObjects.GlobalClass.deploymentRules) // We'll loop through the deployment list and see if our SUG's device type matches with a rule
                                                    {
                                                        try
                                                        {                                                            
                                                            IResultObject existingCollection = globalObjects.GlobalClass.ConnectionManager.QueryProcessor.ExecuteQuery("Select * from SMS_collection where Name = '" + adeploymentItem.TargetCollection + "'");

                                                            string acollectionID = "";

                                                            foreach (IResultObject aexistingCollection in existingCollection)
                                                            {
                                                                acollectionID = aexistingCollection["CollectionID"].StringValue;
                                                            }

                                                            string[] adeviceTypes = adeploymentItem.DeviceType.Split(',');

                                                            foreach (string adeviceType in adeviceTypes)
                                                            {
                                                                worker.ReportProgress(0, "Looking for deployments for device group " + adeviceType);

                                                                string[] tmpdeviceType = asugItem.DeviceType.Split(',');

                                                                //if (asugItem.DeviceType.Contains(adeviceType)) // Create a deployment!

                                                                if (tmpdeviceType.Contains(adeviceType)) // Create a deployment!
                                                                {
                                                                    try
                                                                    {
                                                                        worker.ReportProgress(0, "   found an entry, creating deployment");

                                                                        IResultObject newSUMUpdatesAssignment = globalObjects.GlobalClass.ConnectionManager.CreateInstance("SMS_UpdateGroupAssignment");

                                                                        DateTime currentDateTime = DateTime.Now;

                                                                        DateTime tmpavailDateTime = currentDateTime.AddDays(Convert.ToInt16(adeploymentItem.AvailDaysOffset));

                                                                        DateTime tmpdeadlineDateTime = currentDateTime.AddDays(Convert.ToInt16(adeploymentItem.DeadlineDaysOffset));

                                                                        // Processing both time references to make sure they are valid, replace with default if not valid

                                                                        string tmpavailTime = adeploymentItem.AvailTimeOffset;

                                                                        TimeSpan newTS = new TimeSpan();

                                                                        if (adeploymentItem.AvailTimeOffset != "") // Avoid if no Time specified
                                                                        {
                                                                            string[] expandedavailTime = tmpavailTime.Split(':');

                                                                            if (expandedavailTime.Count() < 4) // Avoid if more than 3 elements in the array
                                                                            {
                                                                                if (expandedavailTime.Count() == 1)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandedavailTime[0]), 0, 0);

                                                                                    newTS = tmpnewTS;
                                                                                }

                                                                                if (expandedavailTime.Count() == 2)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandedavailTime[0]), Convert.ToInt16(expandedavailTime[0]), 0);

                                                                                    newTS = tmpnewTS;
                                                                                }

                                                                                if (expandedavailTime.Count() == 3)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandedavailTime[0]), Convert.ToInt16(expandedavailTime[1]), Convert.ToInt16(expandedavailTime[2]));

                                                                                    newTS = tmpnewTS;
                                                                                }
                                                                            }
                                                                            else // Fall-back to current time
                                                                            {
                                                                                TimeSpan tmpnewTS = new TimeSpan(currentDateTime.Hour, currentDateTime.Minute, currentDateTime.Second);
                                                                                newTS = tmpnewTS;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            TimeSpan tmpnewTS = new TimeSpan(currentDateTime.Hour, currentDateTime.Minute, currentDateTime.Second);
                                                                            newTS = tmpnewTS;
                                                                        }

                                                                        tmpavailDateTime = tmpavailDateTime.Date + newTS;

                                                                        string tmpdeadlineTime = adeploymentItem.DeadlineTimeOffset;

                                                                        if (adeploymentItem.DeadlineTimeOffset != "") // Avoid if no Time specified
                                                                        {
                                                                            string[] expandeddeadlineTime = tmpdeadlineTime.Split(':');

                                                                            if (expandeddeadlineTime.Count() < 4) // Avoid if more than 3 elements in the array
                                                                            {
                                                                                if (expandeddeadlineTime.Count() == 1)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandeddeadlineTime[0]), 0, 0);

                                                                                    newTS = tmpnewTS;
                                                                                }

                                                                                if (expandeddeadlineTime.Count() == 2)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandeddeadlineTime[0]), Convert.ToInt16(expandeddeadlineTime[0]), 0);

                                                                                    newTS = tmpnewTS;
                                                                                }

                                                                                if (expandeddeadlineTime.Count() == 3)
                                                                                {
                                                                                    TimeSpan tmpnewTS = new TimeSpan(Convert.ToInt16(expandeddeadlineTime[0]), Convert.ToInt16(expandeddeadlineTime[1]), Convert.ToInt16(expandeddeadlineTime[2]));

                                                                                    newTS = tmpnewTS;
                                                                                }
                                                                            }
                                                                            else // Fall-back to current time
                                                                            {
                                                                                TimeSpan tmpnewTS = new TimeSpan(currentDateTime.Hour, currentDateTime.Minute, currentDateTime.Second);
                                                                                newTS = tmpnewTS;
                                                                            }
                                                                        }
                                                                        else
                                                                        {
                                                                            TimeSpan tmpnewTS = new TimeSpan(currentDateTime.Hour, currentDateTime.Minute, currentDateTime.Second);
                                                                            newTS = tmpnewTS;
                                                                        }

                                                                        tmpdeadlineDateTime = tmpdeadlineDateTime.Date + newTS;

                                                                        DateTime newDateTime = new DateTime(tmpdeadlineDateTime.Year, tmpdeadlineDateTime.Month, tmpdeadlineDateTime.Day);

                                                                        string aavaildmtfdateTime = ManagementDateTimeConverter.ToDmtfDateTime(tmpavailDateTime);

                                                                        string adeadlinedmtfdateTime = ManagementDateTimeConverter.ToDmtfDateTime(tmpdeadlineDateTime);

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["ApplyToSubTargets"].BooleanValue = false;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["AssignedCIs"].IntegerArrayValue = sugPatches.ToArray();
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try

                                                                        {
                                                                            newSUMUpdatesAssignment["AssignedUpdateGroup"].IntegerValue = aupdateGroupCIID;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["AssignmentAction"].IntegerValue = 2; // Apply                                                    
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["AssignmentDescription"].StringValue = asugItem.sugName;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["AssignmentName"].StringValue = asugItem.sugName;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["AssignmentType"].IntegerValue = 5; // CIA_TYPE_UPDATE_GROUP
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["DesiredConfigType"].IntegerValue = 1; //1 - Install, 2 - Remove
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["StartTime"].StringValue = aavaildmtfdateTime;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment["TargetCollectionID"].StringValue = acollectionID;
                                                                        }
                                                                        catch (Exception ee)
                                                                        {

                                                                        }

                                                                        if (adeploymentItem.Intent.ToLower() != "available") // Check if Required or Available deployment
                                                                        {
                                                                            newSUMUpdatesAssignment["EnforcementDeadline"].StringValue = adeadlinedmtfdateTime;
                                                                        }

                                                                        foreach (globalObjects.deploymentProperty adeploymentProperty in globalObjects.GlobalClass.globaldeploymentpropertiesCollection)
                                                                        {
                                                                            if (adeviceType == adeploymentProperty.DeviceGroup)
                                                                            //if (asugItem.DeviceType == adeploymentProperty.DeviceGroup)
                                                                            {
                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["DisableMomAlerts"].BooleanValue = adeploymentProperty.DisableMomAlerts;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["RebootOutsideOfServiceWindows"].BooleanValue = adeploymentProperty.RebootOutsideOfServiceWindows;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["DPLocality"].IntegerValue = adeploymentProperty.DPLocality;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["LimitStateMessageVerbosity"].BooleanValue = adeploymentProperty.LimitStateMessageVerbosity;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["LocaleID"].IntegerValue = System.Threading.Thread.CurrentThread.CurrentUICulture.LCID;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["LogComplianceToWinEvent"].BooleanValue = adeploymentProperty.LogComplianceToWinEvent;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["NotifyUser"].BooleanValue = adeploymentProperty.NotifyUser;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["OverrideServiceWindows"].BooleanValue = adeploymentProperty.OverrideServiceWindows;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["PersistOnWriteFilterDevices"].BooleanValue = adeploymentProperty.PersistOnWriteFilterDevices;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["RaiseMomAlertsOnFailure"].BooleanValue = adeploymentProperty.RaiseMomAlertsOnFailure;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {

                                                                                    newSUMUpdatesAssignment["RequirePostRebootFullScan"].BooleanValue = adeploymentProperty.RequirePostRebootFullScan;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["SendDetailedNonComplianceStatus"].BooleanValue = adeploymentProperty.SendDetailedNonComplianceStatus;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }
                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["SoftDeadlineEnabled"].BooleanValue = adeploymentProperty.SoftDeadlineEnabled;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    int tempValue = 5;

                                                                                    switch (adeploymentProperty.StateMessagePriority)
                                                                                    {
                                                                                        case "Low":

                                                                                            tempValue = 10;

                                                                                            break;

                                                                                        case "Normal":

                                                                                            tempValue = 5;

                                                                                            break;
                                                                                        case "High":

                                                                                            tempValue = 1;

                                                                                            break;

                                                                                        case "Urgent":

                                                                                            tempValue = 0;

                                                                                            break;
                                                                                    }

                                                                                    newSUMUpdatesAssignment["StateMessagePriority"].IntegerValue = tempValue;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {
                                                                                }

                                                                                try
                                                                                {
                                                                                    int tempValue = 10;

                                                                                    switch (adeploymentProperty.StateMessageVerbosity)
                                                                                    {
                                                                                        case "None":

                                                                                            tempValue = 0;

                                                                                            break;

                                                                                        case "Errors":

                                                                                            tempValue = 1;

                                                                                            break;
                                                                                        case "Successes and Errors":

                                                                                            tempValue = 5;

                                                                                            break;

                                                                                        case "All":

                                                                                            tempValue = 10;

                                                                                            break;
                                                                                    }

                                                                                    newSUMUpdatesAssignment["StateMessageVerbosity"].IntegerValue = tempValue;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {
                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["SuppressReboot"].IntegerValue = adeploymentProperty.SuppressReboot;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["UseBranchCache"].BooleanValue = adeploymentProperty.UseBranchCache;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["UseGMTTimes"].BooleanValue = adeploymentProperty.UseGMTTimes; // GMT but in the AdminUI is shows as UTC ...
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["UserUIExperience"].BooleanValue = adeploymentProperty.UserUIExperience;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["WoLEnabled"].BooleanValue = adeploymentProperty.WoLEnabled;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }

                                                                                try
                                                                                {
                                                                                    newSUMUpdatesAssignment["RandomizationEnabled"].BooleanValue = adeploymentProperty.RandomizationEnabled;
                                                                                }
                                                                                catch (Exception ee)
                                                                                {

                                                                                }
                                                                            }
                                                                        }

                                                                        try
                                                                        {
                                                                            newSUMUpdatesAssignment.Put();

                                                                            worker.ReportProgress(0, "Created Deployment " + adeploymentItem.TargetCollection + " for " + asugItem.sugName);
                                                                        }
                                                                        catch (Exception ee)
                                                                        {
                                                                            worker.ReportProgress(0, "Failed to create Deployment " + adeploymentItem.TargetCollection + " for " + asugItem.sugName);

                                                                            summaryList.Add(asugItem.sugName);
                                                                        }
                                                                    }
                                                                    catch (SmsException ee)
                                                                    {
                                                                        worker.ReportProgress(0, "Fatal error handling Deployments - " + ee.Message);

                                                                        summaryList.Add(asugItem.sugName);
                                                                    }
                                                                }
                                                            }
                                                        }
                                                        catch (Exception ee)
                                                        {
                                                            summaryList.Add(asugItem.sugName);
                                                        }
                                                    }
                                                }
                                            }
                                            else
                                            {
                                                summaryList.Add(asugItem.sugName);
                                            }

                                            sugPatches.Clear();

                                            thecontentIDs.Clear();

                                            thecontentPaths.Clear();
                                        }
                                    }
                                    catch (Exception ee)
                                    {
                                        worker.ReportProgress(0, "Oops " + ee.Message);

                                        summaryList.Add(asugItem.sugName);
                                    }
                                }
                                catch (SmsException ex)
                                {
                                }
                            }
                        }                        
                    }
                }

                worker.ReportProgress(0, "Processing completed.");

                if (summaryList.Count > 0)
                {
                    worker.ReportProgress(0, "Failure Summary:");

                    foreach (string aMessage in summaryList)
                    {
                        worker.ReportProgress(0, "Failure to manage " + aMessage);

                        removeSUG(worker, aMessage, new List<string>());

                        removeSUP(worker, aMessage);
                    }
                }

                summaryList.Clear();

                worker.ReportProgress(0, "*******************************************************");

                globalObjects.GlobalClass.patchcacheStopwatch.Stop(); // Force a rescan for ConfigMgr patch data by stopping the stopwatch

                //if (!globalObjects.GlobalClass.SilentRunning)
                //{
                //    globalObjects.GlobalClass.forceScan = true;

                //    getconfigmgrPatches(worker); // Refresh the stale WSUS Patch list since patches have been deployed
                //}
            }
            else
            {
                worker.ReportProgress(0, "No patches found");
            }
        }

        private bool approvedlanguagePresent(string fileName)
        {
            // Find the list of approved languages for the rule, I need to map languageID to language country code tk-tk de-de en-us en-uk etc, then see if any of the approved ones are in the filename, none present then return false;

            return true;
        }

        private void bw_build_ProgressChanged(object sender, ProgressChangedEventArgs e)
        {
            string theMessage = e.UserState.ToString();

            sharedlogMessage(theMessage, false);
        }

        private void bw_build_RunWorkerCompleted(object sender, RunWorkerCompletedEventArgs e)
        {
            if ((e.Cancelled == true))
            {
            }

            if (e.Error != null)
            {
                
            }

            globalObjects.GlobalClass.buildthreadRunning = false; // Declare the thread finished

            if (globalObjects.GlobalClass.candidatePatches.Count > 0)
            {
                globalObjects.GlobalClass.buildeventNoted = true;
            }

            if (!globalObjects.GlobalClass.SilentRunning)
            {
                dgv_availablePatches.Rows.Clear();

                dgv_Preview.Rows.Clear();                

                docheckforPatches(); // Update Available Patches // Moved from runworkerc
            }

            // Fire the SUM Cleanup thread if its set to run post build

            if (globalObjects.GlobalClass.patchrunsumcleanuppostBuild && globalObjects.GlobalClass.buildeventNoted) // Start the SUM Cleanup Detection thread (finds superseded patches)
            {
                pb_waitImage.Visible = false; // Cancel out the wait image if it is shown

                sharedlogMessage("Initiating detection of superceded patches in Software Update Groups", false);

                if (!globalObjects.GlobalClass.SilentRunning)
                {
                    tc_Main.SelectedTab = tb_SUMaint; // Switch to SUM Maintenance tab

                    disableInterface();

                    dgv_supersededPatches.Rows.Clear();
                }                

                BackgroundWorker bwsumcleanupDetect = new BackgroundWorker();
                bwsumcleanupDetect.WorkerSupportsCancellation = true;
                bwsumcleanupDetect.WorkerReportsProgress = true;
                bwsumcleanupDetect.DoWork +=
                    new DoWorkEventHandler(bw_sumcleanupDetect_DoWork);
                bwsumcleanupDetect.ProgressChanged +=
                    new ProgressChangedEventHandler(bw_sumcleanupDetect_ProgressChanged);
                bwsumcleanupDetect.RunWorkerCompleted +=
                    new RunWorkerCompletedEventHandler(bw_sumcleanupDetect_RunWorkerCompleted);

                if (bwsumcleanupDetect.IsBusy != true)
                {
                    bwsumcleanupDetect.RunWorkerAsync(true); // Ask the thread to launch the SUM Cleanup thread after detection has completed

                    if (!globalObjects.GlobalClass.SilentRunning)
                    {
                        b_locatesupersedPatches.Enabled = false;

                        b_removesupersededPatches.Enabled = false;
                    }

                    globalObjects.GlobalClass.sumcleanupdetectthreadRunning = true;
                }
            }
            else
            {
                //if (!globalObjects.GlobalClass.SilentRunning)
                //{
                //    tc_Main.SelectedTab = tb_AvailablePatches;

                //    enableInterface();
                //}
            }

            if (!globalObjects.GlobalClass.sumcleanupdetectthreadRunning && globalObjects.GlobalClass.SilentRunning)
            {
                Application.Exit();
            }
        }


        // Threaded Code
        private void disableInterface()
        {
            if (!globalObjects.GlobalClass.SilentRunning)
            {
                cb_forceScan.Enabled = false;
                cb_runsumCleanup.Enabled = false;

                cb_rollupclientOS.Enabled = false;
                cb_rollupOffice.Enabled = false;
                cb_rollupserverOS.Enabled = false;

                cb_forceScan.Enabled = false;
                tb_addTextbox.Enabled = false;
                b_addDay.Enabled = false;
                b_addMonth.Enabled = false;
                b_addYear.Enabled = false;
                b_addClassification.Enabled = false;
                b_addArchitecture.Enabled = false;
                cb_patchnamingDelimiter.Enabled = false;
                b_addDP.Enabled = false;
                cb_unlocknamingBar.Enabled = false;
                b_addReporting.Enabled = false;
                flp_namingSelections.Enabled = false;
                b_buildPreview.Enabled = false;
                b_checkforPatches.Enabled = false;
                b_checkforPatches.Enabled = false;
                b_createObjects.Enabled = false;
                b_devicetypeAdd.Enabled = false;
                b_devicetypeRemove.Enabled = false;
                b_removeDeployment.Enabled = false;
                b_removeDP.Enabled = false;
                b_removesecurityScope.Enabled = false;
                b_removeselectedRule.Enabled = false;
                cb_createreportingSUGS.Enabled = false;
                cb_deployment_allowMetered.Enabled = false;
                cb_deployment_commitFilter.Enabled = false;
                cb_deployment_deadlinerestart.Enabled = false;
                cb_deployment_defaultFallback.Enabled = false;
                cb_deployment_delayEnforcement.Enabled = false;
                cb_deployment_downloadNeighbour.Enabled = false;
                cb_deployment_enableWOL.Enabled = false;
                cb_deployment_Evaluation.Enabled = false;
                cb_deployment_supressServers.Enabled = false;
                cb_deployment_supressWorkstations.Enabled = false;
                cb_deployment_useBranchcache.Enabled = false;
                cb_deployment_usemsUpdates.Enabled = false;
                cb_dpList.Enabled = false;
                cb_timeMachine.Enabled = false;
                cb_timemachine_Day.Enabled = false;
                cb_timemachine_Month.Enabled = false;
                cb_timemachine_Year.Enabled = false;
                //dgv_availablePatches.Enabled = false;
                dgv_Deployments.Enabled = false;
                dgv_ignorePatches.Enabled = false;
                dgv_SecurityScopes.Enabled = false;
                dgv_Transcript.Enabled = false;
                l_totalRows.Enabled = false;
                //pb_waitImage.Visible = false;
                tb_deviceType.Enabled = false;
                tb_ooc_Tag.Enabled = false;
                tb_packageFolder.Enabled = false;
                tb_packagesourcePath.Enabled = false;
                b_addProduct.Enabled = false;

                b_createPath.Enabled = false;
                cb_deploymentdeviceGroup.Enabled = false;
                cb_deployment_disablemomAlerts.Enabled = false;
                cb_deployment_limitstatemsgverbosity.Enabled = false;
                cb_deployment_logtowinEvent.Enabled = false;
                cb_deployment_notifyUser.Enabled = false;
                cb_deployment_raisemomalertsonFailure.Enabled = false;
                cb_deployment_senddetailednonCompliance.Enabled = false;
                cb_deployment_statemessagePriority.Enabled = false;
                cb_deployment_statemessageVerbosity.Enabled = false;
                cb_deployment_useutcTimes.Enabled = false;
                cb_deployment_useruiExperience.Enabled = false;
                cb_deployment_RandomizationEnabled.Enabled = false;
                cb_deployment_allowMetered.Enabled = false;
                cb_deployment_overrideserviceWindows.Enabled = false;
                cb_runsumCleanup.Enabled = false;
                b_locatesupersedPatches.Enabled = false;
                b_removesupersededPatches.Enabled = false;
            }
        }

        private void enableInterface()
        {
            if (!globalObjects.GlobalClass.SilentRunning)
            {
                cb_forceScan.Enabled = true;
                cb_runsumCleanup.Enabled = true;

                cb_rollupclientOS.Enabled = true;
                cb_rollupOffice.Enabled = true;
                cb_rollupserverOS.Enabled = true;

                cb_forceScan.Enabled = true;
                b_addDP.Enabled = true;
                cb_unlocknamingBar.Enabled = true;
                b_addReporting.Enabled = true;

                if (cb_unlocknamingBar.Checked)
                {
                    tb_addTextbox.Enabled = true;
                    b_addDay.Enabled = true;
                    b_addMonth.Enabled = true;
                    b_addYear.Enabled = true;
                    b_addClassification.Enabled = true;
                    b_addArchitecture.Enabled = true;
                    cb_patchnamingDelimiter.Enabled = true;
                    flp_namingSelections.Visible = true;
                }

                b_buildPreview.Enabled = true;
                b_checkforPatches.Enabled = true;
                b_checkforPatches.Enabled = true;
                b_createObjects.Enabled = true;
                b_devicetypeAdd.Enabled = true;
                b_devicetypeRemove.Enabled = true;
                b_removeDeployment.Enabled = true;
                b_removeDP.Enabled = true;
                b_removesecurityScope.Enabled = true;
                b_removeselectedRule.Enabled = true;
                cb_createreportingSUGS.Enabled = true;
                //cb_deployment_allowMetered.Enabled = true;
                cb_deployment_commitFilter.Enabled = true;
                cb_deployment_deadlinerestart.Enabled = true;
                cb_deployment_defaultFallback.Enabled = true;
                cb_deployment_delayEnforcement.Enabled = true;
                cb_deployment_downloadNeighbour.Enabled = true;
                cb_deployment_enableWOL.Enabled = true;
                cb_deployment_Evaluation.Enabled = true;
                cb_deployment_supressServers.Enabled = true;
                cb_deployment_supressWorkstations.Enabled = true;
                cb_deployment_useBranchcache.Enabled = true;
                //cb_deployment_usemsUpdates.Enabled = true;
                cb_dpList.Enabled = true;
                cb_timeMachine.Enabled = true;
                cb_timemachine_Day.Enabled = true;
                cb_timemachine_Month.Enabled = true;
                cb_timemachine_Year.Enabled = true;
                //dgv_availablePatches.Enabled = true;
                dgv_Deployments.Enabled = true;
                dgv_ignorePatches.Enabled = true;
                dgv_SecurityScopes.Enabled = true;
                dgv_Transcript.Enabled = true;
                l_totalRows.Enabled = true;
                //pb_waitImage.Visible = false;
                tb_deviceType.Enabled = true;
                tb_ooc_Tag.Enabled = true;
                tb_packageFolder.Enabled = true;
                tb_packagesourcePath.Enabled = true;
                b_addProduct.Enabled = true;

                b_createPath.Enabled = true;
                cb_deploymentdeviceGroup.Enabled = true;
                cb_deployment_disablemomAlerts.Enabled = true;
                cb_deployment_limitstatemsgverbosity.Enabled = true;
                cb_deployment_logtowinEvent.Enabled = true;
                cb_deployment_notifyUser.Enabled = true;
                cb_deployment_raisemomalertsonFailure.Enabled = true;
                cb_deployment_senddetailednonCompliance.Enabled = true;
                cb_deployment_statemessagePriority.Enabled = true;
                cb_deployment_statemessageVerbosity.Enabled = true;
                cb_deployment_useutcTimes.Enabled = true;
                cb_deployment_useruiExperience.Enabled = true;
                cb_deployment_RandomizationEnabled.Enabled = true;
                cb_deployment_allowMetered.Enabled = true;
                cb_deployment_overrideserviceWindows.Enabled = true;
                cb_runsumCleanup.Enabled = true;
                b_locatesupersedPatches.Enabled = true;
                b_removesupersededPatches.Enabled = true;
                cb_deployment_usemsUpdates.Enabled = true;
            }
        }

        private bool verifylaunchReady()
        {
            sharedlogMessage("Performing launch verification ...", false);

            bool deploymentIssue = false;

            bool securityscopeIssue = false;

            bool configurationIssue = false;

            List<string> devicegroupsDiscovered = new List<string>();

            // Get all device groups, check that each device group has a) deployments and b) x2 security scopes 

            foreach (globalObjects.ruleItem aruleItem in globalObjects.GlobalClass.globalruleitemCollection)
            {
                // Check Deployments

                bool foundDeployment = false;

                List<string> devicegroupList = new List<string>(aruleItem.DeviceType.Split(','));

                sharedlogMessage("  Unpacking the following Device Group " + aruleItem.DeviceType, false);

                foreach (globalObjects.deploymentItem adeploymentItem in globalObjects.GlobalClass.deploymentRules)
                {
                    //if (adeploymentItem.DeviceType == aruleItem.DeviceType)

                    foreach (string devicegroupItem in devicegroupList)
                    {
                        if (devicegroupList.Contains(adeploymentItem.DeviceType))
                        {
                            foundDeployment = true;

                            sharedlogMessage("   Match found for " + adeploymentItem.DeviceType + ".", false);
                        }
                        else
                        {
                            foundDeployment = true;

                            break;
                        }
                    }
                }

                if (!foundDeployment)
                {
                    sharedlogMessage("  Could not find a Deployment for Device Group " + aruleItem.DeviceType + ", please correct and click Build again", false);

                    deploymentIssue = true;
                }

                // Check for Security Scopes (two, one for Deployments, one for Reporting)

                int foundSecurityScopes = 0;

                foreach (globalObjects.securityscopeItem asecurityscopeItem in globalObjects.GlobalClass.securityscopeRules)
                {
                    foreach (string devicegroupName in devicegroupList)
                    {
                        if (asecurityscopeItem.DeviceGroup == devicegroupName)
                        {
                            foundSecurityScopes++;
                        }
                    }
                }

                if (foundSecurityScopes < 2)
                {
                    sharedlogMessage("  Could not find at least two security scopes (Deployment, Patching) for Device Group " + aruleItem.DeviceType + ", please correct and click Build again", false);

                    securityscopeIssue = true;
                }
            }

            if (globalObjects.GlobalClass.oocTag == "")
            {
                sharedlogMessage("  OOC Tag is empty, correct it", false);

                configurationIssue = true;
            }

            if (globalObjects.GlobalClass.patchpathUNC == "")
            {
                sharedlogMessage("  Patch Path is empty, correct it", false);

                configurationIssue = true;
            }

            if (globalObjects.GlobalClass.patchfolderPath == "")
            {
                sharedlogMessage("  Patch Folder is empty,  it", false);

                configurationIssue = true;
            }
            
            if (globalObjects.GlobalClass.distributionpointRules.Count == 0)
            {
                sharedlogMessage("  Consider adding some distribution points", false);

                configurationIssue = true;
            }
                        
            if (!deploymentIssue && !securityscopeIssue && !configurationIssue)
            {
                sharedlogMessage("Launch verification successful", false);

                return true; // Successful
            }
            else
            {
                sharedlogMessage("Launch verification failure", false);

                return false; // Unsuccessful
            }
        }

        private void beginBuildout()
        {
            sharedlogMessage("Beginning build out", false);

            if (globalObjects.GlobalClass.candidatePatches.Count > 0 || globalObjects.GlobalClass.checkforpatchesthreadRunning == true)
            {
                // Retrieve rules, deployments, deployment properties and security scopes

                getrulesReg();

                getdeploymentsReg();

                getdeploymentpropertiesReg();

                getsecurityscopesReg();

                if (verifylaunchReady())
                {
                    if (globalObjects.GlobalClass.buildthreadRunning == false)
                    {
                        sharedlogMessage("*******************************************************", false);

                        doReport();

                        disableInterface(); // Disable the interface

                        if (!globalObjects.GlobalClass.SilentRunning)
                        {
                            tc_Main.SelectedTab = tb_Log; // Switch to the Logging Panel
                        }

                        // Now create the thread and launch it

                        BackgroundWorker bwBuild = new BackgroundWorker();
                        bwBuild.WorkerSupportsCancellation = true;
                        bwBuild.WorkerReportsProgress = true;
                        bwBuild.DoWork +=
                            new DoWorkEventHandler(bw_build_DoWork);
                        bwBuild.ProgressChanged +=
                            new ProgressChangedEventHandler(bw_build_ProgressChanged);
                        bwBuild.RunWorkerCompleted +=
                            new RunWorkerCompletedEventHandler(bw_build_RunWorkerCompleted);

                        if (bwBuild.IsBusy != true)
                        {
                            globalObjects.GlobalClass.buildeventNoted = false;

                            bwBuild.RunWorkerAsync();

                            globalObjects.GlobalClass.buildthreadRunning = true;
                        }
                    }
                    else
                    {
                        sharedlogMessage("Build in progress ... ignoring request to start build", false);
                    }
                }
            }
            else
            {
                sharedlogMessage("No patches to process, ignoring build request", false);

                if (globalObjects.GlobalClass.SilentRunning)
                {
                    Application.Exit();
                }
            }
        }

        private void b_createObjects_Click(object sender, EventArgs e)
        {
            beginBuildout();
        }

        private void b_addDP_Click(object sender, EventArgs e)
        {
            // Add the selected DP or DP Group to the DGV list

            // Check if this is a DP or a DP Group (try to find a DP Group using the name, if not found, is a DP ...)

            // if a DP group add differently, what about site code

            // Check if the row already exists

            bool foundexistingRow = false;

            if (cb_dpList.Text != "")
            {
                foreach (DataGridViewRow asearchRow in dgv_distributionPoints.Rows)
                {
                    if (asearchRow.Cells[0].Value.ToString().Contains(cb_dpList.Text))
                    {
                        foundexistingRow = true;
                    }
                }

                if (!foundexistingRow)
                {
                    string tmpSitecode = "";
                    string tmpnalPath = "";
                    string tmpType = "";

                    DataGridViewRow aRow = new DataGridViewRow();

                    if (!dgv_distributionPoints.Rows.Contains(aRow))
                    {
                        foreach (globalObjects.globaldistributionpointItem adistributionpointItem in globalObjects.GlobalClass.globaldistributionpointCollection)
                        {
                            if (cb_dpList.Text == adistributionpointItem.Name) // Handle the DP
                            {
                                tmpSitecode = adistributionpointItem.Sitecode;

                                tmpnalPath = adistributionpointItem.NALPath;

                                tmpType = adistributionpointItem.Type;

                                break;
                            }
                        }

                        dgv_distributionPoints.Rows.Add(cb_dpList.Text, tmpType, cb_dpList.Text, tmpSitecode, tmpnalPath);

                        storedpinRegistry();
                    }
                }

                getdpsReg();
            }
        }

        private void storerulesinRegistry()
        {
            try //  Retrieve valid rules and store them in the registry as a string array
            {
                List<string> theRules = new List<string>();

                foreach (DataGridViewRow aRow in dgv_Transcript.Rows)
                {
                    try
                    {
                        string tmpdeviceType = aRow.Cells["c_transcript_deviceType"].Value.ToString();
                        string tmpArchitecture = aRow.Cells["c_transcript_Architecture"].Value.ToString();
                        string tmpProducts = aRow.Cells["c_transcript_Product"].Value.ToString();
                        string tmpClassifications = aRow.Cells["c_transcript_Classifications"].Value.ToString();
                        string tmpLanguages = aRow.Cells["c_transcript_Languages"].Value.ToString();

                        if (dgv_Transcript.IsCurrentCellDirty)
                        {
                            dgv_Transcript.CommitEdit(DataGridViewDataErrorContexts.Commit);
                        }

                        string tmpignoreBuilds = "";

                        string tmpincludeRule = "";

                        try
                        {
                            tmpignoreBuilds = aRow.Cells["c_transcript_ignoreBuilds"].Value.ToString();
                        }
                        catch (Exception ee)
                        {
                            tmpignoreBuilds = "";
                        }

                        try
                        {
                            tmpincludeRule = aRow.Cells["c_transcript_includeRule"].Value.ToString();
                        }
                        catch (Exception ee)
                        {
                            tmpincludeRule = "";
                        }

                        if (tmpdeviceType != "" & tmpdeviceType != null && tmpArchitecture != "" && tmpArchitecture != null && tmpProducts != "" && tmpProducts != null && tmpClassifications != "" && tmpClassifications != null && tmpLanguages != "" && tmpLanguages != null) // Make sure required parameters are populated
                        {
                            theRules.Add(tmpdeviceType + "|" + tmpArchitecture + "|" + tmpProducts + "|" + tmpClassifications + "|" + tmpLanguages + "|" + tmpincludeRule + "|" + tmpignoreBuilds); // Commit the current row for storage
                        }
                    }
                    catch (Exception ee)
                    {

                    }
                }

                setRegistry("PatchRules", theRules.ToArray()); // Write back the registry

                globalObjects.GlobalClass.globalruleitemCollection = convertruleitemcollectionfromReg(theRules.ToArray());

            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Rules in the registry - " + ee.Message, false);
            }
        }

        private void dgv_Transcript_RowLeave(object sender, DataGridViewCellEventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                storerulesinRegistry();
            }
        }

        private void storedeploymentsinRegistry()
        {
            try //  Retrieve valid deployments and store them in the registry as a string array
            {
                List<string> theDeployments = new List<string>();

                if (dgv_Deployments.IsCurrentCellDirty)
                {
                    dgv_Deployments.CommitEdit(DataGridViewDataErrorContexts.Commit);
                }

                foreach (DataGridViewRow aRow in dgv_Deployments.Rows)
                {
                    try
                    {
                        string tmpdeviceType = "";

                        try
                        {
                            tmpdeviceType = aRow.Cells["c_deployments_DeviceType"].Value.ToString();
                        }
                        catch (Exception ee)
                        {

                        }

                        if (tmpdeviceType != "")
                        {
                            string tmpcolTarget = aRow.Cells["c_deployment_coltarget"].Value.ToString();
                            string tempdepTag = "";

                            try
                            {
                                tempdepTag = aRow.Cells["c_deployment_depTag"].Value.ToString();
                            }
                            catch (Exception ee)
                            {
                                tempdepTag = "Live";
                            }

                            string tmpavailReq = aRow.Cells["c_deployment_availreq"].Value.ToString();

                            string tmpavailDate = aRow.Cells["c_deployment_availdate"].Value.ToString();
                            string tmpavailTime = aRow.Cells["c_deployment_availTime"].Value.ToString();

                            string tmpdeadlineDate = aRow.Cells["c_deployment_deadlinedateOffset"].Value.ToString();
                            string tmpdeadlineTime = aRow.Cells["c_deployment_deadlineTime"].Value.ToString();

                            if (tmpdeviceType != "" & tmpdeviceType != null && tmpcolTarget != "" && tmpcolTarget != null && tempdepTag != "" && tempdepTag != null && tmpavailReq != "" && tmpavailReq != null && tmpavailDate != "" && tmpavailDate != null && tmpdeadlineDate != "" && tmpdeadlineDate != null && tmpavailTime != "" && tmpdeadlineTime != "")
                            {
                                theDeployments.Add(tmpdeviceType + "|" + tmpcolTarget + "|" + tempdepTag + "|" + tmpavailReq + "|" + tmpavailDate + "|" + tmpavailTime + "|" + tmpdeadlineDate + "|" + tmpdeadlineTime); // Commit the current row for storage
                            }
                        }
                    }
                    catch (Exception ee)
                    {
                        sharedlogMessage(@"One of the Deployment rules contains a null\empty column, correct it - " + aRow.Index.ToString(), false);
                    }
                }

                setRegistry("PatchDeployments", theDeployments.ToArray()); // Now write to the registry

                globalObjects.GlobalClass.deploymentRules = deploymentrulesconvertfromReg(theDeployments.ToArray()); // Keep the global list of deployments in sync
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not store the deployments in the registry - " + ee.Message, false);
            }
        }

        private void dgv_Deployments_RowLeave(object sender, DataGridViewCellEventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                storedeploymentsinRegistry();
            }
        }

        private void storedpinRegistry()
        {
            try //  Retrieve DP list and store in the registry as a string array
            {
                List<string> theDPS = new List<string>();

                if (dgv_distributionPoints.IsCurrentCellDirty)
                {
                    dgv_distributionPoints.CommitEdit(DataGridViewDataErrorContexts.Commit);
                }

                foreach (DataGridViewRow aRow in dgv_distributionPoints.Rows)
                {
                    try
                    {
                        string tmpName = aRow.Cells["c_dp_Name"].Value.ToString();
                        string tmpType = aRow.Cells["c_dp_Type"].Value.ToString();
                        string tmpID = aRow.Cells["c_dp_ID"].Value.ToString();
                        string tmpSitecode = aRow.Cells["c_dp_Sitecode"].Value.ToString();
                        string tmpnalPath = aRow.Cells["c_dp_nalPath"].Value.ToString();

                        if (tmpName != "" & tmpName != null && tmpType != "" && tmpType != null && tmpID != "" && tmpID != null && tmpSitecode != null && tmpnalPath != null)
                        {
                            theDPS.Add(tmpName + "|" + tmpType + "|" + tmpID + "|" + tmpSitecode + "|" + tmpnalPath); // Commit the current row for storage
                        }
                    }
                    catch (Exception ee)
                    {

                    }
                }

                setRegistry("PatchDistributionPoints", theDPS.ToArray()); // Write back to the registry
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not handle the DP processing - " + ee.Message, false);
            }
        }

        private void storesecurityscopesinRegistry()
        {
            try //  Retrieve valid security scopes and store them in the registry as a string array
            {
                List<string> thesecurityScopes = new List<string>();

                if (dgv_SecurityScopes.IsCurrentCellDirty)
                {
                    dgv_SecurityScopes.CommitEdit(DataGridViewDataErrorContexts.Commit);
                }

                foreach (DataGridViewRow aRow in dgv_SecurityScopes.Rows)
                {
                    try
                    {
                        string tmpdeviceType = aRow.Cells["c_scoping_deviceType"].Value.ToString();
                        string tmpType = aRow.Cells["c_scoping_Type"].Value.ToString();
                        string tmpScope = aRow.Cells["c_scoping_Scope"].Value.ToString();

                        if (tmpdeviceType != "" & tmpdeviceType != null && tmpType != "" && tmpType != null && tmpScope != "" && tmpScope != null)
                        {
                            thesecurityScopes.Add(tmpdeviceType + "|" + tmpType + "|" + tmpScope); // Commit the current row for storage
                        }
                    }
                    catch (Exception ee)
                    {

                    }
                }

                setRegistry("PatchSecurityScopes", thesecurityScopes.ToArray()); // Write back the registry

                globalObjects.GlobalClass.securityscopeRules = securityscopesconvertfromReg(thesecurityScopes.ToArray());
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Security Scopes in the registry - " + ee.Message, false);
            }
        }

        private void dgv_SecurityScopes_RowLeave(object sender, DataGridViewCellEventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                storesecurityscopesinRegistry();
            }
        }

        private void storeignorepatchesinRegistry()
        {
            try //  Retrieve ignore patch list and store it in the registry as a string array
            {
                List<string> theignoredPatches = new List<string>();

                if (dgv_ignorePatches.IsCurrentCellDirty)
                {
                    dgv_ignorePatches.CommitEdit(DataGridViewDataErrorContexts.Commit);
                }

                foreach (DataGridViewRow aRow in dgv_ignorePatches.Rows)
                {
                    try
                    {
                        string tmpKBID = aRow.Cells["c_ignorepatches_KBID"].Value.ToString();
                        string tmpName = aRow.Cells["c_ignorepatches_LocalizedDisplayName"].Value.ToString();
                        string tmpProduct = aRow.Cells["c_ignorepatches_Product"].Value.ToString();
                        string tmpClassification = aRow.Cells["c_ignorepatches_Classification"].Value.ToString();


                        if (tmpKBID != "" & tmpKBID != null && tmpName != "" && tmpName != null && tmpProduct != "" && tmpProduct != null && tmpClassification != "" && tmpClassification != null)
                        {
                            theignoredPatches.Add(tmpKBID + "|" + tmpName + "|" + tmpProduct + "|" + tmpClassification); // Commit the current row for storage
                        }
                    }
                    catch (Exception ee)
                    {

                    }
                }

                setRegistry("PatchIgnorePatches", theignoredPatches.ToArray()); // Write back the registry

                globalObjects.GlobalClass.globalignorepatchesCollection = ignorepatchesconvertfromReg(theignoredPatches.ToArray());
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Ignored Patches in the registry - " + ee.Message, false);
            }
        }

        private void tb_packagesourcePath_TextChanged(object sender, EventArgs e)
        {
            try
            {
                // Try to catch \ on the end of packagesourcepath

                string packageSource = tb_packagesourcePath.Text;

                if (packageSource.EndsWith(@"\"))
                {
                    packageSource = packageSource.Substring(0, packageSource.Length - 1);

                    tb_packagesourcePath.Text = packageSource;
                }

                string packageFolder = tb_packageFolder.Text;

                if (packageFolder.StartsWith(@"\"))
                {
                    packageFolder = packageFolder.Substring(1, packageFolder.Length - 1);

                    tb_packageFolder.Text = packageFolder;
                }
                if (packageFolder.EndsWith(@"\"))
                {
                    packageFolder = packageFolder.Substring(0, packageFolder.Length - 1);

                    tb_packageFolder.Text = packageFolder;
                }       

                setRegistry("PatchPackageSourceLocation", packageSource);

                globalObjects.GlobalClass.uncPath = packageSource + @"\" + packageFolder;

                globalObjects.GlobalClass.patchpathUNC = packageSource;
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Package Source Location in the registry - " + ee.Message, false);
            }
        }

        private void tb_packageFolder_TextChanged(object sender, EventArgs e)
        {
            try
            {
                string packageFolder = tb_packageFolder.Text;

                if (packageFolder.StartsWith(@"\"))
                {
                    packageFolder = packageFolder.Substring(1, packageFolder.Length - 1);

                    tb_packageFolder.Text = packageFolder;
                }
                if (packageFolder.EndsWith(@"\"))
                {
                    packageFolder = packageFolder.Substring(0, packageFolder.Length - 1);

                    tb_packageFolder.Text = packageFolder;
                }

                setRegistry("PatchPackageFolder", packageFolder);

                string packageSource = tb_packagesourcePath.Text;

                if (packageSource.EndsWith("/"))
                {
                    packageSource = packageSource.Substring(0, packageSource.Length - 1);

                    tb_packagesourcePath.Text = packageSource;
                }

                // Set the globals

                globalObjects.GlobalClass.uncPath = packageSource + @"\" + packageFolder;

                globalObjects.GlobalClass.patchfolderPath = packageFolder;
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Package Source Folder in the registry - " + ee.Message, false);
            }
        }

        private void tb_ooc_Tag_TextChanged(object sender, EventArgs e)
        {
            try
            {
                setRegistry("PatchOutofCycleTag", tb_ooc_Tag.Text);

                globalObjects.GlobalClass.oocTag = tb_ooc_Tag.Text;
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Patch Out of Cycle Tag in the registry - " + ee.Message, false);

                globalObjects.GlobalClass.uncPath = "OOC";
            }
        }

        private void cb_patchnamingDelimiter_SelectedIndexChanged(object sender, EventArgs e)
        {
            try
            {
                if (globalObjects.GlobalClass.loadthreadRunning)
                {
                    setRegistry("PatchNamingDelimiter", cb_patchnamingDelimiter.Text);

                    globalObjects.GlobalClass.namingDelimiter = cb_patchnamingDelimiter.Text;
                }
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Patch Naming Delimiter in the registry - " + ee.Message, false);
            }
        }

        private void unlocknamingBar()
        {
            flp_namingSelections.Enabled = true;
            tb_addTextbox.Enabled = true;
            b_addDay.Enabled = true;
            b_addMonth.Enabled = true;
            b_addYear.Enabled = true;
            // b_addProduct.Enabled = true;
            b_addClassification.Enabled = true;
            b_addArchitecture.Enabled = true;
            b_addOOC.Enabled = true;
            cb_patchnamingDelimiter.Enabled = true;
        }

        private void locknamingBar()
        {
            flp_namingSelections.Enabled = false;
            tb_addTextbox.Enabled = false;
            b_addDay.Enabled = false;
            b_addMonth.Enabled = false;
            b_addYear.Enabled = false;
            // b_addProduct.Enabled = false;
            b_addClassification.Enabled = false;
            b_addArchitecture.Enabled = false;
            b_addOOC.Enabled = false;
            cb_patchnamingDelimiter.Enabled = false;
        }

        private void cb_unlocknamingBar_CheckedChanged(object sender, EventArgs e)
        {

            if (cb_unlocknamingBar.Checked) // Then it is unlocked
            {
                setRegistry("PatchNamingBarLock", "Unlocked");

                unlocknamingBar();
            }
            else // It is locked
            {
                setRegistry("PatchNamingBarLock", "Locked");

                locknamingBar();
            }
        }

        private void tb_addTextbox_TextChanged(object sender, EventArgs e)
        {

        }

        private void b_addLanguage_Click(object sender, EventArgs e)
        {

        }

        private void cb_timeMachine_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                if (cb_timemachine_Day.Text != "" && cb_timemachine_Day.Text != null && cb_timemachine_Month.Text != "" && cb_timemachine_Month.Text != null && cb_timemachine_Year.Text != "" && cb_timemachine_Year.Text != null)
                {
                    bool tmpValue = cb_timeMachine.Checked;

                    if (tmpValue)
                    {
                        pb_Tom.Image = loadimagefromString(tombakerStringOn);

                        globalObjects.GlobalClass.GlobalTimeMachine = true;

                        buildPreview();
                    }
                    else
                    {
                        pb_Tom.Image = loadimagefromString(tombakerStringOff);

                        globalObjects.GlobalClass.GlobalTimeMachine = false;

                        buildPreview();
                    }
                }
                else
                {
                    sharedlogMessage("Cannot enable the time machine, Tom Baker requires Day, Month and Year to be selected for the time machine to function, elementary when you think about it", false);
                }
            }
        }

        private void b_removeselectedRule_Click(object sender, EventArgs e)
        {
            // Remove the currently selected row from dgv_Transcript

            try
            {
                DataGridViewSelectedRowCollection theselectedRows = dgv_Transcript.SelectedRows;

                foreach (DataGridViewRow aRow in theselectedRows)
                {
                    dgv_Transcript.Rows.RemoveAt(aRow.Index);
                }

                storerulesinRegistry();
            }
            catch (Exception ee)
            {

            }
        }


        private void b_removeDeployment_Click(object sender, EventArgs e)
        {
            try
            {
                DataGridViewSelectedRowCollection theselectedRows = dgv_Deployments.SelectedRows;

                foreach (DataGridViewRow aRow in theselectedRows)
                {
                    dgv_Deployments.Rows.RemoveAt(aRow.Index);
                }

                storedeploymentsinRegistry();
            }
            catch (Exception ee)
            {

            }
        }


        private void b_removesecurityScope_Click(object sender, EventArgs e)
        {
            try
            {
                DataGridViewSelectedRowCollection theselectedRows = dgv_SecurityScopes.SelectedRows;

                foreach (DataGridViewRow aRow in theselectedRows)
                {
                    dgv_SecurityScopes.Rows.RemoveAt(aRow.Index);
                }

                storesecurityscopesinRegistry();
            }
            catch (Exception ee)
            {

            }
        }

        private void cb_deployment_enableWOL_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_enableWOL.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "WoLEnabled", changeState);
            }
        }

        private void cb_deployment_delayEnforcement_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_delayEnforcement.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "SoftDeadlineEnabled", changeState);
            }
        }

        private void cb_deployment_deadlinerestart_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_deadlinerestart.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "RebootOutsideOfServiceWindows", changeState);
            }
        }

        private void cb_deployment_suppressServers_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                int tosendInt = 3;

                if (cb_deployment_supressServers.Checked && cb_deployment_supressWorkstations.Checked) tosendInt = 3;

                if (cb_deployment_supressServers.Checked && !cb_deployment_supressWorkstations.Checked) tosendInt = 2;

                if (!cb_deployment_supressServers.Checked && cb_deployment_supressWorkstations.Checked) tosendInt = 1;

                if (!cb_deployment_supressServers.Checked && !cb_deployment_supressWorkstations.Checked) tosendInt = 0;

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "SuppressReboot", tosendInt);
            }
        }

        private void cb_deployment_supressWorkstations_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                int tosendInt = 3;

                if (cb_deployment_supressServers.Checked && cb_deployment_supressWorkstations.Checked) tosendInt = 3;

                if (cb_deployment_supressServers.Checked && !cb_deployment_supressWorkstations.Checked) tosendInt = 2;

                if (!cb_deployment_supressServers.Checked && cb_deployment_supressWorkstations.Checked) tosendInt = 1;

                if (!cb_deployment_supressServers.Checked && !cb_deployment_supressWorkstations.Checked) tosendInt = 0;

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "SuppressReboot", tosendInt);
            }
        }

        private void cb_deployment_commitFilter_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_commitFilter.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "PersistOnWriteFilterDevices", changeState);
            }
        }

        private void cb_deployment_Evaluation_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_Evaluation.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "RequirePostRebootFullScan", changeState);
            }
        }

        private void cb_deployment_dowloadNeighbour_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                int tosendInt = 3;

                if (cb_deployment_downloadNeighbour.Checked && cb_deployment_defaultFallback.Checked) tosendInt = 80;

                if (cb_deployment_downloadNeighbour.Checked && !cb_deployment_defaultFallback.Checked) tosendInt = 131152;

                if (!cb_deployment_downloadNeighbour.Checked && cb_deployment_defaultFallback.Checked) tosendInt = 16;

                if (!cb_deployment_downloadNeighbour.Checked && !cb_deployment_defaultFallback.Checked) tosendInt = 131088;

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "DPLocality", tosendInt);
            }
        }

        private void cb_deployment_defaultFallback_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                int tosendInt = 3;

                if (cb_deployment_downloadNeighbour.Checked && cb_deployment_defaultFallback.Checked) tosendInt = 80;

                if (cb_deployment_downloadNeighbour.Checked && !cb_deployment_defaultFallback.Checked) tosendInt = 131152;

                if (!cb_deployment_downloadNeighbour.Checked && cb_deployment_defaultFallback.Checked) tosendInt = 16;

                if (!cb_deployment_downloadNeighbour.Checked && !cb_deployment_defaultFallback.Checked) tosendInt = 131088;

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "DPLocality", tosendInt);
            }
        }

        private void cb_deployment_usemsUpdates_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_usemsUpdates.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }
            }
        }

        private void cb_deployment_allowMetered_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_allowMetered.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                setRegistry("PatchDeploymentAllowMetered", changeState);
                globalObjects.GlobalClass.deployment_allowMetered = changeState;
            }
        }

        private void cb_deployment_useBranchcache_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_useBranchcache.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "UseBranchCache", changeState);
            }
        }

        private void b_removeDP_Click(object sender, EventArgs e)
        {
            try
            {
                globalObjects.distributionpointCollection newdistributionpointCollection = new globalObjects.distributionpointCollection();

                newdistributionpointCollection = globalObjects.GlobalClass.distributionpointRules;

                DataGridViewSelectedRowCollection theselectedRows = dgv_distributionPoints.SelectedRows;

                foreach (DataGridViewRow aDgv in theselectedRows)
                {
                    int i = 0;

                    foreach (globalObjects.distributionpointItem adistributionpointItem in globalObjects.GlobalClass.distributionpointRules)
                    {
                        if (adistributionpointItem.Name == aDgv.Cells["c_dp_Name"].Value.ToString())
                        {
                            newdistributionpointCollection.Remove(i);
                        }

                        i++;
                    }

                    foreach (DataGridViewRow aRow in theselectedRows)
                    {
                        dgv_distributionPoints.Rows.RemoveAt(aRow.Index);
                    }
                }

                globalObjects.GlobalClass.distributionpointRules = newdistributionpointCollection;

                storedpinRegistry();
            }
            catch (Exception ee)
            {

            }
        }

        private void b_createPath_Click(object sender, EventArgs e)
        {
            try
            {
                System.Diagnostics.Process.Start(tb_packagesourcePath.Text + @"\" + tb_packageFolder.Text);
            }
            catch (Exception ee)
            {

            }
        }
        private void cb_createreportingSUGS_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchAllowReporting", cb_createreportingSUGS.Checked);

            globalObjects.GlobalClass.allowreportingSUGS = cb_createreportingSUGS.Checked;

            buildPreview();
        }

        private void tsmi_ignorePatch_Click(object sender, EventArgs e)
        {
            // Add the patches to the Ignore Patches list and store it in the registry

            if (!globalObjects.GlobalClass.buildthreadRunning)
            {
                try
                {
                    DataGridViewSelectedRowCollection dgvCol = dgv_availablePatches.SelectedRows;

                    foreach (DataGridViewRow aRow in dgvCol)
                    {
                        dgv_ignorePatches.Rows.Add(aRow.Cells[1].Value.ToString(), aRow.Cells[2].Value.ToString(), aRow.Cells[3].Value.ToString(), aRow.Cells[4].Value.ToString());
                    }

                    storeignorepatchesinRegistry();

                    docheckforPatches();
                }
                catch (Exception ee)
                {

                }
            }
        }

        private void rptsmi_removeignoredPatch_Click(object sender, EventArgs e)
        {
            // Remove the patches from the Ignore Patches list and store it in the registry

            if (!globalObjects.GlobalClass.buildthreadRunning)
            {
                try
                {
                    DataGridViewSelectedRowCollection theselectedRows = dgv_ignorePatches.SelectedRows;

                    foreach (DataGridViewRow aRow in theselectedRows)
                    {
                        try
                        {
                            dgv_ignorePatches.Rows.RemoveAt(aRow.Index);
                        }
                        catch (Exception ee)
                        {

                        }
                    }

                    storeignorepatchesinRegistry();

                    docheckforPatches();
                }
                catch (Exception ee)
                {

                }
            }
        }

        private void flp_namingSelections_Paint(object sender, PaintEventArgs e)
        {

        }

        private void cb_deployment_limitstatemsgverbosity_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_limitstatemsgverbosity.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "LimitStateMessageVerbosity", changeState);
            }
        }

        private void cb_deployment_logtowinEvent_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_logtowinEvent.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "LogComplianceToWinEvent", changeState);
            }
        }

        private void cb_deployment_notifyUser_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_notifyUser.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "NotifyUser", changeState);
            }
        }

        private void cb_deployment_raisemomalertsonFailure_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_raisemomalertsonFailure.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "RaiseMomAlertsOnFailure", changeState);
            }
        }

        private void cb_deployment_senddetailednonCompliance_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_senddetailednonCompliance.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "SendDetailedNonComplianceStatus", changeState);
            }
        }

        private void cb_deployment_useutcTimes_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_useutcTimes.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "UseGMTTimes", changeState);
            }
        }

        private void cb_deployment_useruiExperience_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_useruiExperience.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "UserUIExperience", changeState);
            }
        }

        private void cb_deployment_disablemomAlerts_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_disablemomAlerts.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "DisableMomAlerts", changeState);
            }
        }

        private void checkBox14_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void checkBox10_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void checkBox9_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void cb_deployment_statemessageVerbosity_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "StateMessageVerbosity", cb_deployment_statemessageVerbosity.Text);
            }
        }

        private void groupBox6_Enter(object sender, EventArgs e)
        {

        }

        private void cb_deployment_statemessagePriority_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "StateMessagePriority", cb_deployment_statemessagePriority.Text);
            }
        }

        private void cb_overrideserviceWindows_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_overrideserviceWindows.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "OverrideServiceWindows", changeState);
            }
        }

        private void populateCheckboxes()
        {
            foreach (globalObjects.deploymentProperty adeploymentProperty in globalObjects.GlobalClass.globaldeploymentpropertiesCollection)
            {
                if (adeploymentProperty.DeviceGroup == cb_deploymentdeviceGroup.Text.ToString())
                {
                    globalObjects.GlobalClass.disableProcessing = true;

                    cb_deployment_disablemomAlerts.Checked = adeploymentProperty.DisableMomAlerts;

                    // Handle SupressReboot Bitmask

                    if (adeploymentProperty.SuppressReboot == 3)
                    {
                        cb_deployment_supressServers.Checked = true;
                        cb_deployment_supressWorkstations.Checked = true;
                    }

                    if (adeploymentProperty.SuppressReboot == 2)
                    {
                        cb_deployment_supressServers.Checked = true;
                        cb_deployment_supressWorkstations.Checked = false;
                    }

                    if (adeploymentProperty.SuppressReboot == 1)
                    {
                        cb_deployment_supressServers.Checked = false;
                        cb_deployment_supressWorkstations.Checked = true;
                    }

                    if (adeploymentProperty.SuppressReboot == 0)
                    {
                        cb_deployment_supressServers.Checked = false;
                        cb_deployment_supressWorkstations.Checked = false;
                    }

                    // Handle DPLocality Bitmask Combinations (expect Metering and WUMU)

                    if (adeploymentProperty.DPLocality == 80)
                    {
                        cb_deployment_downloadNeighbour.Checked = true;
                        cb_deployment_defaultFallback.Checked = true;
                    }

                    if (adeploymentProperty.DPLocality == 131152)
                    {
                        cb_deployment_downloadNeighbour.Checked = true;
                        cb_deployment_defaultFallback.Checked = false;
                    }

                    if (adeploymentProperty.DPLocality == 16)
                    {
                        cb_deployment_downloadNeighbour.Checked = false;
                        cb_deployment_defaultFallback.Checked = true;
                    }

                    if (adeploymentProperty.DPLocality == 131088)
                    {
                        cb_deployment_downloadNeighbour.Checked = false;
                        cb_deployment_defaultFallback.Checked = false;
                    }

                    cb_deployment_limitstatemsgverbosity.Checked = adeploymentProperty.LimitStateMessageVerbosity;

                    cb_deployment_logtowinEvent.Checked = adeploymentProperty.LogComplianceToWinEvent;

                    cb_deployment_notifyUser.Checked = adeploymentProperty.NotifyUser;

                    cb_deployment_overrideserviceWindows.Checked = adeploymentProperty.OverrideServiceWindows;

                    cb_deployment_commitFilter.Checked = adeploymentProperty.PersistOnWriteFilterDevices;

                    cb_deployment_raisemomalertsonFailure.Checked = adeploymentProperty.RaiseMomAlertsOnFailure;

                    cb_deployment_deadlinerestart.Checked = adeploymentProperty.RebootOutsideOfServiceWindows;

                    cb_deployment_Evaluation.Checked = adeploymentProperty.RequirePostRebootFullScan;

                    cb_deployment_senddetailednonCompliance.Checked = adeploymentProperty.SendDetailedNonComplianceStatus;

                    cb_deployment_delayEnforcement.Checked = adeploymentProperty.SoftDeadlineEnabled;

                    cb_deployment_statemessagePriority.Text = adeploymentProperty.StateMessagePriority;

                    cb_deployment_statemessageVerbosity.Text = adeploymentProperty.StateMessageVerbosity;

                    cb_deployment_useBranchcache.Checked = adeploymentProperty.UseBranchCache;

                    cb_deployment_useutcTimes.Checked = adeploymentProperty.UseGMTTimes;

                    cb_deployment_useruiExperience.Checked = adeploymentProperty.UserUIExperience;

                    cb_deployment_enableWOL.Checked = adeploymentProperty.WoLEnabled;

                    cb_deployment_RandomizationEnabled.Checked = adeploymentProperty.RandomizationEnabled;

                    globalObjects.GlobalClass.disableProcessing = false;

                    break;
                }
            }
        }

        private void cb_deploymentdeviceGroup_SelectedIndexChanged(object sender, EventArgs e)
        {
            // Get selected Device Groups Deployment Properties and configure the panels items

            if (!globalObjects.GlobalClass.disableProcessing)
            {
                populateCheckboxes();

                // Not enough elements in the array for deployment properties, think it is causing them to be dropped!
            }
        }

        private void handledevicegroupdeploymentpropertyChange(string deviceGroup, string deploymentProperty, object deploymentpropertyValue)
        {
            foreach (globalObjects.deploymentProperty adeploymentProperty in globalObjects.GlobalClass.globaldeploymentpropertiesCollection)
            {
                if (adeploymentProperty.DeviceGroup == deviceGroup) // find the device group in the collection
                {
                    // change the objects property

                    switch (deploymentProperty)
                    {
                        case "DisableMomAlerts":

                            adeploymentProperty.DisableMomAlerts = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "DPLocality":

                            adeploymentProperty.DPLocality = Convert.ToInt32(deploymentpropertyValue);

                            break;
                        case "LimitStateMessageVerbosity":

                            adeploymentProperty.LimitStateMessageVerbosity = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "LogComplianceToWinEvent":

                            adeploymentProperty.LogComplianceToWinEvent = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "NotifyUser":

                            adeploymentProperty.NotifyUser = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "OverrideServiceWindows":

                            adeploymentProperty.OverrideServiceWindows = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "PersistOnWriteFilterDevices":

                            adeploymentProperty.PersistOnWriteFilterDevices = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "RaiseMomAlertsOnFailure":

                            adeploymentProperty.RaiseMomAlertsOnFailure = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "RebootOutsideOfServiceWindows":

                            adeploymentProperty.RebootOutsideOfServiceWindows = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "RequirePostRebootFullScan":

                            adeploymentProperty.RequirePostRebootFullScan = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "SendDetailedNonComplianceStatus":

                            adeploymentProperty.SendDetailedNonComplianceStatus = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "SoftDeadlineEnabled":

                            adeploymentProperty.SoftDeadlineEnabled = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "StateMessagePriority":

                            adeploymentProperty.StateMessagePriority = Convert.ToString(deploymentpropertyValue);

                            break;
                        case "StateMessageVerbosity":

                            adeploymentProperty.StateMessageVerbosity = Convert.ToString(deploymentpropertyValue);

                            break;
                        case "SuppressReboot":

                            adeploymentProperty.SuppressReboot = Convert.ToInt16(deploymentpropertyValue);

                            break;
                        case "UseBranchCache":

                            adeploymentProperty.UseBranchCache = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "UseGMTTimes":

                            adeploymentProperty.UseGMTTimes = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "UserUIExperience":

                            adeploymentProperty.UserUIExperience = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "WoLEnabled":

                            adeploymentProperty.WoLEnabled = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                        case "RandomizationEnabled":

                            adeploymentProperty.RandomizationEnabled = Convert.ToBoolean(deploymentpropertyValue);

                            break;
                    }
                }
            }

            // Store the device group collection into the registry

            string[] readyforRegistry = deploymentpropertyconverttoReg(globalObjects.GlobalClass.globaldeploymentpropertiesCollection); // Returns a string array

            setRegistry("PatchDeploymentProperties", readyforRegistry);

            globalObjects.GlobalClass.globaldeploymentpropertiesCollection = deploymentpropertyconvertfromReg(readyforRegistry); // Converts from string array to globalObjects.deploymentpropertyCollection
        }

        private void cb_deploymentdeviceGroup_SelectedValueChanged(object sender, EventArgs e)
        {

        }

        private void b_Debug_Click(object sender, EventArgs e)
        {
            globalObjects.deploymentpropertyCollection testA = globalObjects.GlobalClass.globaldeploymentpropertiesCollection;
        }

        private void cb_deployment_RandomizationEnabled_CheckedChanged(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.disableProcessing)
            {
                bool changeState = false;

                if (cb_deployment_RandomizationEnabled.Checked)
                {
                    changeState = true;
                }
                else
                {
                    changeState = false;
                }

                handledevicegroupdeploymentpropertyChange(cb_deploymentdeviceGroup.Text, "RandomizationEnabled", changeState);
            }
        }

        private void cb_dpList_SelectedIndexChanged(object sender, EventArgs e)
        {

        }

        private void gb_namingBar_Enter(object sender, EventArgs e)
        {

        }

        private void dgv_Deployments_CellClick(object sender, DataGridViewCellEventArgs e)
        {
            if (e.RowIndex != -1)
            {
                if (e.ColumnIndex == 6) // Available Time
                {

                }

                if (e.ColumnIndex == 8) // Deadline Time
                {

                }
            }
        }

        private void splitContainer1_Panel2_Paint(object sender, PaintEventArgs e)
        {

        }

        private void b_locatesupersedPatches_Click(object sender, EventArgs e)
        {
            sharedlogMessage("Initiating detection of superceded patches in Software Update Groups", false);

            disableInterface();

            dgv_supersededPatches.Rows.Clear();

            // Start the SUM Cleanup Detection thread (finds superseded patches)

            BackgroundWorker bwsumcleanupDetect = new BackgroundWorker();
            bwsumcleanupDetect.WorkerSupportsCancellation = true;
            bwsumcleanupDetect.WorkerReportsProgress = true;
            bwsumcleanupDetect.DoWork +=
                new DoWorkEventHandler(bw_sumcleanupDetect_DoWork);
            bwsumcleanupDetect.ProgressChanged +=
                new ProgressChangedEventHandler(bw_sumcleanupDetect_ProgressChanged);
            bwsumcleanupDetect.RunWorkerCompleted +=
                new RunWorkerCompletedEventHandler(bw_sumcleanupDetect_RunWorkerCompleted);

            if (bwsumcleanupDetect.IsBusy != true)
            {
                bwsumcleanupDetect.RunWorkerAsync(false);

                b_locatesupersedPatches.Enabled = false;

                b_removesupersededPatches.Enabled = false;

                globalObjects.GlobalClass.sumcleanupdetectthreadRunning = true;
            }
        }

        private void b_removesupersededPatches_Click(object sender, EventArgs e)
        {
            if (!globalObjects.GlobalClass.sumcleanupthreadRunning || globalObjects.GlobalClass.globalsupersedpatchesCollection.Count > 0) // Do nothing if detect thread is running
            {
                tc_Main.SelectedTab = tb_Log; // Switch to log view so user can see the status updates

                // Start the SUM Cleanup thread

                BackgroundWorker bwsumCleanup = new BackgroundWorker();
                bwsumCleanup.WorkerSupportsCancellation = true;
                bwsumCleanup.WorkerReportsProgress = true;
                bwsumCleanup.DoWork +=
                    new DoWorkEventHandler(bw_sumCleanup_DoWork);
                bwsumCleanup.ProgressChanged +=
                    new ProgressChangedEventHandler(bw_sumCleanup_ProgressChanged);
                bwsumCleanup.RunWorkerCompleted +=
                    new RunWorkerCompletedEventHandler(bw_sumCleanup_RunWorkerCompleted);

                if (bwsumCleanup.IsBusy != true)
                {
                    bwsumCleanup.RunWorkerAsync();

                    b_locatesupersedPatches.Enabled = false;

                    b_removesupersededPatches.Enabled = false;

                    globalObjects.GlobalClass.sumcleanupthreadRunning = true;
                }
            }
        }

        private void b_getwsusPatches_Click(object sender, EventArgs e)
        {

        }

        private void b_invokewsusCleanup_Click(object sender, EventArgs e)
        {
            sharedlogMessage("Invoking WSUS Cleanup Manager", false);

            try
            {
                ICleanupManager manager = globalObjects.GlobalClass.wsusManagement.GetCleanupManager();

                CleanupScope scope = new CleanupScope();

                scope.CleanupUnneededContentFiles = true;
                scope.CleanupObsoleteComputers = false;
                scope.DeclineExpiredUpdates = true;
                scope.DeclineSupersededUpdates = true;
                scope.CleanupObsoleteUpdates = true;

                sharedlogMessage("Invoking WSUS Cleanup Manager", false);

                CleanupResults r = manager.PerformCleanup(scope);

                long diskFreed = r.DiskSpaceFreed;

                // String msg = String.Format(“{ 0}”, diskFreed);
            }
            catch (Exception ee)
            {
                sharedlogMessage("WSUS Error: " + ee.Message, false);
            }
        }

        private void b_adddwsusRule_Click(object sender, EventArgs e)
        {
            dgv_cmdCollection.Rows.Add(cb_wsusAction.Text, cb_wsus_Type.Text, cb_wsus_Text.Text);
        }

        private void cb_oocEnabled_CheckedChanged(object sender, EventArgs e)
        {

        }

        private void cb_runsumCleanup_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchRunSUMCleanupPostBuild", cb_runsumCleanup.Checked);

            globalObjects.GlobalClass.patchrunsumcleanuppostBuild = cb_runsumCleanup.Checked;
        }

        private void nud_downloadRetry_ValueChanged(object sender, EventArgs e)
        {
            try
            {
                if (!globalObjects.GlobalClass.loadthreadRunning)
                {
                    setRegistry("PatchDownloadFailureRetry", nud_downloadRetry.Value.ToString());

                    globalObjects.GlobalClass.DownloadFailureRetry = nud_downloadRetry.Value.ToString();
                }
            }
            catch (Exception ee)
            {
                sharedlogMessage("Could not set the Patch download failure retry value in the registry - " + ee.Message, false);

                globalObjects.GlobalClass.DownloadFailureRetry = "6";
            }
        }

        private void cb_timemachine_Day_SelectedIndexChanged(object sender, EventArgs e)
        {
            globalObjects.GlobalClass.GlobalTimeMachineDay = cb_timemachine_Day.Text;
        }

        private void cb_timemachine_Month_SelectedIndexChanged(object sender, EventArgs e)
        {
            globalObjects.GlobalClass.GlobalTimeMachineMonth = cb_timemachine_Month.Text;
        }

        private void cb_timemachine_Year_SelectedIndexChanged(object sender, EventArgs e)
        {
            globalObjects.GlobalClass.GlobalTimeMachineYear = cb_timemachine_Year.Text;
        }

        private void b_openLog_Click(object sender, EventArgs e)
        {
            var patchmasterProcess = System.Diagnostics.Process.GetCurrentProcess();

            string patchmasterloggingPath = patchmasterProcess.MainModule.FileName.ToString();

            patchmasterProcess = System.Diagnostics.Process.GetCurrentProcess();

            string fileName = Path.GetFileName(patchmasterProcess.MainModule.FileName.ToString());

            patchmasterloggingPath = patchmasterloggingPath.Replace(@"\" + fileName, "") + @"\PatchMaster.log";

            try
            {
                System.Diagnostics.Process.Start(patchmasterloggingPath);
            }
            catch (Exception ee)
            {

            }
        }

        private void dgv_availablePatches_CellContentDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            string actualkbID = "";

            if (e.RowIndex >= 0) // If row header selected, skip over
            {
                try
                {
                    DataGridViewRow kbidRow = dgv_availablePatches.Rows[e.RowIndex];

                    actualkbID = kbidRow.Cells["c_ap_PatchKB"].Value.ToString();
                }
                catch (Exception ee)
                {

                }

                if (actualkbID != "")
                {
                    try
                    {
                        System.Diagnostics.Process.Start("https://www.support.microsoft.com/kb/" + actualkbID);
                    }
                    catch (Exception ee)
                    {

                    }
                }
            }
        }

        private void dgv_ignorePatches_CellContentDoubleClick(object sender, DataGridViewCellEventArgs e)
        {
            string actualkbID = "";

            if (e.RowIndex >= 0) // If row header selected, skip over
            {
                try
                {
                    DataGridViewRow kbidRow = dgv_ignorePatches.Rows[e.RowIndex];

                    actualkbID = kbidRow.Cells["c_ignorepatches_KBID"].Value.ToString();
                }
                catch (Exception ee)
                {

                }

                if (actualkbID != "")
                {
                    try
                    {
                        System.Diagnostics.Process.Start("https://www.support.microsoft.com/kb/" + actualkbID);
                    }
                    catch (Exception ee)
                    {

                    }
                }
            }
        }

        private void dgv_Transcript_CellEndEdit(object sender, DataGridViewCellEventArgs e)
        {
            //for (int i = 0; i <= dgv_Transcript.Columns.Count - 1; i++)
            //{
            //    //store autosized widths
            //    int colw = dgv_Transcript.Columns[i].Width;
            //    //remove autosizing
            //    dgv_Transcript.Columns[i].AutoSizeMode = DataGridViewAutoSizeColumnMode.None;
            //    //set width to calculated by autosize
            //    dgv_Transcript.Columns[i].Width = colw;
            //}


            //for (int i = 0; i < dgv_Transcript.Columns.Count - 1; i++)
            //{
            //    dgv_Transcript.Columns[i].AutoSizeMode = DataGridViewAutoSizeColumnMode.AllCells;
            //}
            //dgv_Transcript.Columns[dgv_Transcript.Columns.Count - 1].AutoSizeMode = DataGridViewAutoSizeColumnMode.Fill;

            //for (int i = 0; i < dgv_Transcript.Columns.Count; i++)
            //{
            //    int colw = dgv_Transcript.Columns[i].Width;
            //    dgv_Transcript.Columns[i].AutoSizeMode = DataGridViewAutoSizeColumnMode.None;
            //    dgv_Transcript.Columns[i].Width = colw;
            //}
        }

        private void cb_rollupclientOS_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchRollupClientSUGS", cb_rollupclientOS.Checked);

            globalObjects.GlobalClass.rollupclientOS = cb_rollupclientOS.Checked;

            buildPreview();
        }

        private void cb_rollupserverOS_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchRollupServerSUGS", cb_rollupserverOS.Checked);

            globalObjects.GlobalClass.rollupserverOS = cb_rollupserverOS.Checked;

            buildPreview();
        }

        private void cb_rollupOffice_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchRollupOfficeSUGS", cb_rollupOffice.Checked);

            globalObjects.GlobalClass.rollupoffice = cb_rollupOffice.Checked;

            buildPreview();
        }

        private void cb_forceScan_CheckedChanged(object sender, EventArgs e)
        {
            setRegistry("PatchForceScan", cb_forceScan.Checked);

            globalObjects.GlobalClass.forceScan = cb_forceScan.Checked;
        }

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }

        private void doReport()
        {
            List<string> theReport = new List<string>();

            const string aComma = ",";

            if (globalObjects.GlobalClass.globalsugItems.Count > 0) // Check if there are any SUG's and Patches to report on
            {
                // List SUGs

                theReport.Add("SUG Name, SUG Type , Device Group, Total Patches");

                foreach (globalObjects.sugItem asugItem in globalObjects.GlobalClass.globalsugItems)
                {
                    theReport.Add(asugItem.sugName + aComma + asugItem.SUGType + aComma + asugItem.DeviceType + aComma + asugItem.TotalPatches);
                }

                // List Patches

                theReport.Add("Localized Display Name, Article ID, Classification, Architecture, Product, Date Created, Date Last Modified, Date Posted, Date Revised, CI_ID, CI_UniqueID");

                foreach (globalObjects.candidatesccmPatch acandidatesccmPatch in globalObjects.GlobalClass.candidatePatches)
                {
                    theReport.Add(acandidatesccmPatch.LocalizedDisplayName + aComma + acandidatesccmPatch.ArticleID + aComma + acandidatesccmPatch.Classification + aComma + acandidatesccmPatch.Architecture + aComma + acandidatesccmPatch.Product + aComma + acandidatesccmPatch.DateCreated + aComma + acandidatesccmPatch.DateLastModified + aComma + acandidatesccmPatch.DatePosted + aComma + acandidatesccmPatch.DateRevised + aComma + acandidatesccmPatch.CI_ID + aComma + acandidatesccmPatch.CI_UniqueID);
                }
            }

            foreach (string aReport in theReport)
            {
                sharedlogMessage(aReport, false);
            }
        }

        private void b_Report_Click(object sender, EventArgs e)
        {
            doReport();
        }

        private void rtb_tAbout_TextChanged(object sender, EventArgs e)
        {

        }

        private void splitContainer2_Panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void dgv_Transcript_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void tb_Config_Click(object sender, EventArgs e)
        {

        }

        private void dgv_distributionPoints_RowPrePaint(object sender, DataGridViewRowPrePaintEventArgs e)
        {
            dgv_distributionPoints.Rows[e.RowIndex].DefaultCellStyle.BackColor = Color.Beige;
            dgv_distributionPoints.Rows[e.RowIndex].DefaultCellStyle.ForeColor = Color.Black;
        }
    }

}